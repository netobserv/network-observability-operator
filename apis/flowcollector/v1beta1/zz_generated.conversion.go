//go:build !ignore_autogenerated_core
// +build !ignore_autogenerated_core

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	unsafe "unsafe"

	v1beta2 "github.com/netobserv/network-observability-operator/apis/flowcollector/v1beta2"
	v2 "k8s.io/api/autoscaling/v2"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*CertificateReference)(nil), (*v1beta2.CertificateReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_CertificateReference_To_v1beta2_CertificateReference(a.(*CertificateReference), b.(*v1beta2.CertificateReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.CertificateReference)(nil), (*CertificateReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_CertificateReference_To_v1beta1_CertificateReference(a.(*v1beta2.CertificateReference), b.(*CertificateReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClientTLS)(nil), (*v1beta2.ClientTLS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ClientTLS_To_v1beta2_ClientTLS(a.(*ClientTLS), b.(*v1beta2.ClientTLS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ClientTLS)(nil), (*ClientTLS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ClientTLS_To_v1beta1_ClientTLS(a.(*v1beta2.ClientTLS), b.(*ClientTLS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ClusterNetworkOperatorConfig)(nil), (*v1beta2.ClusterNetworkOperatorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ClusterNetworkOperatorConfig_To_v1beta2_ClusterNetworkOperatorConfig(a.(*ClusterNetworkOperatorConfig), b.(*v1beta2.ClusterNetworkOperatorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ClusterNetworkOperatorConfig)(nil), (*ClusterNetworkOperatorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ClusterNetworkOperatorConfig_To_v1beta1_ClusterNetworkOperatorConfig(a.(*v1beta2.ClusterNetworkOperatorConfig), b.(*ClusterNetworkOperatorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConsolePluginPortConfig)(nil), (*v1beta2.ConsolePluginPortConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ConsolePluginPortConfig_To_v1beta2_ConsolePluginPortConfig(a.(*ConsolePluginPortConfig), b.(*v1beta2.ConsolePluginPortConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ConsolePluginPortConfig)(nil), (*ConsolePluginPortConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ConsolePluginPortConfig_To_v1beta1_ConsolePluginPortConfig(a.(*v1beta2.ConsolePluginPortConfig), b.(*ConsolePluginPortConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EBPFFlowFilter)(nil), (*v1beta2.EBPFFlowFilter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_EBPFFlowFilter_To_v1beta2_EBPFFlowFilter(a.(*EBPFFlowFilter), b.(*v1beta2.EBPFFlowFilter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.EBPFFlowFilter)(nil), (*EBPFFlowFilter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_EBPFFlowFilter_To_v1beta1_EBPFFlowFilter(a.(*v1beta2.EBPFFlowFilter), b.(*EBPFFlowFilter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EBPFFlowFilterRule)(nil), (*v1beta2.EBPFFlowFilterRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_EBPFFlowFilterRule_To_v1beta2_EBPFFlowFilterRule(a.(*EBPFFlowFilterRule), b.(*v1beta2.EBPFFlowFilterRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.EBPFFlowFilterRule)(nil), (*EBPFFlowFilterRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_EBPFFlowFilterRule_To_v1beta1_EBPFFlowFilterRule(a.(*v1beta2.EBPFFlowFilterRule), b.(*EBPFFlowFilterRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*EBPFMetrics)(nil), (*v1beta2.EBPFMetrics)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_EBPFMetrics_To_v1beta2_EBPFMetrics(a.(*EBPFMetrics), b.(*v1beta2.EBPFMetrics), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.EBPFMetrics)(nil), (*EBPFMetrics)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_EBPFMetrics_To_v1beta1_EBPFMetrics(a.(*v1beta2.EBPFMetrics), b.(*EBPFMetrics), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FLPDeduper)(nil), (*v1beta2.FLPDeduper)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FLPDeduper_To_v1beta2_FLPDeduper(a.(*FLPDeduper), b.(*v1beta2.FLPDeduper), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FLPDeduper)(nil), (*FLPDeduper)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FLPDeduper_To_v1beta1_FLPDeduper(a.(*v1beta2.FLPDeduper), b.(*FLPDeduper), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FLPFilterSet)(nil), (*v1beta2.FLPFilterSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FLPFilterSet_To_v1beta2_FLPFilterSet(a.(*FLPFilterSet), b.(*v1beta2.FLPFilterSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FLPFilterSet)(nil), (*FLPFilterSet)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FLPFilterSet_To_v1beta1_FLPFilterSet(a.(*v1beta2.FLPFilterSet), b.(*FLPFilterSet), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FileReference)(nil), (*v1beta2.FileReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FileReference_To_v1beta2_FileReference(a.(*FileReference), b.(*v1beta2.FileReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FileReference)(nil), (*FileReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FileReference_To_v1beta1_FileReference(a.(*v1beta2.FileReference), b.(*FileReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlowCollectorIPFIX)(nil), (*v1beta2.FlowCollectorIPFIX)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorIPFIX_To_v1beta2_FlowCollectorIPFIX(a.(*FlowCollectorIPFIX), b.(*v1beta2.FlowCollectorIPFIX), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FlowCollectorIPFIX)(nil), (*FlowCollectorIPFIX)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorIPFIX_To_v1beta1_FlowCollectorIPFIX(a.(*v1beta2.FlowCollectorIPFIX), b.(*FlowCollectorIPFIX), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlowCollectorIPFIXReceiver)(nil), (*v1beta2.FlowCollectorIPFIXReceiver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorIPFIXReceiver_To_v1beta2_FlowCollectorIPFIXReceiver(a.(*FlowCollectorIPFIXReceiver), b.(*v1beta2.FlowCollectorIPFIXReceiver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FlowCollectorIPFIXReceiver)(nil), (*FlowCollectorIPFIXReceiver)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorIPFIXReceiver_To_v1beta1_FlowCollectorIPFIXReceiver(a.(*v1beta2.FlowCollectorIPFIXReceiver), b.(*FlowCollectorIPFIXReceiver), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlowCollectorKafka)(nil), (*v1beta2.FlowCollectorKafka)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka(a.(*FlowCollectorKafka), b.(*v1beta2.FlowCollectorKafka), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FlowCollectorKafka)(nil), (*FlowCollectorKafka)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka(a.(*v1beta2.FlowCollectorKafka), b.(*FlowCollectorKafka), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlowCollectorList)(nil), (*v1beta2.FlowCollectorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorList_To_v1beta2_FlowCollectorList(a.(*FlowCollectorList), b.(*v1beta2.FlowCollectorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FlowCollectorList)(nil), (*FlowCollectorList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorList_To_v1beta1_FlowCollectorList(a.(*v1beta2.FlowCollectorList), b.(*FlowCollectorList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlowCollectorPrometheus)(nil), (*v1beta2.FlowCollectorPrometheus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorPrometheus_To_v1beta2_FlowCollectorPrometheus(a.(*FlowCollectorPrometheus), b.(*v1beta2.FlowCollectorPrometheus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FlowCollectorPrometheus)(nil), (*FlowCollectorPrometheus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorPrometheus_To_v1beta1_FlowCollectorPrometheus(a.(*v1beta2.FlowCollectorPrometheus), b.(*FlowCollectorPrometheus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FlowCollectorStatus)(nil), (*v1beta2.FlowCollectorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorStatus_To_v1beta2_FlowCollectorStatus(a.(*FlowCollectorStatus), b.(*v1beta2.FlowCollectorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FlowCollectorStatus)(nil), (*FlowCollectorStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorStatus_To_v1beta1_FlowCollectorStatus(a.(*v1beta2.FlowCollectorStatus), b.(*FlowCollectorStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MetricsServerConfig)(nil), (*v1beta2.MetricsServerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig(a.(*MetricsServerConfig), b.(*v1beta2.MetricsServerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.MetricsServerConfig)(nil), (*MetricsServerConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig(a.(*v1beta2.MetricsServerConfig), b.(*MetricsServerConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OVNKubernetesConfig)(nil), (*v1beta2.OVNKubernetesConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_OVNKubernetesConfig_To_v1beta2_OVNKubernetesConfig(a.(*OVNKubernetesConfig), b.(*v1beta2.OVNKubernetesConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.OVNKubernetesConfig)(nil), (*OVNKubernetesConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_OVNKubernetesConfig_To_v1beta1_OVNKubernetesConfig(a.(*v1beta2.OVNKubernetesConfig), b.(*OVNKubernetesConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PrometheusQuerier)(nil), (*v1beta2.PrometheusQuerier)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_PrometheusQuerier_To_v1beta2_PrometheusQuerier(a.(*PrometheusQuerier), b.(*v1beta2.PrometheusQuerier), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.PrometheusQuerier)(nil), (*PrometheusQuerier)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_PrometheusQuerier_To_v1beta1_PrometheusQuerier(a.(*v1beta2.PrometheusQuerier), b.(*PrometheusQuerier), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*PrometheusQuerierManual)(nil), (*v1beta2.PrometheusQuerierManual)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_PrometheusQuerierManual_To_v1beta2_PrometheusQuerierManual(a.(*PrometheusQuerierManual), b.(*v1beta2.PrometheusQuerierManual), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.PrometheusQuerierManual)(nil), (*PrometheusQuerierManual)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_PrometheusQuerierManual_To_v1beta1_PrometheusQuerierManual(a.(*v1beta2.PrometheusQuerierManual), b.(*PrometheusQuerierManual), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*QuickFilter)(nil), (*v1beta2.QuickFilter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_QuickFilter_To_v1beta2_QuickFilter(a.(*QuickFilter), b.(*v1beta2.QuickFilter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.QuickFilter)(nil), (*QuickFilter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_QuickFilter_To_v1beta1_QuickFilter(a.(*v1beta2.QuickFilter), b.(*QuickFilter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubnetLabel)(nil), (*v1beta2.SubnetLabel)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_SubnetLabel_To_v1beta2_SubnetLabel(a.(*SubnetLabel), b.(*v1beta2.SubnetLabel), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.SubnetLabel)(nil), (*SubnetLabel)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_SubnetLabel_To_v1beta1_SubnetLabel(a.(*v1beta2.SubnetLabel), b.(*SubnetLabel), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SubnetLabels)(nil), (*v1beta2.SubnetLabels)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_SubnetLabels_To_v1beta2_SubnetLabels(a.(*SubnetLabels), b.(*v1beta2.SubnetLabels), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.SubnetLabels)(nil), (*SubnetLabels)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_SubnetLabels_To_v1beta1_SubnetLabels(a.(*v1beta2.SubnetLabels), b.(*SubnetLabels), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DebugConfig)(nil), (*v1beta2.AdvancedAgentConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_DebugConfig_To_v1beta2_AdvancedAgentConfig(a.(*DebugConfig), b.(*v1beta2.AdvancedAgentConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DebugConfig)(nil), (*v1beta2.AdvancedProcessorConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_DebugConfig_To_v1beta2_AdvancedProcessorConfig(a.(*DebugConfig), b.(*v1beta2.AdvancedProcessorConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FLPMetrics)(nil), (*v1beta2.FLPMetrics)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FLPMetrics_To_v1beta2_FLPMetrics(a.(*FLPMetrics), b.(*v1beta2.FLPMetrics), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorAgent)(nil), (*v1beta2.FlowCollectorAgent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorAgent_To_v1beta2_FlowCollectorAgent(a.(*FlowCollectorAgent), b.(*v1beta2.FlowCollectorAgent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorConsolePlugin)(nil), (*v1beta2.FlowCollectorConsolePlugin)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorConsolePlugin_To_v1beta2_FlowCollectorConsolePlugin(a.(*FlowCollectorConsolePlugin), b.(*v1beta2.FlowCollectorConsolePlugin), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorEBPF)(nil), (*v1beta2.FlowCollectorEBPF)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorEBPF_To_v1beta2_FlowCollectorEBPF(a.(*FlowCollectorEBPF), b.(*v1beta2.FlowCollectorEBPF), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorExporter)(nil), (*v1beta2.FlowCollectorExporter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorExporter_To_v1beta2_FlowCollectorExporter(a.(*FlowCollectorExporter), b.(*v1beta2.FlowCollectorExporter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorFLP)(nil), (*v1beta2.FlowCollectorFLP)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorFLP_To_v1beta2_FlowCollectorFLP(a.(*FlowCollectorFLP), b.(*v1beta2.FlowCollectorFLP), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorHPA)(nil), (*v1beta2.FlowCollectorHPA)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorHPA_To_v1beta2_FlowCollectorHPA(a.(*FlowCollectorHPA), b.(*v1beta2.FlowCollectorHPA), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorLoki)(nil), (*v1beta2.FlowCollectorLoki)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorLoki_To_v1beta2_FlowCollectorLoki(a.(*FlowCollectorLoki), b.(*v1beta2.FlowCollectorLoki), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollectorSpec)(nil), (*v1beta2.FlowCollectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollectorSpec_To_v1beta2_FlowCollectorSpec(a.(*FlowCollectorSpec), b.(*v1beta2.FlowCollectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*FlowCollector)(nil), (*v1beta2.FlowCollector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FlowCollector_To_v1beta2_FlowCollector(a.(*FlowCollector), b.(*v1beta2.FlowCollector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*SASLConfig)(nil), (*v1beta2.SASLConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_SASLConfig_To_v1beta2_SASLConfig(a.(*SASLConfig), b.(*v1beta2.SASLConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ServerTLS)(nil), (*v1beta2.ServerTLS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ServerTLS_To_v1beta2_ServerTLS(a.(*ServerTLS), b.(*v1beta2.ServerTLS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.AdvancedAgentConfig)(nil), (*DebugConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_AdvancedAgentConfig_To_v1beta1_DebugConfig(a.(*v1beta2.AdvancedAgentConfig), b.(*DebugConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.AdvancedProcessorConfig)(nil), (*DebugConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_AdvancedProcessorConfig_To_v1beta1_DebugConfig(a.(*v1beta2.AdvancedProcessorConfig), b.(*DebugConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FLPMetrics)(nil), (*FLPMetrics)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FLPMetrics_To_v1beta1_FLPMetrics(a.(*v1beta2.FLPMetrics), b.(*FLPMetrics), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorAgent)(nil), (*FlowCollectorAgent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorAgent_To_v1beta1_FlowCollectorAgent(a.(*v1beta2.FlowCollectorAgent), b.(*FlowCollectorAgent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorConsolePlugin)(nil), (*FlowCollectorConsolePlugin)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorConsolePlugin_To_v1beta1_FlowCollectorConsolePlugin(a.(*v1beta2.FlowCollectorConsolePlugin), b.(*FlowCollectorConsolePlugin), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorEBPF)(nil), (*FlowCollectorEBPF)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorEBPF_To_v1beta1_FlowCollectorEBPF(a.(*v1beta2.FlowCollectorEBPF), b.(*FlowCollectorEBPF), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorExporter)(nil), (*FlowCollectorExporter)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorExporter_To_v1beta1_FlowCollectorExporter(a.(*v1beta2.FlowCollectorExporter), b.(*FlowCollectorExporter), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorFLP)(nil), (*FlowCollectorFLP)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorFLP_To_v1beta1_FlowCollectorFLP(a.(*v1beta2.FlowCollectorFLP), b.(*FlowCollectorFLP), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorHPA)(nil), (*FlowCollectorHPA)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorHPA_To_v1beta1_FlowCollectorHPA(a.(*v1beta2.FlowCollectorHPA), b.(*FlowCollectorHPA), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorLoki)(nil), (*FlowCollectorLoki)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorLoki_To_v1beta1_FlowCollectorLoki(a.(*v1beta2.FlowCollectorLoki), b.(*FlowCollectorLoki), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollectorSpec)(nil), (*FlowCollectorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollectorSpec_To_v1beta1_FlowCollectorSpec(a.(*v1beta2.FlowCollectorSpec), b.(*FlowCollectorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FlowCollector)(nil), (*FlowCollector)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FlowCollector_To_v1beta1_FlowCollector(a.(*v1beta2.FlowCollector), b.(*FlowCollector), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.SASLConfig)(nil), (*SASLConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_SASLConfig_To_v1beta1_SASLConfig(a.(*v1beta2.SASLConfig), b.(*SASLConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.ServerTLS)(nil), (*ServerTLS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ServerTLS_To_v1beta1_ServerTLS(a.(*v1beta2.ServerTLS), b.(*ServerTLS), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_CertificateReference_To_v1beta2_CertificateReference(in *CertificateReference, out *v1beta2.CertificateReference, s conversion.Scope) error {
	out.Type = v1beta2.MountableType(in.Type)
	out.Name = in.Name
	out.Namespace = in.Namespace
	out.CertFile = in.CertFile
	out.CertKey = in.CertKey
	return nil
}

// Convert_v1beta1_CertificateReference_To_v1beta2_CertificateReference is an autogenerated conversion function.
func Convert_v1beta1_CertificateReference_To_v1beta2_CertificateReference(in *CertificateReference, out *v1beta2.CertificateReference, s conversion.Scope) error {
	return autoConvert_v1beta1_CertificateReference_To_v1beta2_CertificateReference(in, out, s)
}

func autoConvert_v1beta2_CertificateReference_To_v1beta1_CertificateReference(in *v1beta2.CertificateReference, out *CertificateReference, s conversion.Scope) error {
	out.Type = MountableType(in.Type)
	out.Name = in.Name
	out.Namespace = in.Namespace
	out.CertFile = in.CertFile
	out.CertKey = in.CertKey
	return nil
}

// Convert_v1beta2_CertificateReference_To_v1beta1_CertificateReference is an autogenerated conversion function.
func Convert_v1beta2_CertificateReference_To_v1beta1_CertificateReference(in *v1beta2.CertificateReference, out *CertificateReference, s conversion.Scope) error {
	return autoConvert_v1beta2_CertificateReference_To_v1beta1_CertificateReference(in, out, s)
}

func autoConvert_v1beta1_ClientTLS_To_v1beta2_ClientTLS(in *ClientTLS, out *v1beta2.ClientTLS, s conversion.Scope) error {
	out.Enable = in.Enable
	out.InsecureSkipVerify = in.InsecureSkipVerify
	if err := Convert_v1beta1_CertificateReference_To_v1beta2_CertificateReference(&in.CACert, &out.CACert, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_CertificateReference_To_v1beta2_CertificateReference(&in.UserCert, &out.UserCert, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_ClientTLS_To_v1beta2_ClientTLS is an autogenerated conversion function.
func Convert_v1beta1_ClientTLS_To_v1beta2_ClientTLS(in *ClientTLS, out *v1beta2.ClientTLS, s conversion.Scope) error {
	return autoConvert_v1beta1_ClientTLS_To_v1beta2_ClientTLS(in, out, s)
}

func autoConvert_v1beta2_ClientTLS_To_v1beta1_ClientTLS(in *v1beta2.ClientTLS, out *ClientTLS, s conversion.Scope) error {
	out.Enable = in.Enable
	out.InsecureSkipVerify = in.InsecureSkipVerify
	if err := Convert_v1beta2_CertificateReference_To_v1beta1_CertificateReference(&in.CACert, &out.CACert, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_CertificateReference_To_v1beta1_CertificateReference(&in.UserCert, &out.UserCert, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_ClientTLS_To_v1beta1_ClientTLS is an autogenerated conversion function.
func Convert_v1beta2_ClientTLS_To_v1beta1_ClientTLS(in *v1beta2.ClientTLS, out *ClientTLS, s conversion.Scope) error {
	return autoConvert_v1beta2_ClientTLS_To_v1beta1_ClientTLS(in, out, s)
}

func autoConvert_v1beta1_ClusterNetworkOperatorConfig_To_v1beta2_ClusterNetworkOperatorConfig(in *ClusterNetworkOperatorConfig, out *v1beta2.ClusterNetworkOperatorConfig, s conversion.Scope) error {
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1beta1_ClusterNetworkOperatorConfig_To_v1beta2_ClusterNetworkOperatorConfig is an autogenerated conversion function.
func Convert_v1beta1_ClusterNetworkOperatorConfig_To_v1beta2_ClusterNetworkOperatorConfig(in *ClusterNetworkOperatorConfig, out *v1beta2.ClusterNetworkOperatorConfig, s conversion.Scope) error {
	return autoConvert_v1beta1_ClusterNetworkOperatorConfig_To_v1beta2_ClusterNetworkOperatorConfig(in, out, s)
}

func autoConvert_v1beta2_ClusterNetworkOperatorConfig_To_v1beta1_ClusterNetworkOperatorConfig(in *v1beta2.ClusterNetworkOperatorConfig, out *ClusterNetworkOperatorConfig, s conversion.Scope) error {
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1beta2_ClusterNetworkOperatorConfig_To_v1beta1_ClusterNetworkOperatorConfig is an autogenerated conversion function.
func Convert_v1beta2_ClusterNetworkOperatorConfig_To_v1beta1_ClusterNetworkOperatorConfig(in *v1beta2.ClusterNetworkOperatorConfig, out *ClusterNetworkOperatorConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_ClusterNetworkOperatorConfig_To_v1beta1_ClusterNetworkOperatorConfig(in, out, s)
}

func autoConvert_v1beta1_ConsolePluginPortConfig_To_v1beta2_ConsolePluginPortConfig(in *ConsolePluginPortConfig, out *v1beta2.ConsolePluginPortConfig, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.PortNames = *(*map[string]string)(unsafe.Pointer(&in.PortNames))
	return nil
}

// Convert_v1beta1_ConsolePluginPortConfig_To_v1beta2_ConsolePluginPortConfig is an autogenerated conversion function.
func Convert_v1beta1_ConsolePluginPortConfig_To_v1beta2_ConsolePluginPortConfig(in *ConsolePluginPortConfig, out *v1beta2.ConsolePluginPortConfig, s conversion.Scope) error {
	return autoConvert_v1beta1_ConsolePluginPortConfig_To_v1beta2_ConsolePluginPortConfig(in, out, s)
}

func autoConvert_v1beta2_ConsolePluginPortConfig_To_v1beta1_ConsolePluginPortConfig(in *v1beta2.ConsolePluginPortConfig, out *ConsolePluginPortConfig, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.PortNames = *(*map[string]string)(unsafe.Pointer(&in.PortNames))
	return nil
}

// Convert_v1beta2_ConsolePluginPortConfig_To_v1beta1_ConsolePluginPortConfig is an autogenerated conversion function.
func Convert_v1beta2_ConsolePluginPortConfig_To_v1beta1_ConsolePluginPortConfig(in *v1beta2.ConsolePluginPortConfig, out *ConsolePluginPortConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_ConsolePluginPortConfig_To_v1beta1_ConsolePluginPortConfig(in, out, s)
}

func autoConvert_v1beta1_EBPFFlowFilter_To_v1beta2_EBPFFlowFilter(in *EBPFFlowFilter, out *v1beta2.EBPFFlowFilter, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	if err := Convert_v1beta1_EBPFFlowFilterRule_To_v1beta2_EBPFFlowFilterRule(&in.EBPFFlowFilterRule, &out.EBPFFlowFilterRule, s); err != nil {
		return err
	}
	out.Rules = *(*[]v1beta2.EBPFFlowFilterRule)(unsafe.Pointer(&in.Rules))
	return nil
}

// Convert_v1beta1_EBPFFlowFilter_To_v1beta2_EBPFFlowFilter is an autogenerated conversion function.
func Convert_v1beta1_EBPFFlowFilter_To_v1beta2_EBPFFlowFilter(in *EBPFFlowFilter, out *v1beta2.EBPFFlowFilter, s conversion.Scope) error {
	return autoConvert_v1beta1_EBPFFlowFilter_To_v1beta2_EBPFFlowFilter(in, out, s)
}

func autoConvert_v1beta2_EBPFFlowFilter_To_v1beta1_EBPFFlowFilter(in *v1beta2.EBPFFlowFilter, out *EBPFFlowFilter, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	if err := Convert_v1beta2_EBPFFlowFilterRule_To_v1beta1_EBPFFlowFilterRule(&in.EBPFFlowFilterRule, &out.EBPFFlowFilterRule, s); err != nil {
		return err
	}
	out.Rules = *(*[]EBPFFlowFilterRule)(unsafe.Pointer(&in.Rules))
	return nil
}

// Convert_v1beta2_EBPFFlowFilter_To_v1beta1_EBPFFlowFilter is an autogenerated conversion function.
func Convert_v1beta2_EBPFFlowFilter_To_v1beta1_EBPFFlowFilter(in *v1beta2.EBPFFlowFilter, out *EBPFFlowFilter, s conversion.Scope) error {
	return autoConvert_v1beta2_EBPFFlowFilter_To_v1beta1_EBPFFlowFilter(in, out, s)
}

func autoConvert_v1beta1_EBPFFlowFilterRule_To_v1beta2_EBPFFlowFilterRule(in *EBPFFlowFilterRule, out *v1beta2.EBPFFlowFilterRule, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Action = in.Action
	out.Protocol = in.Protocol
	out.Direction = in.Direction
	out.TCPFlags = in.TCPFlags
	out.SourcePorts = in.SourcePorts
	out.DestPorts = in.DestPorts
	out.Ports = in.Ports
	out.PeerIP = in.PeerIP
	out.PeerCIDR = in.PeerCIDR
	out.ICMPCode = (*int)(unsafe.Pointer(in.ICMPCode))
	out.ICMPType = (*int)(unsafe.Pointer(in.ICMPType))
	out.PktDrops = (*bool)(unsafe.Pointer(in.PktDrops))
	out.Sampling = (*uint32)(unsafe.Pointer(in.Sampling))
	return nil
}

// Convert_v1beta1_EBPFFlowFilterRule_To_v1beta2_EBPFFlowFilterRule is an autogenerated conversion function.
func Convert_v1beta1_EBPFFlowFilterRule_To_v1beta2_EBPFFlowFilterRule(in *EBPFFlowFilterRule, out *v1beta2.EBPFFlowFilterRule, s conversion.Scope) error {
	return autoConvert_v1beta1_EBPFFlowFilterRule_To_v1beta2_EBPFFlowFilterRule(in, out, s)
}

func autoConvert_v1beta2_EBPFFlowFilterRule_To_v1beta1_EBPFFlowFilterRule(in *v1beta2.EBPFFlowFilterRule, out *EBPFFlowFilterRule, s conversion.Scope) error {
	out.CIDR = in.CIDR
	out.Action = in.Action
	out.Protocol = in.Protocol
	out.Direction = in.Direction
	out.TCPFlags = in.TCPFlags
	out.SourcePorts = in.SourcePorts
	out.DestPorts = in.DestPorts
	out.Ports = in.Ports
	out.PeerIP = in.PeerIP
	out.PeerCIDR = in.PeerCIDR
	out.ICMPCode = (*int)(unsafe.Pointer(in.ICMPCode))
	out.ICMPType = (*int)(unsafe.Pointer(in.ICMPType))
	out.PktDrops = (*bool)(unsafe.Pointer(in.PktDrops))
	out.Sampling = (*uint32)(unsafe.Pointer(in.Sampling))
	return nil
}

// Convert_v1beta2_EBPFFlowFilterRule_To_v1beta1_EBPFFlowFilterRule is an autogenerated conversion function.
func Convert_v1beta2_EBPFFlowFilterRule_To_v1beta1_EBPFFlowFilterRule(in *v1beta2.EBPFFlowFilterRule, out *EBPFFlowFilterRule, s conversion.Scope) error {
	return autoConvert_v1beta2_EBPFFlowFilterRule_To_v1beta1_EBPFFlowFilterRule(in, out, s)
}

func autoConvert_v1beta1_EBPFMetrics_To_v1beta2_EBPFMetrics(in *EBPFMetrics, out *v1beta2.EBPFMetrics, s conversion.Scope) error {
	if err := Convert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig(&in.Server, &out.Server, s); err != nil {
		return err
	}
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.DisableAlerts = *(*[]v1beta2.EBPFAgentAlert)(unsafe.Pointer(&in.DisableAlerts))
	return nil
}

// Convert_v1beta1_EBPFMetrics_To_v1beta2_EBPFMetrics is an autogenerated conversion function.
func Convert_v1beta1_EBPFMetrics_To_v1beta2_EBPFMetrics(in *EBPFMetrics, out *v1beta2.EBPFMetrics, s conversion.Scope) error {
	return autoConvert_v1beta1_EBPFMetrics_To_v1beta2_EBPFMetrics(in, out, s)
}

func autoConvert_v1beta2_EBPFMetrics_To_v1beta1_EBPFMetrics(in *v1beta2.EBPFMetrics, out *EBPFMetrics, s conversion.Scope) error {
	if err := Convert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig(&in.Server, &out.Server, s); err != nil {
		return err
	}
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.DisableAlerts = *(*[]EBPFAgentAlert)(unsafe.Pointer(&in.DisableAlerts))
	return nil
}

// Convert_v1beta2_EBPFMetrics_To_v1beta1_EBPFMetrics is an autogenerated conversion function.
func Convert_v1beta2_EBPFMetrics_To_v1beta1_EBPFMetrics(in *v1beta2.EBPFMetrics, out *EBPFMetrics, s conversion.Scope) error {
	return autoConvert_v1beta2_EBPFMetrics_To_v1beta1_EBPFMetrics(in, out, s)
}

func autoConvert_v1beta1_FLPDeduper_To_v1beta2_FLPDeduper(in *FLPDeduper, out *v1beta2.FLPDeduper, s conversion.Scope) error {
	out.Mode = v1beta2.FLPDeduperMode(in.Mode)
	out.Sampling = in.Sampling
	return nil
}

// Convert_v1beta1_FLPDeduper_To_v1beta2_FLPDeduper is an autogenerated conversion function.
func Convert_v1beta1_FLPDeduper_To_v1beta2_FLPDeduper(in *FLPDeduper, out *v1beta2.FLPDeduper, s conversion.Scope) error {
	return autoConvert_v1beta1_FLPDeduper_To_v1beta2_FLPDeduper(in, out, s)
}

func autoConvert_v1beta2_FLPDeduper_To_v1beta1_FLPDeduper(in *v1beta2.FLPDeduper, out *FLPDeduper, s conversion.Scope) error {
	out.Mode = FLPDeduperMode(in.Mode)
	out.Sampling = in.Sampling
	return nil
}

// Convert_v1beta2_FLPDeduper_To_v1beta1_FLPDeduper is an autogenerated conversion function.
func Convert_v1beta2_FLPDeduper_To_v1beta1_FLPDeduper(in *v1beta2.FLPDeduper, out *FLPDeduper, s conversion.Scope) error {
	return autoConvert_v1beta2_FLPDeduper_To_v1beta1_FLPDeduper(in, out, s)
}

func autoConvert_v1beta1_FLPFilterSet_To_v1beta2_FLPFilterSet(in *FLPFilterSet, out *v1beta2.FLPFilterSet, s conversion.Scope) error {
	out.Query = in.Query
	out.OutputTarget = v1beta2.FLPFilterTarget(in.OutputTarget)
	out.Sampling = in.Sampling
	return nil
}

// Convert_v1beta1_FLPFilterSet_To_v1beta2_FLPFilterSet is an autogenerated conversion function.
func Convert_v1beta1_FLPFilterSet_To_v1beta2_FLPFilterSet(in *FLPFilterSet, out *v1beta2.FLPFilterSet, s conversion.Scope) error {
	return autoConvert_v1beta1_FLPFilterSet_To_v1beta2_FLPFilterSet(in, out, s)
}

func autoConvert_v1beta2_FLPFilterSet_To_v1beta1_FLPFilterSet(in *v1beta2.FLPFilterSet, out *FLPFilterSet, s conversion.Scope) error {
	out.Query = in.Query
	out.OutputTarget = FLPFilterTarget(in.OutputTarget)
	out.Sampling = in.Sampling
	return nil
}

// Convert_v1beta2_FLPFilterSet_To_v1beta1_FLPFilterSet is an autogenerated conversion function.
func Convert_v1beta2_FLPFilterSet_To_v1beta1_FLPFilterSet(in *v1beta2.FLPFilterSet, out *FLPFilterSet, s conversion.Scope) error {
	return autoConvert_v1beta2_FLPFilterSet_To_v1beta1_FLPFilterSet(in, out, s)
}

func autoConvert_v1beta1_FLPMetrics_To_v1beta2_FLPMetrics(in *FLPMetrics, out *v1beta2.FLPMetrics, s conversion.Scope) error {
	if err := Convert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig(&in.Server, &out.Server, s); err != nil {
		return err
	}
	// WARNING: in.IgnoreTags requires manual conversion: does not exist in peer-type
	out.IncludeList = (*[]v1beta2.FLPMetric)(unsafe.Pointer(in.IncludeList))
	out.DisableAlerts = *(*[]v1beta2.FLPAlert)(unsafe.Pointer(&in.DisableAlerts))
	return nil
}

func autoConvert_v1beta2_FLPMetrics_To_v1beta1_FLPMetrics(in *v1beta2.FLPMetrics, out *FLPMetrics, s conversion.Scope) error {
	if err := Convert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig(&in.Server, &out.Server, s); err != nil {
		return err
	}
	out.IncludeList = (*[]FLPMetric)(unsafe.Pointer(in.IncludeList))
	out.DisableAlerts = *(*[]FLPAlert)(unsafe.Pointer(&in.DisableAlerts))
	return nil
}

func autoConvert_v1beta1_FileReference_To_v1beta2_FileReference(in *FileReference, out *v1beta2.FileReference, s conversion.Scope) error {
	out.Type = v1beta2.MountableType(in.Type)
	out.Name = in.Name
	out.Namespace = in.Namespace
	out.File = in.File
	return nil
}

// Convert_v1beta1_FileReference_To_v1beta2_FileReference is an autogenerated conversion function.
func Convert_v1beta1_FileReference_To_v1beta2_FileReference(in *FileReference, out *v1beta2.FileReference, s conversion.Scope) error {
	return autoConvert_v1beta1_FileReference_To_v1beta2_FileReference(in, out, s)
}

func autoConvert_v1beta2_FileReference_To_v1beta1_FileReference(in *v1beta2.FileReference, out *FileReference, s conversion.Scope) error {
	out.Type = MountableType(in.Type)
	out.Name = in.Name
	out.Namespace = in.Namespace
	out.File = in.File
	return nil
}

// Convert_v1beta2_FileReference_To_v1beta1_FileReference is an autogenerated conversion function.
func Convert_v1beta2_FileReference_To_v1beta1_FileReference(in *v1beta2.FileReference, out *FileReference, s conversion.Scope) error {
	return autoConvert_v1beta2_FileReference_To_v1beta1_FileReference(in, out, s)
}

func autoConvert_v1beta1_FlowCollector_To_v1beta2_FlowCollector(in *FlowCollector, out *v1beta2.FlowCollector, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_FlowCollectorSpec_To_v1beta2_FlowCollectorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorStatus_To_v1beta2_FlowCollectorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta2_FlowCollector_To_v1beta1_FlowCollector(in *v1beta2.FlowCollector, out *FlowCollector, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta2_FlowCollectorSpec_To_v1beta1_FlowCollectorSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorStatus_To_v1beta1_FlowCollectorStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_FlowCollectorAgent_To_v1beta2_FlowCollectorAgent(in *FlowCollectorAgent, out *v1beta2.FlowCollectorAgent, s conversion.Scope) error {
	out.Type = v1beta2.FlowCollectorAgentType(in.Type)
	if err := Convert_v1beta1_FlowCollectorIPFIX_To_v1beta2_FlowCollectorIPFIX(&in.IPFIX, &out.IPFIX, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorEBPF_To_v1beta2_FlowCollectorEBPF(&in.EBPF, &out.EBPF, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta2_FlowCollectorAgent_To_v1beta1_FlowCollectorAgent(in *v1beta2.FlowCollectorAgent, out *FlowCollectorAgent, s conversion.Scope) error {
	out.Type = string(in.Type)
	if err := Convert_v1beta2_FlowCollectorIPFIX_To_v1beta1_FlowCollectorIPFIX(&in.IPFIX, &out.IPFIX, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorEBPF_To_v1beta1_FlowCollectorEBPF(&in.EBPF, &out.EBPF, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_FlowCollectorConsolePlugin_To_v1beta2_FlowCollectorConsolePlugin(in *FlowCollectorConsolePlugin, out *v1beta2.FlowCollectorConsolePlugin, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	// WARNING: in.Register requires manual conversion: does not exist in peer-type
	out.Replicas = (*int32)(unsafe.Pointer(in.Replicas))
	// WARNING: in.Port requires manual conversion: does not exist in peer-type
	out.ImagePullPolicy = in.ImagePullPolicy
	out.Resources = in.Resources
	out.LogLevel = in.LogLevel
	if err := Convert_v1beta1_FlowCollectorHPA_To_v1beta2_FlowCollectorHPA(&in.Autoscaler, &out.Autoscaler, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_ConsolePluginPortConfig_To_v1beta2_ConsolePluginPortConfig(&in.PortNaming, &out.PortNaming, s); err != nil {
		return err
	}
	out.QuickFilters = *(*[]v1beta2.QuickFilter)(unsafe.Pointer(&in.QuickFilters))
	return nil
}

func autoConvert_v1beta2_FlowCollectorConsolePlugin_To_v1beta1_FlowCollectorConsolePlugin(in *v1beta2.FlowCollectorConsolePlugin, out *FlowCollectorConsolePlugin, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.Replicas = (*int32)(unsafe.Pointer(in.Replicas))
	out.ImagePullPolicy = in.ImagePullPolicy
	out.Resources = in.Resources
	out.LogLevel = in.LogLevel
	if err := Convert_v1beta2_FlowCollectorHPA_To_v1beta1_FlowCollectorHPA(&in.Autoscaler, &out.Autoscaler, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_ConsolePluginPortConfig_To_v1beta1_ConsolePluginPortConfig(&in.PortNaming, &out.PortNaming, s); err != nil {
		return err
	}
	out.QuickFilters = *(*[]QuickFilter)(unsafe.Pointer(&in.QuickFilters))
	// WARNING: in.Advanced requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta1_FlowCollectorEBPF_To_v1beta2_FlowCollectorEBPF(in *FlowCollectorEBPF, out *v1beta2.FlowCollectorEBPF, s conversion.Scope) error {
	out.ImagePullPolicy = in.ImagePullPolicy
	out.Resources = in.Resources
	out.Sampling = (*int32)(unsafe.Pointer(in.Sampling))
	out.CacheActiveTimeout = in.CacheActiveTimeout
	out.CacheMaxFlows = in.CacheMaxFlows
	out.Interfaces = *(*[]string)(unsafe.Pointer(&in.Interfaces))
	out.ExcludeInterfaces = *(*[]string)(unsafe.Pointer(&in.ExcludeInterfaces))
	out.LogLevel = in.LogLevel
	out.Privileged = in.Privileged
	out.KafkaBatchSize = in.KafkaBatchSize
	// WARNING: in.Debug requires manual conversion: does not exist in peer-type
	out.Features = *(*[]v1beta2.AgentFeature)(unsafe.Pointer(&in.Features))
	if err := Convert_v1beta1_EBPFMetrics_To_v1beta2_EBPFMetrics(&in.Metrics, &out.Metrics, s); err != nil {
		return err
	}
	out.FlowFilter = (*v1beta2.EBPFFlowFilter)(unsafe.Pointer(in.FlowFilter))
	return nil
}

func autoConvert_v1beta2_FlowCollectorEBPF_To_v1beta1_FlowCollectorEBPF(in *v1beta2.FlowCollectorEBPF, out *FlowCollectorEBPF, s conversion.Scope) error {
	out.ImagePullPolicy = in.ImagePullPolicy
	out.Resources = in.Resources
	out.Sampling = (*int32)(unsafe.Pointer(in.Sampling))
	out.CacheActiveTimeout = in.CacheActiveTimeout
	out.CacheMaxFlows = in.CacheMaxFlows
	out.Interfaces = *(*[]string)(unsafe.Pointer(&in.Interfaces))
	out.ExcludeInterfaces = *(*[]string)(unsafe.Pointer(&in.ExcludeInterfaces))
	out.LogLevel = in.LogLevel
	out.Privileged = in.Privileged
	out.KafkaBatchSize = in.KafkaBatchSize
	// WARNING: in.Advanced requires manual conversion: does not exist in peer-type
	out.Features = *(*[]AgentFeature)(unsafe.Pointer(&in.Features))
	if err := Convert_v1beta2_EBPFMetrics_To_v1beta1_EBPFMetrics(&in.Metrics, &out.Metrics, s); err != nil {
		return err
	}
	out.FlowFilter = (*EBPFFlowFilter)(unsafe.Pointer(in.FlowFilter))
	return nil
}

func autoConvert_v1beta1_FlowCollectorExporter_To_v1beta2_FlowCollectorExporter(in *FlowCollectorExporter, out *v1beta2.FlowCollectorExporter, s conversion.Scope) error {
	out.Type = v1beta2.ExporterType(in.Type)
	if err := Convert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka(&in.Kafka, &out.Kafka, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorIPFIXReceiver_To_v1beta2_FlowCollectorIPFIXReceiver(&in.IPFIX, &out.IPFIX, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta2_FlowCollectorExporter_To_v1beta1_FlowCollectorExporter(in *v1beta2.FlowCollectorExporter, out *FlowCollectorExporter, s conversion.Scope) error {
	out.Type = ExporterType(in.Type)
	if err := Convert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka(&in.Kafka, &out.Kafka, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorIPFIXReceiver_To_v1beta1_FlowCollectorIPFIXReceiver(&in.IPFIX, &out.IPFIX, s); err != nil {
		return err
	}
	// WARNING: in.OpenTelemetry requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta1_FlowCollectorFLP_To_v1beta2_FlowCollectorFLP(in *FlowCollectorFLP, out *v1beta2.FlowCollectorFLP, s conversion.Scope) error {
	// WARNING: in.Port requires manual conversion: does not exist in peer-type
	// WARNING: in.HealthPort requires manual conversion: does not exist in peer-type
	// WARNING: in.ProfilePort requires manual conversion: does not exist in peer-type
	out.ImagePullPolicy = in.ImagePullPolicy
	if err := Convert_v1beta1_FLPMetrics_To_v1beta2_FLPMetrics(&in.Metrics, &out.Metrics, s); err != nil {
		return err
	}
	out.LogLevel = in.LogLevel
	out.Resources = in.Resources
	// WARNING: in.EnableKubeProbes requires manual conversion: does not exist in peer-type
	// WARNING: in.DropUnusedFields requires manual conversion: does not exist in peer-type
	out.KafkaConsumerReplicas = (*int32)(unsafe.Pointer(in.KafkaConsumerReplicas))
	if err := Convert_v1beta1_FlowCollectorHPA_To_v1beta2_FlowCollectorHPA(&in.KafkaConsumerAutoscaler, &out.KafkaConsumerAutoscaler, s); err != nil {
		return err
	}
	out.KafkaConsumerQueueCapacity = in.KafkaConsumerQueueCapacity
	out.KafkaConsumerBatchSize = in.KafkaConsumerBatchSize
	out.LogTypes = (*v1beta2.FLPLogTypes)(unsafe.Pointer(in.LogTypes))
	// WARNING: in.ConversationHeartbeatInterval requires manual conversion: does not exist in peer-type
	// WARNING: in.ConversationEndTimeout requires manual conversion: does not exist in peer-type
	// WARNING: in.ConversationTerminatingTimeout requires manual conversion: does not exist in peer-type
	out.ClusterName = in.ClusterName
	out.MultiClusterDeployment = (*bool)(unsafe.Pointer(in.MultiClusterDeployment))
	out.AddZone = (*bool)(unsafe.Pointer(in.AddZone))
	if err := Convert_v1beta1_SubnetLabels_To_v1beta2_SubnetLabels(&in.SubnetLabels, &out.SubnetLabels, s); err != nil {
		return err
	}
	out.Deduper = (*v1beta2.FLPDeduper)(unsafe.Pointer(in.Deduper))
	out.Filters = *(*[]v1beta2.FLPFilterSet)(unsafe.Pointer(&in.Filters))
	// WARNING: in.Debug requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_FlowCollectorFLP_To_v1beta1_FlowCollectorFLP(in *v1beta2.FlowCollectorFLP, out *FlowCollectorFLP, s conversion.Scope) error {
	out.ImagePullPolicy = in.ImagePullPolicy
	if err := Convert_v1beta2_FLPMetrics_To_v1beta1_FLPMetrics(&in.Metrics, &out.Metrics, s); err != nil {
		return err
	}
	out.LogLevel = in.LogLevel
	out.Resources = in.Resources
	out.KafkaConsumerReplicas = (*int32)(unsafe.Pointer(in.KafkaConsumerReplicas))
	if err := Convert_v1beta2_FlowCollectorHPA_To_v1beta1_FlowCollectorHPA(&in.KafkaConsumerAutoscaler, &out.KafkaConsumerAutoscaler, s); err != nil {
		return err
	}
	out.KafkaConsumerQueueCapacity = in.KafkaConsumerQueueCapacity
	out.KafkaConsumerBatchSize = in.KafkaConsumerBatchSize
	out.LogTypes = (*string)(unsafe.Pointer(in.LogTypes))
	out.ClusterName = in.ClusterName
	out.MultiClusterDeployment = (*bool)(unsafe.Pointer(in.MultiClusterDeployment))
	out.AddZone = (*bool)(unsafe.Pointer(in.AddZone))
	if err := Convert_v1beta2_SubnetLabels_To_v1beta1_SubnetLabels(&in.SubnetLabels, &out.SubnetLabels, s); err != nil {
		return err
	}
	out.Deduper = (*FLPDeduper)(unsafe.Pointer(in.Deduper))
	out.Filters = *(*[]FLPFilterSet)(unsafe.Pointer(&in.Filters))
	// WARNING: in.Advanced requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta1_FlowCollectorHPA_To_v1beta2_FlowCollectorHPA(in *FlowCollectorHPA, out *v1beta2.FlowCollectorHPA, s conversion.Scope) error {
	out.Status = v1beta2.HPAStatus(in.Status)
	out.MinReplicas = (*int32)(unsafe.Pointer(in.MinReplicas))
	out.MaxReplicas = in.MaxReplicas
	out.Metrics = *(*[]v2.MetricSpec)(unsafe.Pointer(&in.Metrics))
	return nil
}

func autoConvert_v1beta2_FlowCollectorHPA_To_v1beta1_FlowCollectorHPA(in *v1beta2.FlowCollectorHPA, out *FlowCollectorHPA, s conversion.Scope) error {
	out.Status = string(in.Status)
	out.MinReplicas = (*int32)(unsafe.Pointer(in.MinReplicas))
	out.MaxReplicas = in.MaxReplicas
	out.Metrics = *(*[]v2.MetricSpec)(unsafe.Pointer(&in.Metrics))
	return nil
}

func autoConvert_v1beta1_FlowCollectorIPFIX_To_v1beta2_FlowCollectorIPFIX(in *FlowCollectorIPFIX, out *v1beta2.FlowCollectorIPFIX, s conversion.Scope) error {
	out.CacheActiveTimeout = in.CacheActiveTimeout
	out.CacheMaxFlows = in.CacheMaxFlows
	out.Sampling = in.Sampling
	out.ForceSampleAll = in.ForceSampleAll
	if err := Convert_v1beta1_ClusterNetworkOperatorConfig_To_v1beta2_ClusterNetworkOperatorConfig(&in.ClusterNetworkOperator, &out.ClusterNetworkOperator, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_OVNKubernetesConfig_To_v1beta2_OVNKubernetesConfig(&in.OVNKubernetes, &out.OVNKubernetes, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_FlowCollectorIPFIX_To_v1beta2_FlowCollectorIPFIX is an autogenerated conversion function.
func Convert_v1beta1_FlowCollectorIPFIX_To_v1beta2_FlowCollectorIPFIX(in *FlowCollectorIPFIX, out *v1beta2.FlowCollectorIPFIX, s conversion.Scope) error {
	return autoConvert_v1beta1_FlowCollectorIPFIX_To_v1beta2_FlowCollectorIPFIX(in, out, s)
}

func autoConvert_v1beta2_FlowCollectorIPFIX_To_v1beta1_FlowCollectorIPFIX(in *v1beta2.FlowCollectorIPFIX, out *FlowCollectorIPFIX, s conversion.Scope) error {
	out.CacheActiveTimeout = in.CacheActiveTimeout
	out.CacheMaxFlows = in.CacheMaxFlows
	out.Sampling = in.Sampling
	out.ForceSampleAll = in.ForceSampleAll
	if err := Convert_v1beta2_ClusterNetworkOperatorConfig_To_v1beta1_ClusterNetworkOperatorConfig(&in.ClusterNetworkOperator, &out.ClusterNetworkOperator, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_OVNKubernetesConfig_To_v1beta1_OVNKubernetesConfig(&in.OVNKubernetes, &out.OVNKubernetes, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_FlowCollectorIPFIX_To_v1beta1_FlowCollectorIPFIX is an autogenerated conversion function.
func Convert_v1beta2_FlowCollectorIPFIX_To_v1beta1_FlowCollectorIPFIX(in *v1beta2.FlowCollectorIPFIX, out *FlowCollectorIPFIX, s conversion.Scope) error {
	return autoConvert_v1beta2_FlowCollectorIPFIX_To_v1beta1_FlowCollectorIPFIX(in, out, s)
}

func autoConvert_v1beta1_FlowCollectorIPFIXReceiver_To_v1beta2_FlowCollectorIPFIXReceiver(in *FlowCollectorIPFIXReceiver, out *v1beta2.FlowCollectorIPFIXReceiver, s conversion.Scope) error {
	out.TargetHost = in.TargetHost
	out.TargetPort = in.TargetPort
	out.Transport = in.Transport
	return nil
}

// Convert_v1beta1_FlowCollectorIPFIXReceiver_To_v1beta2_FlowCollectorIPFIXReceiver is an autogenerated conversion function.
func Convert_v1beta1_FlowCollectorIPFIXReceiver_To_v1beta2_FlowCollectorIPFIXReceiver(in *FlowCollectorIPFIXReceiver, out *v1beta2.FlowCollectorIPFIXReceiver, s conversion.Scope) error {
	return autoConvert_v1beta1_FlowCollectorIPFIXReceiver_To_v1beta2_FlowCollectorIPFIXReceiver(in, out, s)
}

func autoConvert_v1beta2_FlowCollectorIPFIXReceiver_To_v1beta1_FlowCollectorIPFIXReceiver(in *v1beta2.FlowCollectorIPFIXReceiver, out *FlowCollectorIPFIXReceiver, s conversion.Scope) error {
	out.TargetHost = in.TargetHost
	out.TargetPort = in.TargetPort
	out.Transport = in.Transport
	return nil
}

// Convert_v1beta2_FlowCollectorIPFIXReceiver_To_v1beta1_FlowCollectorIPFIXReceiver is an autogenerated conversion function.
func Convert_v1beta2_FlowCollectorIPFIXReceiver_To_v1beta1_FlowCollectorIPFIXReceiver(in *v1beta2.FlowCollectorIPFIXReceiver, out *FlowCollectorIPFIXReceiver, s conversion.Scope) error {
	return autoConvert_v1beta2_FlowCollectorIPFIXReceiver_To_v1beta1_FlowCollectorIPFIXReceiver(in, out, s)
}

func autoConvert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka(in *FlowCollectorKafka, out *v1beta2.FlowCollectorKafka, s conversion.Scope) error {
	out.Address = in.Address
	out.Topic = in.Topic
	if err := Convert_v1beta1_ClientTLS_To_v1beta2_ClientTLS(&in.TLS, &out.TLS, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_SASLConfig_To_v1beta2_SASLConfig(&in.SASL, &out.SASL, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka is an autogenerated conversion function.
func Convert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka(in *FlowCollectorKafka, out *v1beta2.FlowCollectorKafka, s conversion.Scope) error {
	return autoConvert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka(in, out, s)
}

func autoConvert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka(in *v1beta2.FlowCollectorKafka, out *FlowCollectorKafka, s conversion.Scope) error {
	out.Address = in.Address
	out.Topic = in.Topic
	if err := Convert_v1beta2_ClientTLS_To_v1beta1_ClientTLS(&in.TLS, &out.TLS, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_SASLConfig_To_v1beta1_SASLConfig(&in.SASL, &out.SASL, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka is an autogenerated conversion function.
func Convert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka(in *v1beta2.FlowCollectorKafka, out *FlowCollectorKafka, s conversion.Scope) error {
	return autoConvert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka(in, out, s)
}

func autoConvert_v1beta1_FlowCollectorList_To_v1beta2_FlowCollectorList(in *FlowCollectorList, out *v1beta2.FlowCollectorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1beta2.FlowCollector, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_FlowCollector_To_v1beta2_FlowCollector(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_FlowCollectorList_To_v1beta2_FlowCollectorList is an autogenerated conversion function.
func Convert_v1beta1_FlowCollectorList_To_v1beta2_FlowCollectorList(in *FlowCollectorList, out *v1beta2.FlowCollectorList, s conversion.Scope) error {
	return autoConvert_v1beta1_FlowCollectorList_To_v1beta2_FlowCollectorList(in, out, s)
}

func autoConvert_v1beta2_FlowCollectorList_To_v1beta1_FlowCollectorList(in *v1beta2.FlowCollectorList, out *FlowCollectorList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FlowCollector, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_FlowCollector_To_v1beta1_FlowCollector(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta2_FlowCollectorList_To_v1beta1_FlowCollectorList is an autogenerated conversion function.
func Convert_v1beta2_FlowCollectorList_To_v1beta1_FlowCollectorList(in *v1beta2.FlowCollectorList, out *FlowCollectorList, s conversion.Scope) error {
	return autoConvert_v1beta2_FlowCollectorList_To_v1beta1_FlowCollectorList(in, out, s)
}

func autoConvert_v1beta1_FlowCollectorLoki_To_v1beta2_FlowCollectorLoki(in *FlowCollectorLoki, out *v1beta2.FlowCollectorLoki, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	// WARNING: in.URL requires manual conversion: does not exist in peer-type
	// WARNING: in.QuerierURL requires manual conversion: does not exist in peer-type
	// WARNING: in.StatusURL requires manual conversion: does not exist in peer-type
	// WARNING: in.TenantID requires manual conversion: does not exist in peer-type
	// WARNING: in.AuthToken requires manual conversion: does not exist in peer-type
	// WARNING: in.BatchWait requires manual conversion: does not exist in peer-type
	// WARNING: in.BatchSize requires manual conversion: does not exist in peer-type
	out.ReadTimeout = (*v1.Duration)(unsafe.Pointer(in.ReadTimeout))
	// WARNING: in.Timeout requires manual conversion: does not exist in peer-type
	// WARNING: in.MinBackoff requires manual conversion: does not exist in peer-type
	// WARNING: in.MaxBackoff requires manual conversion: does not exist in peer-type
	// WARNING: in.MaxRetries requires manual conversion: does not exist in peer-type
	// WARNING: in.StaticLabels requires manual conversion: does not exist in peer-type
	// WARNING: in.TLS requires manual conversion: does not exist in peer-type
	// WARNING: in.StatusTLS requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_FlowCollectorLoki_To_v1beta1_FlowCollectorLoki(in *v1beta2.FlowCollectorLoki, out *FlowCollectorLoki, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	// WARNING: in.Mode requires manual conversion: does not exist in peer-type
	// WARNING: in.Manual requires manual conversion: does not exist in peer-type
	// WARNING: in.Microservices requires manual conversion: does not exist in peer-type
	// WARNING: in.Monolithic requires manual conversion: does not exist in peer-type
	// WARNING: in.LokiStack requires manual conversion: does not exist in peer-type
	out.ReadTimeout = (*v1.Duration)(unsafe.Pointer(in.ReadTimeout))
	// WARNING: in.WriteTimeout requires manual conversion: does not exist in peer-type
	// WARNING: in.WriteBatchWait requires manual conversion: does not exist in peer-type
	// WARNING: in.WriteBatchSize requires manual conversion: does not exist in peer-type
	// WARNING: in.Advanced requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta1_FlowCollectorPrometheus_To_v1beta2_FlowCollectorPrometheus(in *FlowCollectorPrometheus, out *v1beta2.FlowCollectorPrometheus, s conversion.Scope) error {
	if err := Convert_v1beta1_PrometheusQuerier_To_v1beta2_PrometheusQuerier(&in.Querier, &out.Querier, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_FlowCollectorPrometheus_To_v1beta2_FlowCollectorPrometheus is an autogenerated conversion function.
func Convert_v1beta1_FlowCollectorPrometheus_To_v1beta2_FlowCollectorPrometheus(in *FlowCollectorPrometheus, out *v1beta2.FlowCollectorPrometheus, s conversion.Scope) error {
	return autoConvert_v1beta1_FlowCollectorPrometheus_To_v1beta2_FlowCollectorPrometheus(in, out, s)
}

func autoConvert_v1beta2_FlowCollectorPrometheus_To_v1beta1_FlowCollectorPrometheus(in *v1beta2.FlowCollectorPrometheus, out *FlowCollectorPrometheus, s conversion.Scope) error {
	if err := Convert_v1beta2_PrometheusQuerier_To_v1beta1_PrometheusQuerier(&in.Querier, &out.Querier, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_FlowCollectorPrometheus_To_v1beta1_FlowCollectorPrometheus is an autogenerated conversion function.
func Convert_v1beta2_FlowCollectorPrometheus_To_v1beta1_FlowCollectorPrometheus(in *v1beta2.FlowCollectorPrometheus, out *FlowCollectorPrometheus, s conversion.Scope) error {
	return autoConvert_v1beta2_FlowCollectorPrometheus_To_v1beta1_FlowCollectorPrometheus(in, out, s)
}

func autoConvert_v1beta1_FlowCollectorSpec_To_v1beta2_FlowCollectorSpec(in *FlowCollectorSpec, out *v1beta2.FlowCollectorSpec, s conversion.Scope) error {
	out.Namespace = in.Namespace
	if err := Convert_v1beta1_FlowCollectorAgent_To_v1beta2_FlowCollectorAgent(&in.Agent, &out.Agent, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorFLP_To_v1beta2_FlowCollectorFLP(&in.Processor, &out.Processor, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorLoki_To_v1beta2_FlowCollectorLoki(&in.Loki, &out.Loki, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorPrometheus_To_v1beta2_FlowCollectorPrometheus(&in.Prometheus, &out.Prometheus, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FlowCollectorConsolePlugin_To_v1beta2_FlowCollectorConsolePlugin(&in.ConsolePlugin, &out.ConsolePlugin, s); err != nil {
		return err
	}
	out.DeploymentModel = v1beta2.FlowCollectorDeploymentModel(in.DeploymentModel)
	if err := Convert_v1beta1_FlowCollectorKafka_To_v1beta2_FlowCollectorKafka(&in.Kafka, &out.Kafka, s); err != nil {
		return err
	}
	// INFO: in.Exporters opted out of conversion generation
	return nil
}

func autoConvert_v1beta2_FlowCollectorSpec_To_v1beta1_FlowCollectorSpec(in *v1beta2.FlowCollectorSpec, out *FlowCollectorSpec, s conversion.Scope) error {
	out.Namespace = in.Namespace
	if err := Convert_v1beta2_FlowCollectorAgent_To_v1beta1_FlowCollectorAgent(&in.Agent, &out.Agent, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorFLP_To_v1beta1_FlowCollectorFLP(&in.Processor, &out.Processor, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorLoki_To_v1beta1_FlowCollectorLoki(&in.Loki, &out.Loki, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorPrometheus_To_v1beta1_FlowCollectorPrometheus(&in.Prometheus, &out.Prometheus, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FlowCollectorConsolePlugin_To_v1beta1_FlowCollectorConsolePlugin(&in.ConsolePlugin, &out.ConsolePlugin, s); err != nil {
		return err
	}
	out.DeploymentModel = string(in.DeploymentModel)
	if err := Convert_v1beta2_FlowCollectorKafka_To_v1beta1_FlowCollectorKafka(&in.Kafka, &out.Kafka, s); err != nil {
		return err
	}
	// INFO: in.Exporters opted out of conversion generation
	// INFO: in.NetworkPolicy opted out of conversion generation
	return nil
}

func autoConvert_v1beta1_FlowCollectorStatus_To_v1beta2_FlowCollectorStatus(in *FlowCollectorStatus, out *v1beta2.FlowCollectorStatus, s conversion.Scope) error {
	out.Conditions = *(*[]v1.Condition)(unsafe.Pointer(&in.Conditions))
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1beta1_FlowCollectorStatus_To_v1beta2_FlowCollectorStatus is an autogenerated conversion function.
func Convert_v1beta1_FlowCollectorStatus_To_v1beta2_FlowCollectorStatus(in *FlowCollectorStatus, out *v1beta2.FlowCollectorStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_FlowCollectorStatus_To_v1beta2_FlowCollectorStatus(in, out, s)
}

func autoConvert_v1beta2_FlowCollectorStatus_To_v1beta1_FlowCollectorStatus(in *v1beta2.FlowCollectorStatus, out *FlowCollectorStatus, s conversion.Scope) error {
	out.Conditions = *(*[]v1.Condition)(unsafe.Pointer(&in.Conditions))
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1beta2_FlowCollectorStatus_To_v1beta1_FlowCollectorStatus is an autogenerated conversion function.
func Convert_v1beta2_FlowCollectorStatus_To_v1beta1_FlowCollectorStatus(in *v1beta2.FlowCollectorStatus, out *FlowCollectorStatus, s conversion.Scope) error {
	return autoConvert_v1beta2_FlowCollectorStatus_To_v1beta1_FlowCollectorStatus(in, out, s)
}

func autoConvert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig(in *MetricsServerConfig, out *v1beta2.MetricsServerConfig, s conversion.Scope) error {
	out.Port = (*int32)(unsafe.Pointer(in.Port))
	if err := Convert_v1beta1_ServerTLS_To_v1beta2_ServerTLS(&in.TLS, &out.TLS, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig is an autogenerated conversion function.
func Convert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig(in *MetricsServerConfig, out *v1beta2.MetricsServerConfig, s conversion.Scope) error {
	return autoConvert_v1beta1_MetricsServerConfig_To_v1beta2_MetricsServerConfig(in, out, s)
}

func autoConvert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig(in *v1beta2.MetricsServerConfig, out *MetricsServerConfig, s conversion.Scope) error {
	out.Port = (*int32)(unsafe.Pointer(in.Port))
	if err := Convert_v1beta2_ServerTLS_To_v1beta1_ServerTLS(&in.TLS, &out.TLS, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig is an autogenerated conversion function.
func Convert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig(in *v1beta2.MetricsServerConfig, out *MetricsServerConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_MetricsServerConfig_To_v1beta1_MetricsServerConfig(in, out, s)
}

func autoConvert_v1beta1_OVNKubernetesConfig_To_v1beta2_OVNKubernetesConfig(in *OVNKubernetesConfig, out *v1beta2.OVNKubernetesConfig, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.DaemonSetName = in.DaemonSetName
	out.ContainerName = in.ContainerName
	return nil
}

// Convert_v1beta1_OVNKubernetesConfig_To_v1beta2_OVNKubernetesConfig is an autogenerated conversion function.
func Convert_v1beta1_OVNKubernetesConfig_To_v1beta2_OVNKubernetesConfig(in *OVNKubernetesConfig, out *v1beta2.OVNKubernetesConfig, s conversion.Scope) error {
	return autoConvert_v1beta1_OVNKubernetesConfig_To_v1beta2_OVNKubernetesConfig(in, out, s)
}

func autoConvert_v1beta2_OVNKubernetesConfig_To_v1beta1_OVNKubernetesConfig(in *v1beta2.OVNKubernetesConfig, out *OVNKubernetesConfig, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.DaemonSetName = in.DaemonSetName
	out.ContainerName = in.ContainerName
	return nil
}

// Convert_v1beta2_OVNKubernetesConfig_To_v1beta1_OVNKubernetesConfig is an autogenerated conversion function.
func Convert_v1beta2_OVNKubernetesConfig_To_v1beta1_OVNKubernetesConfig(in *v1beta2.OVNKubernetesConfig, out *OVNKubernetesConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_OVNKubernetesConfig_To_v1beta1_OVNKubernetesConfig(in, out, s)
}

func autoConvert_v1beta1_PrometheusQuerier_To_v1beta2_PrometheusQuerier(in *PrometheusQuerier, out *v1beta2.PrometheusQuerier, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.Mode = v1beta2.PrometheusMode(in.Mode)
	if err := Convert_v1beta1_PrometheusQuerierManual_To_v1beta2_PrometheusQuerierManual(&in.Manual, &out.Manual, s); err != nil {
		return err
	}
	out.Timeout = (*v1.Duration)(unsafe.Pointer(in.Timeout))
	return nil
}

// Convert_v1beta1_PrometheusQuerier_To_v1beta2_PrometheusQuerier is an autogenerated conversion function.
func Convert_v1beta1_PrometheusQuerier_To_v1beta2_PrometheusQuerier(in *PrometheusQuerier, out *v1beta2.PrometheusQuerier, s conversion.Scope) error {
	return autoConvert_v1beta1_PrometheusQuerier_To_v1beta2_PrometheusQuerier(in, out, s)
}

func autoConvert_v1beta2_PrometheusQuerier_To_v1beta1_PrometheusQuerier(in *v1beta2.PrometheusQuerier, out *PrometheusQuerier, s conversion.Scope) error {
	out.Enable = (*bool)(unsafe.Pointer(in.Enable))
	out.Mode = PrometheusMode(in.Mode)
	if err := Convert_v1beta2_PrometheusQuerierManual_To_v1beta1_PrometheusQuerierManual(&in.Manual, &out.Manual, s); err != nil {
		return err
	}
	out.Timeout = (*v1.Duration)(unsafe.Pointer(in.Timeout))
	return nil
}

// Convert_v1beta2_PrometheusQuerier_To_v1beta1_PrometheusQuerier is an autogenerated conversion function.
func Convert_v1beta2_PrometheusQuerier_To_v1beta1_PrometheusQuerier(in *v1beta2.PrometheusQuerier, out *PrometheusQuerier, s conversion.Scope) error {
	return autoConvert_v1beta2_PrometheusQuerier_To_v1beta1_PrometheusQuerier(in, out, s)
}

func autoConvert_v1beta1_PrometheusQuerierManual_To_v1beta2_PrometheusQuerierManual(in *PrometheusQuerierManual, out *v1beta2.PrometheusQuerierManual, s conversion.Scope) error {
	out.URL = in.URL
	if err := Convert_v1beta1_ClientTLS_To_v1beta2_ClientTLS(&in.TLS, &out.TLS, s); err != nil {
		return err
	}
	out.ForwardUserToken = in.ForwardUserToken
	return nil
}

// Convert_v1beta1_PrometheusQuerierManual_To_v1beta2_PrometheusQuerierManual is an autogenerated conversion function.
func Convert_v1beta1_PrometheusQuerierManual_To_v1beta2_PrometheusQuerierManual(in *PrometheusQuerierManual, out *v1beta2.PrometheusQuerierManual, s conversion.Scope) error {
	return autoConvert_v1beta1_PrometheusQuerierManual_To_v1beta2_PrometheusQuerierManual(in, out, s)
}

func autoConvert_v1beta2_PrometheusQuerierManual_To_v1beta1_PrometheusQuerierManual(in *v1beta2.PrometheusQuerierManual, out *PrometheusQuerierManual, s conversion.Scope) error {
	out.URL = in.URL
	if err := Convert_v1beta2_ClientTLS_To_v1beta1_ClientTLS(&in.TLS, &out.TLS, s); err != nil {
		return err
	}
	out.ForwardUserToken = in.ForwardUserToken
	return nil
}

// Convert_v1beta2_PrometheusQuerierManual_To_v1beta1_PrometheusQuerierManual is an autogenerated conversion function.
func Convert_v1beta2_PrometheusQuerierManual_To_v1beta1_PrometheusQuerierManual(in *v1beta2.PrometheusQuerierManual, out *PrometheusQuerierManual, s conversion.Scope) error {
	return autoConvert_v1beta2_PrometheusQuerierManual_To_v1beta1_PrometheusQuerierManual(in, out, s)
}

func autoConvert_v1beta1_QuickFilter_To_v1beta2_QuickFilter(in *QuickFilter, out *v1beta2.QuickFilter, s conversion.Scope) error {
	out.Name = in.Name
	out.Filter = *(*map[string]string)(unsafe.Pointer(&in.Filter))
	out.Default = in.Default
	return nil
}

// Convert_v1beta1_QuickFilter_To_v1beta2_QuickFilter is an autogenerated conversion function.
func Convert_v1beta1_QuickFilter_To_v1beta2_QuickFilter(in *QuickFilter, out *v1beta2.QuickFilter, s conversion.Scope) error {
	return autoConvert_v1beta1_QuickFilter_To_v1beta2_QuickFilter(in, out, s)
}

func autoConvert_v1beta2_QuickFilter_To_v1beta1_QuickFilter(in *v1beta2.QuickFilter, out *QuickFilter, s conversion.Scope) error {
	out.Name = in.Name
	out.Filter = *(*map[string]string)(unsafe.Pointer(&in.Filter))
	out.Default = in.Default
	return nil
}

// Convert_v1beta2_QuickFilter_To_v1beta1_QuickFilter is an autogenerated conversion function.
func Convert_v1beta2_QuickFilter_To_v1beta1_QuickFilter(in *v1beta2.QuickFilter, out *QuickFilter, s conversion.Scope) error {
	return autoConvert_v1beta2_QuickFilter_To_v1beta1_QuickFilter(in, out, s)
}

func autoConvert_v1beta1_SASLConfig_To_v1beta2_SASLConfig(in *SASLConfig, out *v1beta2.SASLConfig, s conversion.Scope) error {
	out.Type = v1beta2.SASLType(in.Type)
	if err := Convert_v1beta1_FileReference_To_v1beta2_FileReference(&in.ClientIDReference, &out.ClientIDReference, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_FileReference_To_v1beta2_FileReference(&in.ClientSecretReference, &out.ClientSecretReference, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta2_SASLConfig_To_v1beta1_SASLConfig(in *v1beta2.SASLConfig, out *SASLConfig, s conversion.Scope) error {
	out.Type = SASLType(in.Type)
	if err := Convert_v1beta2_FileReference_To_v1beta1_FileReference(&in.ClientIDReference, &out.ClientIDReference, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_FileReference_To_v1beta1_FileReference(&in.ClientSecretReference, &out.ClientSecretReference, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_ServerTLS_To_v1beta2_ServerTLS(in *ServerTLS, out *v1beta2.ServerTLS, s conversion.Scope) error {
	out.Type = v1beta2.ServerTLSConfigType(in.Type)
	out.Provided = (*v1beta2.CertificateReference)(unsafe.Pointer(in.Provided))
	out.InsecureSkipVerify = in.InsecureSkipVerify
	out.ProvidedCaFile = (*v1beta2.FileReference)(unsafe.Pointer(in.ProvidedCaFile))
	return nil
}

func autoConvert_v1beta2_ServerTLS_To_v1beta1_ServerTLS(in *v1beta2.ServerTLS, out *ServerTLS, s conversion.Scope) error {
	out.Type = ServerTLSConfigType(in.Type)
	out.Provided = (*CertificateReference)(unsafe.Pointer(in.Provided))
	out.InsecureSkipVerify = in.InsecureSkipVerify
	out.ProvidedCaFile = (*FileReference)(unsafe.Pointer(in.ProvidedCaFile))
	return nil
}

func autoConvert_v1beta1_SubnetLabel_To_v1beta2_SubnetLabel(in *SubnetLabel, out *v1beta2.SubnetLabel, s conversion.Scope) error {
	out.CIDRs = *(*[]string)(unsafe.Pointer(&in.CIDRs))
	out.Name = in.Name
	return nil
}

// Convert_v1beta1_SubnetLabel_To_v1beta2_SubnetLabel is an autogenerated conversion function.
func Convert_v1beta1_SubnetLabel_To_v1beta2_SubnetLabel(in *SubnetLabel, out *v1beta2.SubnetLabel, s conversion.Scope) error {
	return autoConvert_v1beta1_SubnetLabel_To_v1beta2_SubnetLabel(in, out, s)
}

func autoConvert_v1beta2_SubnetLabel_To_v1beta1_SubnetLabel(in *v1beta2.SubnetLabel, out *SubnetLabel, s conversion.Scope) error {
	out.CIDRs = *(*[]string)(unsafe.Pointer(&in.CIDRs))
	out.Name = in.Name
	return nil
}

// Convert_v1beta2_SubnetLabel_To_v1beta1_SubnetLabel is an autogenerated conversion function.
func Convert_v1beta2_SubnetLabel_To_v1beta1_SubnetLabel(in *v1beta2.SubnetLabel, out *SubnetLabel, s conversion.Scope) error {
	return autoConvert_v1beta2_SubnetLabel_To_v1beta1_SubnetLabel(in, out, s)
}

func autoConvert_v1beta1_SubnetLabels_To_v1beta2_SubnetLabels(in *SubnetLabels, out *v1beta2.SubnetLabels, s conversion.Scope) error {
	out.OpenShiftAutoDetect = (*bool)(unsafe.Pointer(in.OpenShiftAutoDetect))
	out.CustomLabels = *(*[]v1beta2.SubnetLabel)(unsafe.Pointer(&in.CustomLabels))
	return nil
}

// Convert_v1beta1_SubnetLabels_To_v1beta2_SubnetLabels is an autogenerated conversion function.
func Convert_v1beta1_SubnetLabels_To_v1beta2_SubnetLabels(in *SubnetLabels, out *v1beta2.SubnetLabels, s conversion.Scope) error {
	return autoConvert_v1beta1_SubnetLabels_To_v1beta2_SubnetLabels(in, out, s)
}

func autoConvert_v1beta2_SubnetLabels_To_v1beta1_SubnetLabels(in *v1beta2.SubnetLabels, out *SubnetLabels, s conversion.Scope) error {
	out.OpenShiftAutoDetect = (*bool)(unsafe.Pointer(in.OpenShiftAutoDetect))
	out.CustomLabels = *(*[]SubnetLabel)(unsafe.Pointer(&in.CustomLabels))
	return nil
}

// Convert_v1beta2_SubnetLabels_To_v1beta1_SubnetLabels is an autogenerated conversion function.
func Convert_v1beta2_SubnetLabels_To_v1beta1_SubnetLabels(in *v1beta2.SubnetLabels, out *SubnetLabels, s conversion.Scope) error {
	return autoConvert_v1beta2_SubnetLabels_To_v1beta1_SubnetLabels(in, out, s)
}
