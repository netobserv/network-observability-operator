image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:04175cc31fb28069f75e5043fad4ae86ccb471ed13b63c6e6aa19a295071e9a6
name: network-observability-operator.v1.0.0-202301070345
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.0.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel8@sha256:90914aa8e4a2dd1f82873c291b134f316d0637aab74c2663f3121fff54cdc835
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel8@sha256:586fe7c6500847badfbd58035b106201627d465103f1586e510c572818d31471
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel8@sha256:457e0c168f49076970e5dc99daef9f4bf8b165b737aae1d208f90cbae0f93f89
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:04175cc31fb28069f75e5043fad4ae86ccb471ed13b63c6e6aa19a295071e9a6
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel8-operator@sha256:fc5f340e486deddc1b5b10a2c3f20f9eec716a2605f74b1f31907cb7d6a64352
    name: network-observability-rhel8-operator-fc5f340e486deddc1b5b10a2c3f20f9eec716a2605f74b1f31907cb7d6a64352-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel8-operator@sha256:fc5f340e486deddc1b5b10a2c3f20f9eec716a2605f74b1f31907cb7d6a64352
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7b7e6458e11260b217f2b96f2ce6618d0f6739f8041b28174b31258aecf8fcfb
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:757ae641f759f0e62b72947321df4f03430f74917f65c4d04f7f8e67ff7ccca1
name: network-observability-operator.v1.1.0-202302110050
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.1.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImZsb3djb2xsZWN0b3JzLmZsb3dzLm5ldG9ic2Vydi5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoiZmxvd3MubmV0b2JzZXJ2LmlvIiwibmFtZXMiOnsia2luZCI6IkZsb3dDb2xsZWN0b3IiLCJsaXN0S2luZCI6IkZsb3dDb2xsZWN0b3JMaXN0IiwicGx1cmFsIjoiZmxvd2NvbGxlY3RvcnMiLCJzaW5ndWxhciI6ImZsb3djb2xsZWN0b3IifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5hZ2VudC50eXBlIiwibmFtZSI6IkFnZW50IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5hZ2VudC5lYnBmLnNhbXBsaW5nIiwibmFtZSI6IlNhbXBsaW5nIChFQlBGKSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuZGVwbG95bWVudE1vZGVsIiwibmFtZSI6IkRlcGxveW1lbnQgTW9kZWwiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1sqXS5yZWFzb24iLCJuYW1lIjoiU3RhdHVzIiwidHlwZSI6InN0cmluZyJ9XSwibmFtZSI6InYxYWxwaGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6IkZsb3dDb2xsZWN0b3IgaXMgdGhlIFNjaGVtYSBmb3IgdGhlIGZsb3djb2xsZWN0b3JzIEFQSSwgd2hpY2ggcGlsb3RzIGFuZCBjb25maWd1cmVzIG5ldGZsb3cgY29sbGVjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJwYXR0ZXJuIjoiXmNsdXN0ZXIkIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiRmxvd0NvbGxlY3RvclNwZWMgZGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiBGbG93Q29sbGVjdG9yIiwicHJvcGVydGllcyI6eyJhZ2VudCI6eyJkZWZhdWx0Ijp7InR5cGUiOiJFQlBGIn0sImRlc2NyaXB0aW9uIjoiYWdlbnQgZm9yIGZsb3dzIGV4dHJhY3Rpb24uIiwicHJvcGVydGllcyI6eyJlYnBmIjp7ImRlc2NyaXB0aW9uIjoiZWJwZiBkZXNjcmliZXMgdGhlIHNldHRpbmdzIHJlbGF0ZWQgdG8gdGhlIGVCUEYtYmFzZWQgZmxvdyByZXBvcnRlciB3aGVuIHRoZSBcImFnZW50LnR5cGVcIiBwcm9wZXJ0eSBpcyBzZXQgdG8gXCJFQlBGXCIuIiwicHJvcGVydGllcyI6eyJjYWNoZUFjdGl2ZVRpbWVvdXQiOnsiZGVmYXVsdCI6IjVzIiwiZGVzY3JpcHRpb24iOiJjYWNoZUFjdGl2ZVRpbWVvdXQgaXMgdGhlIG1heCBwZXJpb2QgZHVyaW5nIHdoaWNoIHRoZSByZXBvcnRlciB3aWxsIGFnZ3JlZ2F0ZSBmbG93cyBiZWZvcmUgc2VuZGluZyIsInBhdHRlcm4iOiJeXFxkKyhuc3xtc3xzfG0pPyQiLCJ0eXBlIjoic3RyaW5nIn0sImNhY2hlTWF4Rmxvd3MiOnsiZGVmYXVsdCI6MTAwMDAwLCJkZXNjcmlwdGlvbiI6ImNhY2hlTWF4Rmxvd3MgaXMgdGhlIG1heCBudW1iZXIgb2YgZmxvd3MgaW4gYW4gYWdncmVnYXRlOyB3aGVuIHJlYWNoZWQsIHRoZSByZXBvcnRlciBzZW5kcyB0aGUgZmxvd3MiLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sImRlYnVnIjp7ImRlc2NyaXB0aW9uIjoiRGVidWcgYWxsb3dzIHNldHRpbmcgc29tZSBhc3BlY3RzIG9mIHRoZSBpbnRlcm5hbCBjb25maWd1cmF0aW9uIG9mIHRoZSBlQlBGIGFnZW50LiBUaGlzIHNlY3Rpb24gaXMgYWltZWQgZXhjbHVzaXZlbHkgZm9yIGRlYnVnZ2luZyBhbmQgZmluZS1ncmFpbmVkIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbnMgKGUuZy4gR09HQywgR09NQVhQUk9DUyBlbnYgdmFycykuIFVzZXJzIHNldHRpbmcgaXRzIHZhbHVlcyBkbyBpdCBhdCB0aGVpciBvd24gcmlzay4iLCJwcm9wZXJ0aWVzIjp7ImVudiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiZW52IGFsbG93cyBwYXNzaW5nIGN1c3RvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gdGhlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBBZ2VudC4gVXNlZnVsIGZvciBwYXNzaW5nIHNvbWUgdmVyeSBjb25jcmV0ZSBwZXJmb3JtYW5jZS10dW5pbmcgb3B0aW9ucyAoZS5nLiBHT0dDLCBHT01BWFBST0NTKSB0aGF0IHNob3VsZG4ndCBiZSBwdWJsaWNseSBleHBvc2VkIGFzIHBhcnQgb2YgdGhlIEZsb3dDb2xsZWN0b3IgZGVzY3JpcHRvciwgYXMgdGhleSBhcmUgb25seSB1c2VmdWwgaW4gZWRnZSBkZWJ1Zy9zdXBwb3J0IHNjZW5hcmlvcy4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImV4Y2x1ZGVJbnRlcmZhY2VzIjp7ImRlZmF1bHQiOlsibG8iXSwiZGVzY3JpcHRpb24iOiJleGNsdWRlSW50ZXJmYWNlcyBjb250YWlucyB0aGUgaW50ZXJmYWNlIG5hbWVzIHRoYXQgd2lsbCBiZSBleGNsdWRlZCBmcm9tIGZsb3cgdHJhY2luZy4gSWYgYW4gZW50cnkgaXMgZW5jbG9zZWQgYnkgc2xhc2hlcyAoZS5nLiBgL2JyLS9gKSwgaXQgd2lsbCBtYXRjaCBhcyByZWd1bGFyIGV4cHJlc3Npb24sIG90aGVyd2lzZSBpdCB3aWxsIGJlIG1hdGNoZWQgYXMgYSBjYXNlLXNlbnNpdGl2ZSBzdHJpbmcuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiaW1hZ2VQdWxsUG9saWN5Ijp7ImRlZmF1bHQiOiJJZk5vdFByZXNlbnQiLCJkZXNjcmlwdGlvbiI6ImltYWdlUHVsbFBvbGljeSBpcyB0aGUgS3ViZXJuZXRlcyBwdWxsIHBvbGljeSBmb3IgdGhlIGltYWdlIGRlZmluZWQgYWJvdmUiLCJlbnVtIjpbIklmTm90UHJlc2VudCIsIkFsd2F5cyIsIk5ldmVyIl0sInR5cGUiOiJzdHJpbmcifSwiaW50ZXJmYWNlcyI6eyJkZXNjcmlwdGlvbiI6ImludGVyZmFjZXMgY29udGFpbnMgdGhlIGludGVyZmFjZSBuYW1lcyBmcm9tIHdoZXJlIGZsb3dzIHdpbGwgYmUgY29sbGVjdGVkLiBJZiBlbXB0eSwgdGhlIGFnZW50IHdpbGwgZmV0Y2ggYWxsIHRoZSBpbnRlcmZhY2VzIGluIHRoZSBzeXN0ZW0sIGV4Y2VwdGluZyB0aGUgb25lcyBsaXN0ZWQgaW4gRXhjbHVkZUludGVyZmFjZXMuIElmIGFuIGVudHJ5IGlzIGVuY2xvc2VkIGJ5IHNsYXNoZXMgKGUuZy4gYC9ici0vYCksIGl0IHdpbGwgbWF0Y2ggYXMgcmVndWxhciBleHByZXNzaW9uLCBvdGhlcndpc2UgaXQgd2lsbCBiZSBtYXRjaGVkIGFzIGEgY2FzZS1zZW5zaXRpdmUgc3RyaW5nLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImthZmthQmF0Y2hTaXplIjp7ImRlZmF1bHQiOjEwNDg1NzYwLCJkZXNjcmlwdGlvbiI6ImthZmthQmF0Y2hTaXplIGxpbWl0cyB0aGUgbWF4aW11bSBzaXplIG9mIGEgcmVxdWVzdCBpbiBieXRlcyBiZWZvcmUgYmVpbmcgc2VudCB0byBhIHBhcnRpdGlvbi4gSWdub3JlZCB3aGVuIG5vdCB1c2luZyBLYWZrYS4gRGVmYXVsdDogMTBNQi4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJsb2dMZXZlbCI6eyJkZWZhdWx0IjoiaW5mbyIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgZGVmaW5lcyB0aGUgbG9nIGxldmVsIGZvciB0aGUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGVCUEYgQWdlbnQiLCJlbnVtIjpbInRyYWNlIiwiZGVidWciLCJpbmZvIiwid2FybiIsImVycm9yIiwiZmF0YWwiLCJwYW5pYyJdLCJ0eXBlIjoic3RyaW5nIn0sInByaXZpbGVnZWQiOnsiZGVzY3JpcHRpb24iOiJwcml2aWxlZ2VkIG1vZGUgZm9yIHRoZSBlQlBGIEFnZW50IGNvbnRhaW5lci4gSW4gZ2VuZXJhbCB0aGlzIHNldHRpbmcgY2FuIGJlIGlnbm9yZWQgb3Igc2V0IHRvIGZhbHNlOiBpbiB0aGF0IGNhc2UsIHRoZSBvcGVyYXRvciB3aWxsIHNldCBncmFudWxhciBjYXBhYmlsaXRpZXMgKEJQRiwgUEVSRk1PTiwgTkVUX0FETUlOLCBTWVNfUkVTT1VSQ0UpIHRvIHRoZSBjb250YWluZXIsIHRvIGVuYWJsZSBpdHMgY29ycmVjdCBvcGVyYXRpb24uIElmIGZvciBzb21lIHJlYXNvbiB0aGVzZSBjYXBhYmlsaXRpZXMgY2Fubm90IGJlIHNldCAoZS5nLiBvbGQga2VybmVsIHZlcnNpb24gbm90IGtub3dpbmcgQ0FQX0JQRikgdGhlbiB5b3UgY2FuIHR1cm4gb24gdGhpcyBtb2RlIGZvciBtb3JlIGdsb2JhbCBwcml2aWxlZ2VzLiIsInR5cGUiOiJib29sZWFuIn0sInJlc291cmNlcyI6eyJkZWZhdWx0Ijp7ImxpbWl0cyI6eyJtZW1vcnkiOiI4MDBNaSJ9LCJyZXF1ZXN0cyI6eyJjcHUiOiIxMDBtIiwibWVtb3J5IjoiNTBNaSJ9fSwiZGVzY3JpcHRpb24iOiJyZXNvdXJjZXMgYXJlIHRoZSBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZCBieSB0aGlzIGNvbnRhaW5lci4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJwcm9wZXJ0aWVzIjp7ImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC4gSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLCBvdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNhbXBsaW5nIjp7ImRlZmF1bHQiOjUwLCJkZXNjcmlwdGlvbiI6InNhbXBsaW5nIHJhdGUgb2YgdGhlIGZsb3cgcmVwb3J0ZXIuIDEwMCBtZWFucyBvbmUgZmxvdyBvbiAxMDAgaXMgc2VudC4gMCBvciAxIG1lYW5zIGFsbCBmbG93cyBhcmUgc2FtcGxlZC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sImlwZml4Ijp7ImRlc2NyaXB0aW9uIjoiaXBmaXggZGVzY3JpYmVzIHRoZSBzZXR0aW5ncyByZWxhdGVkIHRvIHRoZSBJUEZJWC1iYXNlZCBmbG93IHJlcG9ydGVyIHdoZW4gdGhlIFwiYWdlbnQudHlwZVwiIHByb3BlcnR5IGlzIHNldCB0byBcIklQRklYXCIuIiwicHJvcGVydGllcyI6eyJjYWNoZUFjdGl2ZVRpbWVvdXQiOnsiZGVmYXVsdCI6IjIwcyIsImRlc2NyaXB0aW9uIjoiY2FjaGVBY3RpdmVUaW1lb3V0IGlzIHRoZSBtYXggcGVyaW9kIGR1cmluZyB3aGljaCB0aGUgcmVwb3J0ZXIgd2lsbCBhZ2dyZWdhdGUgZmxvd3MgYmVmb3JlIHNlbmRpbmciLCJwYXR0ZXJuIjoiXlxcZCsobnN8bXN8c3xtKT8kIiwidHlwZSI6InN0cmluZyJ9LCJjYWNoZU1heEZsb3dzIjp7ImRlZmF1bHQiOjQwMCwiZGVzY3JpcHRpb24iOiJjYWNoZU1heEZsb3dzIGlzIHRoZSBtYXggbnVtYmVyIG9mIGZsb3dzIGluIGFuIGFnZ3JlZ2F0ZTsgd2hlbiByZWFjaGVkLCB0aGUgcmVwb3J0ZXIgc2VuZHMgdGhlIGZsb3dzIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJjbHVzdGVyTmV0d29ya09wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiY2x1c3Rlck5ldHdvcmtPcGVyYXRvciBkZWZpbmVzIHRoZSBzZXR0aW5ncyByZWxhdGVkIHRvIHRoZSBPcGVuU2hpZnQgQ2x1c3RlciBOZXR3b3JrIE9wZXJhdG9yLCB3aGVuIGF2YWlsYWJsZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWVzcGFjZSI6eyJkZWZhdWx0Ijoib3BlbnNoaWZ0LW5ldHdvcmstb3BlcmF0b3IiLCJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZSAgd2hlcmUgdGhlIGNvbmZpZ21hcCBpcyBnb2luZyB0byBiZSBkZXBsb3llZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImZvcmNlU2FtcGxlQWxsIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImZvcmNlU2FtcGxlQWxsIGFsbG93cyBkaXNhYmxpbmcgc2FtcGxpbmcgaW4gdGhlIElQRklYLWJhc2VkIGZsb3cgcmVwb3J0ZXIuIEl0IGlzIG5vdCByZWNvbW1lbmRlZCB0byBzYW1wbGUgYWxsIHRoZSB0cmFmZmljIHdpdGggSVBGSVgsIGFzIGl0IG1heSBnZW5lcmF0ZSBjbHVzdGVyIGluc3RhYmlsaXR5LiBJZiB5b3UgUkVBTExZIHdhbnQgdG8gZG8gdGhhdCwgc2V0IHRoaXMgZmxhZyB0byB0cnVlLiBVc2UgYXQgeW91ciBvd24gcmlzay4gV2hlbiBpdCBpcyBzZXQgdG8gdHJ1ZSwgdGhlIHZhbHVlIG9mIFwic2FtcGxpbmdcIiBpcyBpZ25vcmVkLiIsInR5cGUiOiJib29sZWFuIn0sIm92bkt1YmVybmV0ZXMiOnsiZGVzY3JpcHRpb24iOiJvdm5LdWJlcm5ldGVzIGRlZmluZXMgdGhlIHNldHRpbmdzIG9mIHRoZSBPVk4tS3ViZXJuZXRlcyBDTkksIHdoZW4gYXZhaWxhYmxlLiBUaGlzIGNvbmZpZ3VyYXRpb24gaXMgdXNlZCB3aGVuIHVzaW5nIE9WTidzIElQRklYIGV4cG9ydHMsIHdpdGhvdXQgT3BlblNoaWZ0LiBXaGVuIHVzaW5nIE9wZW5TaGlmdCwgcmVmZXIgdG8gdGhlIGBjbHVzdGVyTmV0d29ya09wZXJhdG9yYCBwcm9wZXJ0eSBpbnN0ZWFkLiIsInByb3BlcnRpZXMiOnsiY29udGFpbmVyTmFtZSI6eyJkZWZhdWx0Ijoib3Zua3ViZS1ub2RlIiwiZGVzY3JpcHRpb24iOiJjb250YWluZXJOYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIGNvbnRhaW5lciB0byBjb25maWd1cmUgZm9yIElQRklYLiIsInR5cGUiOiJzdHJpbmcifSwiZGFlbW9uU2V0TmFtZSI6eyJkZWZhdWx0Ijoib3Zua3ViZS1ub2RlIiwiZGVzY3JpcHRpb24iOiJkYWVtb25TZXROYW1lIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIERhZW1vblNldCBjb250cm9sbGluZyB0aGUgT1ZOLUt1YmVybmV0ZXMgcG9kcy4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0Ijoib3ZuLWt1YmVybmV0ZXMiLCJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZSB3aGVyZSBPVk4tS3ViZXJuZXRlcyBwb2RzIGFyZSBkZXBsb3llZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInNhbXBsaW5nIjp7ImRlZmF1bHQiOjQwMCwiZGVzY3JpcHRpb24iOiJzYW1wbGluZyBpcyB0aGUgc2FtcGxpbmcgcmF0ZSBvbiB0aGUgcmVwb3J0ZXIuIDEwMCBtZWFucyBvbmUgZmxvdyBvbiAxMDAgaXMgc2VudC4gVG8gZW5zdXJlIGNsdXN0ZXIgc3RhYmlsaXR5LCBpdCBpcyBub3QgcG9zc2libGUgdG8gc2V0IGEgdmFsdWUgYmVsb3cgMi4gSWYgeW91IHJlYWxseSB3YW50IHRvIHNhbXBsZSBldmVyeSBwYWNrZXQsIHdoaWNoIG1heSBpbXBhY3QgdGhlIGNsdXN0ZXIgc3RhYmlsaXR5LCByZWZlciB0byBcImZvcmNlU2FtcGxlQWxsXCIuIEFsdGVybmF0aXZlbHksIHlvdSBjYW4gdXNlIHRoZSBlQlBGIEFnZW50IGluc3RlYWQgb2YgSVBGSVguIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjoyLCJ0eXBlIjoiaW50ZWdlciJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJFQlBGIiwiZGVzY3JpcHRpb24iOiJ0eXBlIHNlbGVjdHMgdGhlIGZsb3dzIHRyYWNpbmcgYWdlbnQuIFBvc3NpYmxlIHZhbHVlcyBhcmUgXCJFQlBGXCIgKGRlZmF1bHQpIHRvIHVzZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgZUJQRiBhZ2VudCwgXCJJUEZJWFwiIHRvIHVzZSB0aGUgbGVnYWN5IElQRklYIGNvbGxlY3Rvci4gXCJFQlBGXCIgaXMgcmVjb21tZW5kZWQgaW4gbW9zdCBjYXNlcyBhcyBpdCBvZmZlcnMgYmV0dGVyIHBlcmZvcm1hbmNlcyBhbmQgc2hvdWxkIHdvcmsgcmVnYXJkbGVzcyBvZiB0aGUgQ05JIGluc3RhbGxlZCBvbiB0aGUgY2x1c3Rlci4gXCJJUEZJWFwiIHdvcmtzIHdpdGggT1ZOLUt1YmVybmV0ZXMgQ05JIChvdGhlciBDTklzIGNvdWxkIHdvcmsgaWYgdGhleSBzdXBwb3J0IGV4cG9ydGluZyBJUEZJWCwgYnV0IHRoZXkgd291bGQgcmVxdWlyZSBtYW51YWwgY29uZmlndXJhdGlvbikuIiwiZW51bSI6WyJFQlBGIiwiSVBGSVgiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sImNvbnNvbGVQbHVnaW4iOnsiZGVzY3JpcHRpb24iOiJjb25zb2xlUGx1Z2luIGRlZmluZXMgdGhlIHNldHRpbmdzIHJlbGF0ZWQgdG8gdGhlIE9wZW5TaGlmdCBDb25zb2xlIHBsdWdpbiwgd2hlbiBhdmFpbGFibGUuIiwicHJvcGVydGllcyI6eyJhdXRvc2NhbGVyIjp7ImRlc2NyaXB0aW9uIjoiYXV0b3NjYWxlciBzcGVjIG9mIGEgaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlciB0byBzZXQgdXAgZm9yIHRoZSBwbHVnaW4gRGVwbG95bWVudC4iLCJwcm9wZXJ0aWVzIjp7Im1heFJlcGxpY2FzIjp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoibWF4UmVwbGljYXMgaXMgdGhlIHVwcGVyIGxpbWl0IGZvciB0aGUgbnVtYmVyIG9mIHBvZHMgdGhhdCBjYW4gYmUgc2V0IGJ5IHRoZSBhdXRvc2NhbGVyOyBjYW5ub3QgYmUgc21hbGxlciB0aGFuIE1pblJlcGxpY2FzLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwibWV0cmljcyI6eyJkZXNjcmlwdGlvbiI6Im1ldHJpY3MgdXNlZCBieSB0aGUgcG9kIGF1dG9zY2FsZXIiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik1ldHJpY1NwZWMgc3BlY2lmaWVzIGhvdyB0byBzY2FsZSBiYXNlZCBvbiBhIHNpbmdsZSBtZXRyaWMgKG9ubHkgYHR5cGVgIGFuZCBvbmUgb3RoZXIgbWF0Y2hpbmcgZmllbGQgc2hvdWxkIGJlIHNldCBhdCBvbmNlKS4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lclJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoiY29udGFpbmVyUmVzb3VyY2UgcmVmZXJzIHRvIGEgcmVzb3VyY2UgbWV0cmljIChzdWNoIGFzIHRob3NlIHNwZWNpZmllZCBpbiByZXF1ZXN0cyBhbmQgbGltaXRzKSBrbm93biB0byBLdWJlcm5ldGVzIGRlc2NyaWJpbmcgYSBzaW5nbGUgY29udGFpbmVyIGluIGVhY2ggcG9kIG9mIHRoZSBjdXJyZW50IHNjYWxlIHRhcmdldCAoZS5nLiBDUFUgb3IgbWVtb3J5KS4gU3VjaCBtZXRyaWNzIGFyZSBidWlsdCBpbiB0byBLdWJlcm5ldGVzLCBhbmQgaGF2ZSBzcGVjaWFsIHNjYWxpbmcgb3B0aW9ucyBvbiB0b3Agb2YgdGhvc2UgYXZhaWxhYmxlIHRvIG5vcm1hbCBwZXItcG9kIG1ldHJpY3MgdXNpbmcgdGhlIFwicG9kc1wiIHNvdXJjZS4gVGhpcyBpcyBhbiBhbHBoYSBmZWF0dXJlIGFuZCBjYW4gYmUgZW5hYmxlZCBieSB0aGUgSFBBQ29udGFpbmVyTWV0cmljcyBmZWF0dXJlIGZsYWcuIiwicHJvcGVydGllcyI6eyJjb250YWluZXIiOnsiZGVzY3JpcHRpb24iOiJjb250YWluZXIgaXMgdGhlIG5hbWUgb2YgdGhlIGNvbnRhaW5lciBpbiB0aGUgcG9kcyBvZiB0aGUgc2NhbGluZyB0YXJnZXQiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIGlzIHRoZSBuYW1lIG9mIHRoZSByZXNvdXJjZSBpbiBxdWVzdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldCI6eyJkZXNjcmlwdGlvbiI6InRhcmdldCBzcGVjaWZpZXMgdGhlIHRhcmdldCB2YWx1ZSBmb3IgdGhlIGdpdmVuIG1ldHJpYyIsInByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiYXZlcmFnZVV0aWxpemF0aW9uIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHJlc291cmNlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMsIHJlcHJlc2VudGVkIGFzIGEgcGVyY2VudGFnZSBvZiB0aGUgcmVxdWVzdGVkIHZhbHVlIG9mIHRoZSByZXNvdXJjZSBmb3IgdGhlIHBvZHMuIEN1cnJlbnRseSBvbmx5IHZhbGlkIGZvciBSZXNvdXJjZSBtZXRyaWMgc291cmNlIHR5cGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiYXZlcmFnZVZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMgKGFzIGEgcXVhbnRpdHkpIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSByZXByZXNlbnRzIHdoZXRoZXIgdGhlIG1ldHJpYyB0eXBlIGlzIFV0aWxpemF0aW9uLCBWYWx1ZSwgb3IgQXZlcmFnZVZhbHVlIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoidmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgbWV0cmljIChhcyBhIHF1YW50aXR5KS4iLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNvbnRhaW5lciIsIm5hbWUiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJleHRlcm5hbCI6eyJkZXNjcmlwdGlvbiI6ImV4dGVybmFsIHJlZmVycyB0byBhIGdsb2JhbCBtZXRyaWMgdGhhdCBpcyBub3QgYXNzb2NpYXRlZCB3aXRoIGFueSBLdWJlcm5ldGVzIG9iamVjdC4gSXQgYWxsb3dzIGF1dG9zY2FsaW5nIGJhc2VkIG9uIGluZm9ybWF0aW9uIGNvbWluZyBmcm9tIGNvbXBvbmVudHMgcnVubmluZyBvdXRzaWRlIG9mIGNsdXN0ZXIgKGZvciBleGFtcGxlIGxlbmd0aCBvZiBxdWV1ZSBpbiBjbG91ZCBtZXNzYWdpbmcgc2VydmljZSwgb3IgUVBTIGZyb20gbG9hZGJhbGFuY2VyIHJ1bm5pbmcgb3V0c2lkZSBvZiBjbHVzdGVyKS4iLCJwcm9wZXJ0aWVzIjp7Im1ldHJpYyI6eyJkZXNjcmlwdGlvbiI6Im1ldHJpYyBpZGVudGlmaWVzIHRoZSB0YXJnZXQgbWV0cmljIGJ5IG5hbWUgYW5kIHNlbGVjdG9yIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgZ2l2ZW4gbWV0cmljIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6InNlbGVjdG9yIGlzIHRoZSBzdHJpbmctZW5jb2RlZCBmb3JtIG9mIGEgc3RhbmRhcmQga3ViZXJuZXRlcyBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIGdpdmVuIG1ldHJpYyBXaGVuIHNldCwgaXQgaXMgcGFzc2VkIGFzIGFuIGFkZGl0aW9uYWwgcGFyYW1ldGVyIHRvIHRoZSBtZXRyaWNzIHNlcnZlciBmb3IgbW9yZSBzcGVjaWZpYyBtZXRyaWNzIHNjb3BpbmcuIFdoZW4gdW5zZXQsIGp1c3QgdGhlIG1ldHJpY05hbWUgd2lsbCBiZSB1c2VkIHRvIGdhdGhlciBtZXRyaWNzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsiZGVzY3JpcHRpb24iOiJ0YXJnZXQgc3BlY2lmaWVzIHRoZSB0YXJnZXQgdmFsdWUgZm9yIHRoZSBnaXZlbiBtZXRyaWMiLCJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJkZXNjcmlwdGlvbiI6ImF2ZXJhZ2VVdGlsaXphdGlvbiBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSByZXNvdXJjZSBtZXRyaWMgYWNyb3NzIGFsbCByZWxldmFudCBwb2RzLCByZXByZXNlbnRlZCBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHJlcXVlc3RlZCB2YWx1ZSBvZiB0aGUgcmVzb3VyY2UgZm9yIHRoZSBwb2RzLiBDdXJyZW50bHkgb25seSB2YWxpZCBmb3IgUmVzb3VyY2UgbWV0cmljIHNvdXJjZSB0eXBlIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6ImF2ZXJhZ2VWYWx1ZSBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSBtZXRyaWMgYWNyb3NzIGFsbCByZWxldmFudCBwb2RzIChhcyBhIHF1YW50aXR5KSIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgcmVwcmVzZW50cyB3aGV0aGVyIHRoZSBtZXRyaWMgdHlwZSBpcyBVdGlsaXphdGlvbiwgVmFsdWUsIG9yIEF2ZXJhZ2VWYWx1ZSIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6InZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIG1ldHJpYyAoYXMgYSBxdWFudGl0eSkuIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJvYmplY3QiOnsiZGVzY3JpcHRpb24iOiJvYmplY3QgcmVmZXJzIHRvIGEgbWV0cmljIGRlc2NyaWJpbmcgYSBzaW5nbGUga3ViZXJuZXRlcyBvYmplY3QgKGZvciBleGFtcGxlLCBoaXRzLXBlci1zZWNvbmQgb24gYW4gSW5ncmVzcyBvYmplY3QpLiIsInByb3BlcnRpZXMiOnsiZGVzY3JpYmVkT2JqZWN0Ijp7ImRlc2NyaXB0aW9uIjoiZGVzY3JpYmVkT2JqZWN0IHNwZWNpZmllcyB0aGUgZGVzY3JpcHRpb25zIG9mIGEgb2JqZWN0LHN1Y2ggYXMga2luZCxuYW1lIGFwaVZlcnNpb24iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUEkgdmVyc2lvbiBvZiB0aGUgcmVmZXJlbnQiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIG9mIHRoZSByZWZlcmVudDsgTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCN0eXBlcy1raW5kc1wiIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgcmVmZXJlbnQ7IE1vcmUgaW5mbzogaHR0cDovL2t1YmVybmV0ZXMuaW8vZG9jcy91c2VyLWd1aWRlL2lkZW50aWZpZXJzI25hbWVzIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsia2luZCIsIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJtZXRyaWMiOnsiZGVzY3JpcHRpb24iOiJtZXRyaWMgaWRlbnRpZmllcyB0aGUgdGFyZ2V0IG1ldHJpYyBieSBuYW1lIGFuZCBzZWxlY3RvciIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIGdpdmVuIG1ldHJpYyIsInR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJzZWxlY3RvciBpcyB0aGUgc3RyaW5nLWVuY29kZWQgZm9ybSBvZiBhIHN0YW5kYXJkIGt1YmVybmV0ZXMgbGFiZWwgc2VsZWN0b3IgZm9yIHRoZSBnaXZlbiBtZXRyaWMgV2hlbiBzZXQsIGl0IGlzIHBhc3NlZCBhcyBhbiBhZGRpdGlvbmFsIHBhcmFtZXRlciB0byB0aGUgbWV0cmljcyBzZXJ2ZXIgZm9yIG1vcmUgc3BlY2lmaWMgbWV0cmljcyBzY29waW5nLiBXaGVuIHVuc2V0LCBqdXN0IHRoZSBtZXRyaWNOYW1lIHdpbGwgYmUgdXNlZCB0byBnYXRoZXIgbWV0cmljcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy4gVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbiwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzIG1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZSBvcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidGFyZ2V0Ijp7ImRlc2NyaXB0aW9uIjoidGFyZ2V0IHNwZWNpZmllcyB0aGUgdGFyZ2V0IHZhbHVlIGZvciB0aGUgZ2l2ZW4gbWV0cmljIiwicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZGVzY3JpcHRpb24iOiJhdmVyYWdlVXRpbGl6YXRpb24gaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgcmVzb3VyY2UgbWV0cmljIGFjcm9zcyBhbGwgcmVsZXZhbnQgcG9kcywgcmVwcmVzZW50ZWQgYXMgYSBwZXJjZW50YWdlIG9mIHRoZSByZXF1ZXN0ZWQgdmFsdWUgb2YgdGhlIHJlc291cmNlIGZvciB0aGUgcG9kcy4gQ3VycmVudGx5IG9ubHkgdmFsaWQgZm9yIFJlc291cmNlIG1ldHJpYyBzb3VyY2UgdHlwZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJhdmVyYWdlVmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgbWV0cmljIGFjcm9zcyBhbGwgcmVsZXZhbnQgcG9kcyAoYXMgYSBxdWFudGl0eSkiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIHJlcHJlc2VudHMgd2hldGhlciB0aGUgbWV0cmljIHR5cGUgaXMgVXRpbGl6YXRpb24sIFZhbHVlLCBvciBBdmVyYWdlVmFsdWUiLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJ2YWx1ZSBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBtZXRyaWMgKGFzIGEgcXVhbnRpdHkpLiIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiZGVzY3JpYmVkT2JqZWN0IiwibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwicG9kcyI6eyJkZXNjcmlwdGlvbiI6InBvZHMgcmVmZXJzIHRvIGEgbWV0cmljIGRlc2NyaWJpbmcgZWFjaCBwb2QgaW4gdGhlIGN1cnJlbnQgc2NhbGUgdGFyZ2V0IChmb3IgZXhhbXBsZSwgdHJhbnNhY3Rpb25zLXByb2Nlc3NlZC1wZXItc2Vjb25kKS4gIFRoZSB2YWx1ZXMgd2lsbCBiZSBhdmVyYWdlZCB0b2dldGhlciBiZWZvcmUgYmVpbmcgY29tcGFyZWQgdG8gdGhlIHRhcmdldCB2YWx1ZS4iLCJwcm9wZXJ0aWVzIjp7Im1ldHJpYyI6eyJkZXNjcmlwdGlvbiI6Im1ldHJpYyBpZGVudGlmaWVzIHRoZSB0YXJnZXQgbWV0cmljIGJ5IG5hbWUgYW5kIHNlbGVjdG9yIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgZ2l2ZW4gbWV0cmljIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6InNlbGVjdG9yIGlzIHRoZSBzdHJpbmctZW5jb2RlZCBmb3JtIG9mIGEgc3RhbmRhcmQga3ViZXJuZXRlcyBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIGdpdmVuIG1ldHJpYyBXaGVuIHNldCwgaXQgaXMgcGFzc2VkIGFzIGFuIGFkZGl0aW9uYWwgcGFyYW1ldGVyIHRvIHRoZSBtZXRyaWNzIHNlcnZlciBmb3IgbW9yZSBzcGVjaWZpYyBtZXRyaWNzIHNjb3BpbmcuIFdoZW4gdW5zZXQsIGp1c3QgdGhlIG1ldHJpY05hbWUgd2lsbCBiZSB1c2VkIHRvIGdhdGhlciBtZXRyaWNzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsiZGVzY3JpcHRpb24iOiJ0YXJnZXQgc3BlY2lmaWVzIHRoZSB0YXJnZXQgdmFsdWUgZm9yIHRoZSBnaXZlbiBtZXRyaWMiLCJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJkZXNjcmlwdGlvbiI6ImF2ZXJhZ2VVdGlsaXphdGlvbiBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSByZXNvdXJjZSBtZXRyaWMgYWNyb3NzIGFsbCByZWxldmFudCBwb2RzLCByZXByZXNlbnRlZCBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHJlcXVlc3RlZCB2YWx1ZSBvZiB0aGUgcmVzb3VyY2UgZm9yIHRoZSBwb2RzLiBDdXJyZW50bHkgb25seSB2YWxpZCBmb3IgUmVzb3VyY2UgbWV0cmljIHNvdXJjZSB0eXBlIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6ImF2ZXJhZ2VWYWx1ZSBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSBtZXRyaWMgYWNyb3NzIGFsbCByZWxldmFudCBwb2RzIChhcyBhIHF1YW50aXR5KSIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgcmVwcmVzZW50cyB3aGV0aGVyIHRoZSBtZXRyaWMgdHlwZSBpcyBVdGlsaXphdGlvbiwgVmFsdWUsIG9yIEF2ZXJhZ2VWYWx1ZSIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6InZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIG1ldHJpYyAoYXMgYSBxdWFudGl0eSkuIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZSI6eyJkZXNjcmlwdGlvbiI6InJlc291cmNlIHJlZmVycyB0byBhIHJlc291cmNlIG1ldHJpYyAoc3VjaCBhcyB0aG9zZSBzcGVjaWZpZWQgaW4gcmVxdWVzdHMgYW5kIGxpbWl0cykga25vd24gdG8gS3ViZXJuZXRlcyBkZXNjcmliaW5nIGVhY2ggcG9kIGluIHRoZSBjdXJyZW50IHNjYWxlIHRhcmdldCAoZS5nLiBDUFUgb3IgbWVtb3J5KS4gU3VjaCBtZXRyaWNzIGFyZSBidWlsdCBpbiB0byBLdWJlcm5ldGVzLCBhbmQgaGF2ZSBzcGVjaWFsIHNjYWxpbmcgb3B0aW9ucyBvbiB0b3Agb2YgdGhvc2UgYXZhaWxhYmxlIHRvIG5vcm1hbCBwZXItcG9kIG1ldHJpY3MgdXNpbmcgdGhlIFwicG9kc1wiIHNvdXJjZS4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIGlzIHRoZSBuYW1lIG9mIHRoZSByZXNvdXJjZSBpbiBxdWVzdGlvbi4iLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldCI6eyJkZXNjcmlwdGlvbiI6InRhcmdldCBzcGVjaWZpZXMgdGhlIHRhcmdldCB2YWx1ZSBmb3IgdGhlIGdpdmVuIG1ldHJpYyIsInByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiYXZlcmFnZVV0aWxpemF0aW9uIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHJlc291cmNlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMsIHJlcHJlc2VudGVkIGFzIGEgcGVyY2VudGFnZSBvZiB0aGUgcmVxdWVzdGVkIHZhbHVlIG9mIHRoZSByZXNvdXJjZSBmb3IgdGhlIHBvZHMuIEN1cnJlbnRseSBvbmx5IHZhbGlkIGZvciBSZXNvdXJjZSBtZXRyaWMgc291cmNlIHR5cGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiYXZlcmFnZVZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMgKGFzIGEgcXVhbnRpdHkpIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSByZXByZXNlbnRzIHdoZXRoZXIgdGhlIG1ldHJpYyB0eXBlIGlzIFV0aWxpemF0aW9uLCBWYWx1ZSwgb3IgQXZlcmFnZVZhbHVlIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoidmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgbWV0cmljIChhcyBhIHF1YW50aXR5KS4iLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBpcyB0aGUgdHlwZSBvZiBtZXRyaWMgc291cmNlLiAgSXQgc2hvdWxkIGJlIG9uZSBvZiBcIkNvbnRhaW5lclJlc291cmNlXCIsIFwiRXh0ZXJuYWxcIiwgXCJPYmplY3RcIiwgXCJQb2RzXCIgb3IgXCJSZXNvdXJjZVwiLCBlYWNoIG1hcHBpbmcgdG8gYSBtYXRjaGluZyBmaWVsZCBpbiB0aGUgb2JqZWN0LiBOb3RlOiBcIkNvbnRhaW5lclJlc291cmNlXCIgdHlwZSBpcyBhdmFpbGFibGUgb24gd2hlbiB0aGUgZmVhdHVyZS1nYXRlIEhQQUNvbnRhaW5lck1ldHJpY3MgaXMgZW5hYmxlZCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWluUmVwbGljYXMiOnsiZGVzY3JpcHRpb24iOiJtaW5SZXBsaWNhcyBpcyB0aGUgbG93ZXIgbGltaXQgZm9yIHRoZSBudW1iZXIgb2YgcmVwbGljYXMgdG8gd2hpY2ggdGhlIGF1dG9zY2FsZXIgY2FuIHNjYWxlIGRvd24uICBJdCBkZWZhdWx0cyB0byAxIHBvZC4gIG1pblJlcGxpY2FzIGlzIGFsbG93ZWQgdG8gYmUgMCBpZiB0aGUgYWxwaGEgZmVhdHVyZSBnYXRlIEhQQVNjYWxlVG9aZXJvIGlzIGVuYWJsZWQgYW5kIGF0IGxlYXN0IG9uZSBPYmplY3Qgb3IgRXh0ZXJuYWwgbWV0cmljIGlzIGNvbmZpZ3VyZWQuICBTY2FsaW5nIGlzIGFjdGl2ZSBhcyBsb25nIGFzIGF0IGxlYXN0IG9uZSBtZXRyaWMgdmFsdWUgaXMgYXZhaWxhYmxlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwic3RhdHVzIjp7ImRlZmF1bHQiOiJESVNBQkxFRCIsImRlc2NyaXB0aW9uIjoiU3RhdHVzIGRlc2NyaWJlIHRoZSBkZXNpcmVkIHN0YXR1cyByZWdhcmRpbmcgZGVwbG95aW5nIGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIgRElTQUJMRUQgd2lsbCBub3QgZGVwbG95IGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIgRU5BQkxFRCB3aWxsIGRlcGxveSBhbiBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyIiwiZW51bSI6WyJESVNBQkxFRCIsIkVOQUJMRUQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJpbWFnZVB1bGxQb2xpY3kiOnsiZGVmYXVsdCI6IklmTm90UHJlc2VudCIsImRlc2NyaXB0aW9uIjoiaW1hZ2VQdWxsUG9saWN5IGlzIHRoZSBLdWJlcm5ldGVzIHB1bGwgcG9saWN5IGZvciB0aGUgaW1hZ2UgZGVmaW5lZCBhYm92ZSIsImVudW0iOlsiSWZOb3RQcmVzZW50IiwiQWx3YXlzIiwiTmV2ZXIiXSwidHlwZSI6InN0cmluZyJ9LCJsb2dMZXZlbCI6eyJkZWZhdWx0IjoiaW5mbyIsImRlc2NyaXB0aW9uIjoibG9nTGV2ZWwgZm9yIHRoZSBjb25zb2xlIHBsdWdpbiBiYWNrZW5kIiwiZW51bSI6WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImZhdGFsIiwicGFuaWMiXSwidHlwZSI6InN0cmluZyJ9LCJwb3J0Ijp7ImRlZmF1bHQiOjkwMDEsImRlc2NyaXB0aW9uIjoicG9ydCBpcyB0aGUgcGx1Z2luIHNlcnZpY2UgcG9ydCIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NjU1MzUsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sInBvcnROYW1pbmciOnsiZGVmYXVsdCI6eyJlbmFibGUiOnRydWV9LCJkZXNjcmlwdGlvbiI6InBvcnROYW1pbmcgZGVmaW5lcyB0aGUgY29uZmlndXJhdGlvbiBvZiB0aGUgcG9ydC10by1zZXJ2aWNlIG5hbWUgdHJhbnNsYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6ImVuYWJsZSB0aGUgY29uc29sZSBwbHVnaW4gcG9ydC10by1zZXJ2aWNlIG5hbWUgdHJhbnNsYXRpb24iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwb3J0TmFtZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6InBvcnROYW1lcyBkZWZpbmVzIGFkZGl0aW9uYWwgcG9ydCBuYW1lcyB0byB1c2UgaW4gdGhlIGNvbnNvbGUgRS5nLiBwb3J0TmFtZXM6IHtcIjMxMDBcIjogXCJsb2tpXCJ9IiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJxdWlja0ZpbHRlcnMiOnsiZGVmYXVsdCI6W3siZGVmYXVsdCI6dHJ1ZSwiZmlsdGVyIjp7ImRzdF9uYW1lc3BhY2UhIjoib3BlbnNoaWZ0LSxuZXRvYnNlcnYiLCJzcmNfbmFtZXNwYWNlISI6Im9wZW5zaGlmdC0sbmV0b2JzZXJ2In0sIm5hbWUiOiJBcHBsaWNhdGlvbnMifSx7ImZpbHRlciI6eyJkc3RfbmFtZXNwYWNlIjoib3BlbnNoaWZ0LSxuZXRvYnNlcnYiLCJzcmNfbmFtZXNwYWNlIjoib3BlbnNoaWZ0LSxuZXRvYnNlcnYifSwibmFtZSI6IkluZnJhc3RydWN0dXJlIn0seyJkZWZhdWx0Ijp0cnVlLCJmaWx0ZXIiOnsiZHN0X2tpbmQiOiJQb2QiLCJzcmNfa2luZCI6IlBvZCJ9LCJuYW1lIjoiUG9kcyBuZXR3b3JrIn0seyJmaWx0ZXIiOnsiZHN0X2tpbmQiOiJTZXJ2aWNlIn0sIm5hbWUiOiJTZXJ2aWNlcyBuZXR3b3JrIn1dLCJkZXNjcmlwdGlvbiI6InF1aWNrRmlsdGVycyBjb25maWd1cmVzIHF1aWNrIGZpbHRlciBwcmVzZXRzIGZvciB0aGUgQ29uc29sZSBwbHVnaW4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlF1aWNrRmlsdGVyIGRlZmluZXMgcHJlc2V0IGNvbmZpZ3VyYXRpb24gZm9yIENvbnNvbGUncyBxdWljayBmaWx0ZXJzIiwicHJvcGVydGllcyI6eyJkZWZhdWx0Ijp7ImRlc2NyaXB0aW9uIjoiZGVmYXVsdCBkZWZpbmVzIHdoZXRoZXIgdGhpcyBmaWx0ZXIgc2hvdWxkIGJlIGFjdGl2ZSBieSBkZWZhdWx0IG9yIG5vdCIsInR5cGUiOiJib29sZWFuIn0sImZpbHRlciI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiZmlsdGVyIGlzIGEgc2V0IG9mIGtleXMgYW5kIHZhbHVlcyB0byBiZSBzZXQgd2hlbiB0aGlzIGZpbHRlciBpcyBzZWxlY3RlZC4gRWFjaCBrZXkgY2FuIHJlbGF0ZSB0byBhIGxpc3Qgb2YgdmFsdWVzIHVzaW5nIGEgY29tYS1zZXBhcmF0ZWQgc3RyaW5nIEUuZy4gZmlsdGVyOiB7XCJzcmNfbmFtZXNwYWNlXCI6IFwibmFtZXNwYWNlMSxuYW1lc3BhY2UyXCJ9IiwidHlwZSI6Im9iamVjdCJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBvZiB0aGUgZmlsdGVyLCB0aGF0IHdpbGwgYmUgZGlzcGxheWVkIGluIENvbnNvbGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJmaWx0ZXIiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInJlZ2lzdGVyIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoicmVnaXN0ZXIgYWxsb3dzLCB3aGVuIHNldCB0byB0cnVlLCB0byBhdXRvbWF0aWNhbGx5IHJlZ2lzdGVyIHRoZSBwcm92aWRlZCBjb25zb2xlIHBsdWdpbiB3aXRoIHRoZSBPcGVuU2hpZnQgQ29uc29sZSBvcGVyYXRvci4gV2hlbiBzZXQgdG8gZmFsc2UsIHlvdSBjYW4gc3RpbGwgcmVnaXN0ZXIgaXQgbWFudWFsbHkgYnkgZWRpdGluZyBjb25zb2xlLm9wZXJhdG9yLm9wZW5zaGlmdC5pby9jbHVzdGVyLiBFLmc6IG9jIHBhdGNoIGNvbnNvbGUub3BlcmF0b3Iub3BlbnNoaWZ0LmlvIGNsdXN0ZXIgLS10eXBlPSdqc29uJyAtcCAnW3tcIm9wXCI6IFwiYWRkXCIsIFwicGF0aFwiOiBcIi9zcGVjL3BsdWdpbnMvLVwiLCBcInZhbHVlXCI6IFwibmV0b2JzZXJ2LXBsdWdpblwifV0nIiwidHlwZSI6ImJvb2xlYW4ifSwicmVwbGljYXMiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJyZXBsaWNhcyBkZWZpbmVzIHRoZSBudW1iZXIgb2YgcmVwbGljYXMgKHBvZHMpIHRvIHN0YXJ0LiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVzb3VyY2VzIjp7ImRlZmF1bHQiOnsibGltaXRzIjp7Im1lbW9yeSI6IjEwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiI1ME1pIn19LCJkZXNjcmlwdGlvbiI6InJlc291cmNlcywgaW4gdGVybXMgb2YgY29tcHV0ZSByZXNvdXJjZXMsIHJlcXVpcmVkIGJ5IHRoaXMgY29udGFpbmVyLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLiBJZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsIG90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbInJlZ2lzdGVyIl0sInR5cGUiOiJvYmplY3QifSwiZGVwbG95bWVudE1vZGVsIjp7ImRlZmF1bHQiOiJESVJFQ1QiLCJkZXNjcmlwdGlvbiI6ImRlcGxveW1lbnRNb2RlbCBkZWZpbmVzIHRoZSBkZXNpcmVkIHR5cGUgb2YgZGVwbG95bWVudCBmb3IgZmxvdyBwcm9jZXNzaW5nLiBQb3NzaWJsZSB2YWx1ZXMgYXJlIFwiRElSRUNUXCIgKGRlZmF1bHQpIHRvIG1ha2UgdGhlIGZsb3cgcHJvY2Vzc29yIGxpc3RlbmluZyBkaXJlY3RseSBmcm9tIHRoZSBhZ2VudHMsIG9yIFwiS0FGS0FcIiB0byBtYWtlIGZsb3dzIHNlbnQgdG8gYSBLYWZrYSBwaXBlbGluZSBiZWZvcmUgY29uc3VtcHRpb24gYnkgdGhlIHByb2Nlc3Nvci4gS2Fma2EgY2FuIHByb3ZpZGUgYmV0dGVyIHNjYWxhYmlsaXR5LCByZXNpbGllbmN5IGFuZCBoaWdoIGF2YWlsYWJpbGl0eSAoZm9yIG1vcmUgZGV0YWlscywgc2VlIGh0dHBzOi8vd3d3LnJlZGhhdC5jb20vZW4vdG9waWNzL2ludGVncmF0aW9uL3doYXQtaXMtYXBhY2hlLWthZmthKS4iLCJlbnVtIjpbIkRJUkVDVCIsIktBRktBIl0sInR5cGUiOiJzdHJpbmcifSwiZXhwb3J0ZXJzIjp7ImRlc2NyaXB0aW9uIjoiZXhwb3J0ZXJzIGRlZmluZXMgYWRkaXRpb25hbCBvcHRpb25hbCBleHBvcnRlcnMgZm9yIGN1c3RvbSBjb25zdW1wdGlvbiBvciBzdG9yYWdlLiBUaGlzIGlzIGFuIGV4cGVyaW1lbnRhbCBmZWF0dXJlLiBDdXJyZW50bHksIG9ubHkgS0FGS0EgZXhwb3J0ZXIgaXMgYXZhaWxhYmxlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiRmxvd0NvbGxlY3RvckV4cG9ydGVyIGRlZmluZXMgYW4gYWRkaXRpb25hbCBleHBvcnRlciB0byBzZW5kIGVucmljaGVkIGZsb3dzIHRvIiwicHJvcGVydGllcyI6eyJrYWZrYSI6eyJkZXNjcmlwdGlvbiI6ImthZmthIGRlc2NyaWJlcyB0aGUga2Fma2EgY29uZmlndXJhdGlvbiAoYWRkcmVzcywgdG9waWMuLi4pIHRvIHNlbmQgZW5yaWNoZWQgZmxvd3MgdG8uIiwicHJvcGVydGllcyI6eyJhZGRyZXNzIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6ImFkZHJlc3Mgb2YgdGhlIEthZmthIHNlcnZlciIsInR5cGUiOiJzdHJpbmcifSwidGxzIjp7ImRlc2NyaXB0aW9uIjoidGxzIGNsaWVudCBjb25maWd1cmF0aW9uLiBXaGVuIHVzaW5nIFRMUywgbWFrZSBzdXJlIHRoZSBhZGRyZXNzIG1hdGNoZXMgdGhlIEthZmthIHBvcnQgdXNlZCBmb3IgVExTLCBnZW5lcmFsbHkgOTA5My4gTm90ZSB0aGF0LCB3aGVuIGVCUEYgYWdlbnRzIGFyZSB1c2VkLCBLYWZrYSBjZXJ0aWZpY2F0ZSBuZWVkcyB0byBiZSBjb3BpZWQgaW4gdGhlIGFnZW50IG5hbWVzcGFjZSAoYnkgZGVmYXVsdCBpdCdzIG5ldG9ic2Vydi1wcml2aWxlZ2VkKS4iLCJwcm9wZXJ0aWVzIjp7ImNhQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImNhQ2VydCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImNlcnRGaWxlIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIENvbmZpZ01hcCAvIFNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImNlcnRLZXkgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgQ29uZmlnTWFwIC8gU2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgb2YgdGhlIENvbmZpZ01hcCBvciBTZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMiLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBjb25maWdtYXAgb3Igc2VjcmV0IiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiZW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJpbnNlY3VyZVNraXBWZXJpZnkgYWxsb3dzIHNraXBwaW5nIGNsaWVudC1zaWRlIHZlcmlmaWNhdGlvbiBvZiB0aGUgc2VydmVyIGNlcnRpZmljYXRlIElmIHNldCB0byB0cnVlLCBDQUNlcnQgZmllbGQgd2lsbCBiZSBpZ25vcmVkIiwidHlwZSI6ImJvb2xlYW4ifSwidXNlckNlcnQiOnsiZGVzY3JpcHRpb24iOiJ1c2VyQ2VydCBkZWZpbmVzIHRoZSB1c2VyIGNlcnRpZmljYXRlIHJlZmVyZW5jZSwgdXNlZCBmb3IgbVRMUyAoeW91IGNhbiBpZ25vcmUgaXQgd2hlbiB1c2luZyByZWd1bGFyLCBvbmUtd2F5IFRMUykiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiY2VydEZpbGUgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgQ29uZmlnTWFwIC8gU2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiY2VydEtleSBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBmaWxlIG5hbWUgd2l0aGluIHRoZSBDb25maWdNYXAgLyBTZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBvZiB0aGUgQ29uZmlnTWFwIG9yIFNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcyIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGNvbmZpZ21hcCBvciBzZWNyZXQiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInRvcGljIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6ImthZmthIHRvcGljIHRvIHVzZS4gSXQgbXVzdCBleGlzdCwgbmV0d29yayBvYnNlcnZhYmlsaXR5IHdpbGwgbm90IGNyZWF0ZSBpdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhZGRyZXNzIiwidG9waWMiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBzZWxlY3RzIHRoZSB0eXBlIG9mIGV4cG9ydGUuIE9ubHkgXCJLQUZLQVwiIGlzIGF2YWlsYWJsZSBhdCB0aGUgbW9tZW50LiIsImVudW0iOlsiS0FGS0EiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJrYWZrYSI6eyJkZXNjcmlwdGlvbiI6ImthZmthIGNvbmZpZ3VyYXRpb24sIGFsbG93aW5nIHRvIHVzZSBLYWZrYSBhcyBhIGJyb2tlciBhcyBwYXJ0IG9mIHRoZSBmbG93IGNvbGxlY3Rpb24gcGlwZWxpbmUuIEF2YWlsYWJsZSB3aGVuIHRoZSBcInNwZWMuZGVwbG95bWVudE1vZGVsXCIgaXMgXCJLQUZLQVwiLiIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJhZGRyZXNzIG9mIHRoZSBLYWZrYSBzZXJ2ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6InRscyBjbGllbnQgY29uZmlndXJhdGlvbi4gV2hlbiB1c2luZyBUTFMsIG1ha2Ugc3VyZSB0aGUgYWRkcmVzcyBtYXRjaGVzIHRoZSBLYWZrYSBwb3J0IHVzZWQgZm9yIFRMUywgZ2VuZXJhbGx5IDkwOTMuIE5vdGUgdGhhdCwgd2hlbiBlQlBGIGFnZW50cyBhcmUgdXNlZCwgS2Fma2EgY2VydGlmaWNhdGUgbmVlZHMgdG8gYmUgY29waWVkIGluIHRoZSBhZ2VudCBuYW1lc3BhY2UgKGJ5IGRlZmF1bHQgaXQncyBuZXRvYnNlcnYtcHJpdmlsZWdlZCkuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJjYUNlcnQgZGVmaW5lcyB0aGUgcmVmZXJlbmNlIG9mIHRoZSBjZXJ0aWZpY2F0ZSBmb3IgdGhlIENlcnRpZmljYXRlIEF1dGhvcml0eSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJjZXJ0RmlsZSBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBDb25maWdNYXAgLyBTZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJjZXJ0S2V5IGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIENvbmZpZ01hcCAvIFNlY3JldC4gT21pdCB3aGVuIHRoZSBrZXkgaXMgbm90IG5lY2Vzc2FyeS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIG9mIHRoZSBDb25maWdNYXAgb3IgU2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogY29uZmlnbWFwIG9yIHNlY3JldCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZW5hYmxlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImVuYWJsZSBUTFMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbnNlY3VyZVNraXBWZXJpZnkiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiaW5zZWN1cmVTa2lwVmVyaWZ5IGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHNlcnZlciBjZXJ0aWZpY2F0ZSBJZiBzZXQgdG8gdHJ1ZSwgQ0FDZXJ0IGZpZWxkIHdpbGwgYmUgaWdub3JlZCIsInR5cGUiOiJib29sZWFuIn0sInVzZXJDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoidXNlckNlcnQgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UsIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgcmVndWxhciwgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImNlcnRGaWxlIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIENvbmZpZ01hcCAvIFNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImNlcnRLZXkgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgQ29uZmlnTWFwIC8gU2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgb2YgdGhlIENvbmZpZ01hcCBvciBTZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMiLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBjb25maWdtYXAgb3Igc2VjcmV0IiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b3BpYyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJrYWZrYSB0b3BpYyB0byB1c2UuIEl0IG11c3QgZXhpc3QsIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSB3aWxsIG5vdCBjcmVhdGUgaXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRkcmVzcyIsInRvcGljIl0sInR5cGUiOiJvYmplY3QifSwibG9raSI6eyJkZXNjcmlwdGlvbiI6Imxva2ksIHRoZSBmbG93IHN0b3JlLCBjbGllbnQgc2V0dGluZ3MuIiwicHJvcGVydGllcyI6eyJhdXRoVG9rZW4iOnsiZGVmYXVsdCI6IkRJU0FCTEVEIiwiZGVzY3JpcHRpb24iOiJBdXRoVG9rZW4gZGVzY3JpYmUgdGhlIHdheSB0byBnZXQgYSB0b2tlbiB0byBhdXRoZW50aWNhdGUgdG8gTG9raSBESVNBQkxFRCB3aWxsIG5vdCBzZW5kIGFueSB0b2tlbiB3aXRoIHRoZSByZXF1ZXN0IEhPU1Qgd2lsbCB1c2UgdGhlIGxvY2FsIHBvZCBzZXJ2aWNlIGFjY291bnQgdG8gYXV0aGVudGljYXRlIHRvIExva2kgRk9SV0FSRCB3aWxsIGZvcndhcmQgdXNlciB0b2tlbiwgaW4gdGhpcyBtb2RlLCBwb2QgdGhhdCBhcmUgbm90IHJlY2VpdmluZyB1c2VyIHJlcXVlc3QgbGlrZSB0aGUgcHJvY2Vzc29yIHdpbGwgdXNlIHRoZSBsb2NhbCBwb2Qgc2VydmljZSBhY2NvdW50LiBTaW1pbGFyIHRvIEhPU1QgbW9kZS4iLCJlbnVtIjpbIkRJU0FCTEVEIiwiSE9TVCIsIkZPUldBUkQiXSwidHlwZSI6InN0cmluZyJ9LCJiYXRjaFNpemUiOnsiZGVmYXVsdCI6MTAyNDAwLCJkZXNjcmlwdGlvbiI6ImJhdGNoU2l6ZSBpcyBtYXggYmF0Y2ggc2l6ZSAoaW4gYnl0ZXMpIG9mIGxvZ3MgdG8gYWNjdW11bGF0ZSBiZWZvcmUgc2VuZGluZyIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwiYmF0Y2hXYWl0Ijp7ImRlZmF1bHQiOiIxcyIsImRlc2NyaXB0aW9uIjoiYmF0Y2hXYWl0IGlzIG1heCB0aW1lIHRvIHdhaXQgYmVmb3JlIHNlbmRpbmcgYSBiYXRjaCIsInR5cGUiOiJzdHJpbmcifSwibWF4QmFja29mZiI6eyJkZWZhdWx0IjoiNXMiLCJkZXNjcmlwdGlvbiI6Im1heEJhY2tvZmYgaXMgdGhlIG1heGltdW0gYmFja29mZiB0aW1lIGZvciBjbGllbnQgY29ubmVjdGlvbiBiZXR3ZWVuIHJldHJpZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm1heFJldHJpZXMiOnsiZGVmYXVsdCI6MiwiZGVzY3JpcHRpb24iOiJtYXhSZXRyaWVzIGlzIHRoZSBtYXhpbXVtIG51bWJlciBvZiByZXRyaWVzIGZvciBjbGllbnQgY29ubmVjdGlvbnMiLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sIm1pbkJhY2tvZmYiOnsiZGVmYXVsdCI6IjFzIiwiZGVzY3JpcHRpb24iOiJtaW5CYWNrb2ZmIGlzIHRoZSBpbml0aWFsIGJhY2tvZmYgdGltZSBmb3IgY2xpZW50IGNvbm5lY3Rpb24gYmV0d2VlbiByZXRyaWVzIiwidHlwZSI6InN0cmluZyJ9LCJxdWVyaWVyVXJsIjp7ImRlc2NyaXB0aW9uIjoicXVlcmllclVSTCBzcGVjaWZpZXMgdGhlIGFkZHJlc3Mgb2YgdGhlIExva2kgcXVlcmllciBzZXJ2aWNlLCBpbiBjYXNlIGl0IGlzIGRpZmZlcmVudCBmcm9tIHRoZSBMb2tpIGluZ2VzdGVyIFVSTC4gSWYgZW1wdHksIHRoZSBVUkwgdmFsdWUgd2lsbCBiZSB1c2VkIChhc3N1bWluZyB0aGF0IHRoZSBMb2tpIGluZ2VzdGVyIGFuZCBxdWVyaWVyIGFyZSBpbiB0aGUgc2FtZSBzZXJ2ZXIpLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdGljTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVmYXVsdCI6eyJhcHAiOiJuZXRvYnNlcnYtZmxvd2NvbGxlY3RvciJ9LCJkZXNjcmlwdGlvbiI6InN0YXRpY0xhYmVscyBpcyBhIG1hcCBvZiBjb21tb24gbGFiZWxzIHRvIHNldCBvbiBlYWNoIGZsb3ciLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1c1VybCI6eyJkZXNjcmlwdGlvbiI6InN0YXR1c1VSTCBzcGVjaWZpZXMgdGhlIGFkZHJlc3Mgb2YgdGhlIExva2kgL3JlYWR5IC9tZXRyaWNzIC9jb25maWcgZW5kcG9pbnRzLCBpbiBjYXNlIGl0IGlzIGRpZmZlcmVudCBmcm9tIHRoZSBMb2tpIHF1ZXJpZXIgVVJMLiBJZiBlbXB0eSwgdGhlIFF1ZXJpZXJVUkwgdmFsdWUgd2lsbCBiZSB1c2VkLiBUaGlzIGlzIHVzZWZ1bCB0byBzaG93IGVycm9yIG1lc3NhZ2VzIGFuZCBzb21lIGNvbnRleHQgaW4gdGhlIGZyb250ZW5kIiwidHlwZSI6InN0cmluZyJ9LCJ0ZW5hbnRJRCI6eyJkZWZhdWx0IjoibmV0b2JzZXJ2IiwiZGVzY3JpcHRpb24iOiJ0ZW5hbnRJRCBpcyB0aGUgTG9raSBYLVNjb3BlLU9yZ0lEIHRoYXQgaWRlbnRpZmllcyB0aGUgdGVuYW50IGZvciBlYWNoIHJlcXVlc3QuIGl0IHdpbGwgYmUgaWdub3JlZCBpZiBpbnN0YW5jZVNwZWMgaXMgc3BlY2lmaWVkIiwidHlwZSI6InN0cmluZyJ9LCJ0aW1lb3V0Ijp7ImRlZmF1bHQiOiIxMHMiLCJkZXNjcmlwdGlvbiI6InRpbWVvdXQgaXMgdGhlIG1heGltdW0gdGltZSBjb25uZWN0aW9uIC8gcmVxdWVzdCBsaW1pdCBBIFRpbWVvdXQgb2YgemVybyBtZWFucyBubyB0aW1lb3V0LiIsInR5cGUiOiJzdHJpbmcifSwidGxzIjp7ImRlc2NyaXB0aW9uIjoidGxzIGNsaWVudCBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiY2FDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiY2FDZXJ0IGRlZmluZXMgdGhlIHJlZmVyZW5jZSBvZiB0aGUgY2VydGlmaWNhdGUgZm9yIHRoZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiY2VydEZpbGUgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgQ29uZmlnTWFwIC8gU2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiY2VydEtleSBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBmaWxlIG5hbWUgd2l0aGluIHRoZSBDb25maWdNYXAgLyBTZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBvZiB0aGUgQ29uZmlnTWFwIG9yIFNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcyIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGNvbmZpZ21hcCBvciBzZWNyZXQiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImVuYWJsZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJlbmFibGUgVExTIiwidHlwZSI6ImJvb2xlYW4ifSwiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6Imluc2VjdXJlU2tpcFZlcmlmeSBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUgSWYgc2V0IHRvIHRydWUsIENBQ2VydCBmaWVsZCB3aWxsIGJlIGlnbm9yZWQiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6InVzZXJDZXJ0IGRlZmluZXMgdGhlIHVzZXIgY2VydGlmaWNhdGUgcmVmZXJlbmNlLCB1c2VkIGZvciBtVExTICh5b3UgY2FuIGlnbm9yZSBpdCB3aGVuIHVzaW5nIHJlZ3VsYXIsIG9uZS13YXkgVExTKSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJjZXJ0RmlsZSBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBDb25maWdNYXAgLyBTZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJjZXJ0S2V5IGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIENvbmZpZ01hcCAvIFNlY3JldC4gT21pdCB3aGVuIHRoZSBrZXkgaXMgbm90IG5lY2Vzc2FyeS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIG9mIHRoZSBDb25maWdNYXAgb3IgU2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogY29uZmlnbWFwIG9yIHNlY3JldCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidXJsIjp7ImRlZmF1bHQiOiJodHRwOi8vbG9raTozMTAwLyIsImRlc2NyaXB0aW9uIjoidXJsIGlzIHRoZSBhZGRyZXNzIG9mIGFuIGV4aXN0aW5nIExva2kgc2VydmljZSB0byBwdXNoIHRoZSBmbG93cyB0by4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZSB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgcG9kcyBhcmUgZGVwbG95ZWQuIElmIGVtcHR5LCB0aGUgbmFtZXNwYWNlIG9mIHRoZSBvcGVyYXRvciBpcyBnb2luZyB0byBiZSB1c2VkLiIsInR5cGUiOiJzdHJpbmcifSwicHJvY2Vzc29yIjp7ImRlc2NyaXB0aW9uIjoicHJvY2Vzc29yIGRlZmluZXMgdGhlIHNldHRpbmdzIG9mIHRoZSBjb21wb25lbnQgdGhhdCByZWNlaXZlcyB0aGUgZmxvd3MgZnJvbSB0aGUgYWdlbnQsIGVucmljaGVzIHRoZW0sIGFuZCBmb3J3YXJkcyB0aGVtIHRvIHRoZSBMb2tpIHBlcnNpc3RlbmNlIGxheWVyLiIsInByb3BlcnRpZXMiOnsiZGVidWciOnsiZGVzY3JpcHRpb24iOiJEZWJ1ZyBhbGxvd3Mgc2V0dGluZyBzb21lIGFzcGVjdHMgb2YgdGhlIGludGVybmFsIGNvbmZpZ3VyYXRpb24gb2YgdGhlIGZsb3cgcHJvY2Vzc29yLiBUaGlzIHNlY3Rpb24gaXMgYWltZWQgZXhjbHVzaXZlbHkgZm9yIGRlYnVnZ2luZyBhbmQgZmluZS1ncmFpbmVkIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbnMgKGUuZy4gR09HQywgR09NQVhQUk9DUyBlbnYgdmFycykuIFVzZXJzIHNldHRpbmcgaXRzIHZhbHVlcyBkbyBpdCBhdCB0aGVpciBvd24gcmlzay4iLCJwcm9wZXJ0aWVzIjp7ImVudiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiZW52IGFsbG93cyBwYXNzaW5nIGN1c3RvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gdGhlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBBZ2VudC4gVXNlZnVsIGZvciBwYXNzaW5nIHNvbWUgdmVyeSBjb25jcmV0ZSBwZXJmb3JtYW5jZS10dW5pbmcgb3B0aW9ucyAoZS5nLiBHT0dDLCBHT01BWFBST0NTKSB0aGF0IHNob3VsZG4ndCBiZSBwdWJsaWNseSBleHBvc2VkIGFzIHBhcnQgb2YgdGhlIEZsb3dDb2xsZWN0b3IgZGVzY3JpcHRvciwgYXMgdGhleSBhcmUgb25seSB1c2VmdWwgaW4gZWRnZSBkZWJ1Zy9zdXBwb3J0IHNjZW5hcmlvcy4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRyb3BVbnVzZWRGaWVsZHMiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJkcm9wVW51c2VkRmllbGRzIGFsbG93cywgd2hlbiBzZXQgdG8gdHJ1ZSwgdG8gZHJvcCBmaWVsZHMgdGhhdCBhcmUga25vd24gdG8gYmUgdW51c2VkIGJ5IE9WUywgaW4gb3JkZXIgdG8gc2F2ZSBzdG9yYWdlIHNwYWNlLiIsInR5cGUiOiJib29sZWFuIn0sImVuYWJsZUt1YmVQcm9iZXMiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJlbmFibGVLdWJlUHJvYmVzIGlzIGEgZmxhZyB0byBlbmFibGUgb3IgZGlzYWJsZSBLdWJlcm5ldGVzIGxpdmVuZXNzL3JlYWRpbmVzcyBwcm9iZXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJoZWFsdGhQb3J0Ijp7ImRlZmF1bHQiOjgwODAsImRlc2NyaXB0aW9uIjoiaGVhbHRoUG9ydCBpcyBhIGNvbGxlY3RvciBIVFRQIHBvcnQgaW4gdGhlIFBvZCB0aGF0IGV4cG9zZXMgdGhlIGhlYWx0aCBjaGVjayBBUEkiLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjY1NTM1LCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJpbWFnZVB1bGxQb2xpY3kiOnsiZGVmYXVsdCI6IklmTm90UHJlc2VudCIsImRlc2NyaXB0aW9uIjoiaW1hZ2VQdWxsUG9saWN5IGlzIHRoZSBLdWJlcm5ldGVzIHB1bGwgcG9saWN5IGZvciB0aGUgaW1hZ2UgZGVmaW5lZCBhYm92ZSIsImVudW0iOlsiSWZOb3RQcmVzZW50IiwiQWx3YXlzIiwiTmV2ZXIiXSwidHlwZSI6InN0cmluZyJ9LCJrYWZrYUNvbnN1bWVyQXV0b3NjYWxlciI6eyJkZXNjcmlwdGlvbiI6ImthZmthQ29uc3VtZXJBdXRvc2NhbGVyIHNwZWMgb2YgYSBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyIHRvIHNldCB1cCBmb3IgZmxvd2xvZ3MtcGlwZWxpbmUtdHJhbnNmb3JtZXIsIHdoaWNoIGNvbnN1bWVzIEthZmthIG1lc3NhZ2VzLiBUaGlzIHNldHRpbmcgaXMgaWdub3JlZCB3aGVuIEthZmthIGlzIGRpc2FibGVkLiIsInByb3BlcnRpZXMiOnsibWF4UmVwbGljYXMiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJtYXhSZXBsaWNhcyBpcyB0aGUgdXBwZXIgbGltaXQgZm9yIHRoZSBudW1iZXIgb2YgcG9kcyB0aGF0IGNhbiBiZSBzZXQgYnkgdGhlIGF1dG9zY2FsZXI7IGNhbm5vdCBiZSBzbWFsbGVyIHRoYW4gTWluUmVwbGljYXMuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtZXRyaWNzIjp7ImRlc2NyaXB0aW9uIjoibWV0cmljcyB1c2VkIGJ5IHRoZSBwb2QgYXV0b3NjYWxlciIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWV0cmljU3BlYyBzcGVjaWZpZXMgaG93IHRvIHNjYWxlIGJhc2VkIG9uIGEgc2luZ2xlIG1ldHJpYyAob25seSBgdHlwZWAgYW5kIG9uZSBvdGhlciBtYXRjaGluZyBmaWVsZCBzaG91bGQgYmUgc2V0IGF0IG9uY2UpLiIsInByb3BlcnRpZXMiOnsiY29udGFpbmVyUmVzb3VyY2UiOnsiZGVzY3JpcHRpb24iOiJjb250YWluZXJSZXNvdXJjZSByZWZlcnMgdG8gYSByZXNvdXJjZSBtZXRyaWMgKHN1Y2ggYXMgdGhvc2Ugc3BlY2lmaWVkIGluIHJlcXVlc3RzIGFuZCBsaW1pdHMpIGtub3duIHRvIEt1YmVybmV0ZXMgZGVzY3JpYmluZyBhIHNpbmdsZSBjb250YWluZXIgaW4gZWFjaCBwb2Qgb2YgdGhlIGN1cnJlbnQgc2NhbGUgdGFyZ2V0IChlLmcuIENQVSBvciBtZW1vcnkpLiBTdWNoIG1ldHJpY3MgYXJlIGJ1aWx0IGluIHRvIEt1YmVybmV0ZXMsIGFuZCBoYXZlIHNwZWNpYWwgc2NhbGluZyBvcHRpb25zIG9uIHRvcCBvZiB0aG9zZSBhdmFpbGFibGUgdG8gbm9ybWFsIHBlci1wb2QgbWV0cmljcyB1c2luZyB0aGUgXCJwb2RzXCIgc291cmNlLiBUaGlzIGlzIGFuIGFscGhhIGZlYXR1cmUgYW5kIGNhbiBiZSBlbmFibGVkIGJ5IHRoZSBIUEFDb250YWluZXJNZXRyaWNzIGZlYXR1cmUgZmxhZy4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lciI6eyJkZXNjcmlwdGlvbiI6ImNvbnRhaW5lciBpcyB0aGUgbmFtZSBvZiB0aGUgY29udGFpbmVyIGluIHRoZSBwb2RzIG9mIHRoZSBzY2FsaW5nIHRhcmdldCIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHJlc291cmNlIGluIHF1ZXN0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7ImRlc2NyaXB0aW9uIjoidGFyZ2V0IHNwZWNpZmllcyB0aGUgdGFyZ2V0IHZhbHVlIGZvciB0aGUgZ2l2ZW4gbWV0cmljIiwicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZGVzY3JpcHRpb24iOiJhdmVyYWdlVXRpbGl6YXRpb24gaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgcmVzb3VyY2UgbWV0cmljIGFjcm9zcyBhbGwgcmVsZXZhbnQgcG9kcywgcmVwcmVzZW50ZWQgYXMgYSBwZXJjZW50YWdlIG9mIHRoZSByZXF1ZXN0ZWQgdmFsdWUgb2YgdGhlIHJlc291cmNlIGZvciB0aGUgcG9kcy4gQ3VycmVudGx5IG9ubHkgdmFsaWQgZm9yIFJlc291cmNlIG1ldHJpYyBzb3VyY2UgdHlwZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJhdmVyYWdlVmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgbWV0cmljIGFjcm9zcyBhbGwgcmVsZXZhbnQgcG9kcyAoYXMgYSBxdWFudGl0eSkiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIHJlcHJlc2VudHMgd2hldGhlciB0aGUgbWV0cmljIHR5cGUgaXMgVXRpbGl6YXRpb24sIFZhbHVlLCBvciBBdmVyYWdlVmFsdWUiLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJ2YWx1ZSBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBtZXRyaWMgKGFzIGEgcXVhbnRpdHkpLiIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiY29udGFpbmVyIiwibmFtZSIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sImV4dGVybmFsIjp7ImRlc2NyaXB0aW9uIjoiZXh0ZXJuYWwgcmVmZXJzIHRvIGEgZ2xvYmFsIG1ldHJpYyB0aGF0IGlzIG5vdCBhc3NvY2lhdGVkIHdpdGggYW55IEt1YmVybmV0ZXMgb2JqZWN0LiBJdCBhbGxvd3MgYXV0b3NjYWxpbmcgYmFzZWQgb24gaW5mb3JtYXRpb24gY29taW5nIGZyb20gY29tcG9uZW50cyBydW5uaW5nIG91dHNpZGUgb2YgY2x1c3RlciAoZm9yIGV4YW1wbGUgbGVuZ3RoIG9mIHF1ZXVlIGluIGNsb3VkIG1lc3NhZ2luZyBzZXJ2aWNlLCBvciBRUFMgZnJvbSBsb2FkYmFsYW5jZXIgcnVubmluZyBvdXRzaWRlIG9mIGNsdXN0ZXIpLiIsInByb3BlcnRpZXMiOnsibWV0cmljIjp7ImRlc2NyaXB0aW9uIjoibWV0cmljIGlkZW50aWZpZXMgdGhlIHRhcmdldCBtZXRyaWMgYnkgbmFtZSBhbmQgc2VsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIGlzIHRoZSBuYW1lIG9mIHRoZSBnaXZlbiBtZXRyaWMiLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoic2VsZWN0b3IgaXMgdGhlIHN0cmluZy1lbmNvZGVkIGZvcm0gb2YgYSBzdGFuZGFyZCBrdWJlcm5ldGVzIGxhYmVsIHNlbGVjdG9yIGZvciB0aGUgZ2l2ZW4gbWV0cmljIFdoZW4gc2V0LCBpdCBpcyBwYXNzZWQgYXMgYW4gYWRkaXRpb25hbCBwYXJhbWV0ZXIgdG8gdGhlIG1ldHJpY3Mgc2VydmVyIGZvciBtb3JlIHNwZWNpZmljIG1ldHJpY3Mgc2NvcGluZy4gV2hlbiB1bnNldCwganVzdCB0aGUgbWV0cmljTmFtZSB3aWxsIGJlIHVzZWQgdG8gZ2F0aGVyIG1ldHJpY3MuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInRhcmdldCI6eyJkZXNjcmlwdGlvbiI6InRhcmdldCBzcGVjaWZpZXMgdGhlIHRhcmdldCB2YWx1ZSBmb3IgdGhlIGdpdmVuIG1ldHJpYyIsInByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiYXZlcmFnZVV0aWxpemF0aW9uIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHJlc291cmNlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMsIHJlcHJlc2VudGVkIGFzIGEgcGVyY2VudGFnZSBvZiB0aGUgcmVxdWVzdGVkIHZhbHVlIG9mIHRoZSByZXNvdXJjZSBmb3IgdGhlIHBvZHMuIEN1cnJlbnRseSBvbmx5IHZhbGlkIGZvciBSZXNvdXJjZSBtZXRyaWMgc291cmNlIHR5cGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiYXZlcmFnZVZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMgKGFzIGEgcXVhbnRpdHkpIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSByZXByZXNlbnRzIHdoZXRoZXIgdGhlIG1ldHJpYyB0eXBlIGlzIFV0aWxpemF0aW9uLCBWYWx1ZSwgb3IgQXZlcmFnZVZhbHVlIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoidmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgbWV0cmljIChhcyBhIHF1YW50aXR5KS4iLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm1ldHJpYyIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sIm9iamVjdCI6eyJkZXNjcmlwdGlvbiI6Im9iamVjdCByZWZlcnMgdG8gYSBtZXRyaWMgZGVzY3JpYmluZyBhIHNpbmdsZSBrdWJlcm5ldGVzIG9iamVjdCAoZm9yIGV4YW1wbGUsIGhpdHMtcGVyLXNlY29uZCBvbiBhbiBJbmdyZXNzIG9iamVjdCkuIiwicHJvcGVydGllcyI6eyJkZXNjcmliZWRPYmplY3QiOnsiZGVzY3JpcHRpb24iOiJkZXNjcmliZWRPYmplY3Qgc3BlY2lmaWVzIHRoZSBkZXNjcmlwdGlvbnMgb2YgYSBvYmplY3Qsc3VjaCBhcyBraW5kLG5hbWUgYXBpVmVyc2lvbiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSSB2ZXJzaW9uIG9mIHRoZSByZWZlcmVudCIsInR5cGUiOiJzdHJpbmcifSwia2luZCI6eyJkZXNjcmlwdGlvbiI6IktpbmQgb2YgdGhlIHJlZmVyZW50OyBNb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzXCIiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSByZWZlcmVudDsgTW9yZSBpbmZvOiBodHRwOi8va3ViZXJuZXRlcy5pby9kb2NzL3VzZXItZ3VpZGUvaWRlbnRpZmllcnMjbmFtZXMiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpYyI6eyJkZXNjcmlwdGlvbiI6Im1ldHJpYyBpZGVudGlmaWVzIHRoZSB0YXJnZXQgbWV0cmljIGJ5IG5hbWUgYW5kIHNlbGVjdG9yIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoibmFtZSBpcyB0aGUgbmFtZSBvZiB0aGUgZ2l2ZW4gbWV0cmljIiwidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6InNlbGVjdG9yIGlzIHRoZSBzdHJpbmctZW5jb2RlZCBmb3JtIG9mIGEgc3RhbmRhcmQga3ViZXJuZXRlcyBsYWJlbCBzZWxlY3RvciBmb3IgdGhlIGdpdmVuIG1ldHJpYyBXaGVuIHNldCwgaXQgaXMgcGFzc2VkIGFzIGFuIGFkZGl0aW9uYWwgcGFyYW1ldGVyIHRvIHRoZSBtZXRyaWNzIHNlcnZlciBmb3IgbW9yZSBzcGVjaWZpYyBtZXRyaWNzIHNjb3BpbmcuIFdoZW4gdW5zZXQsIGp1c3QgdGhlIG1ldHJpY05hbWUgd2lsbCBiZSB1c2VkIHRvIGdhdGhlciBtZXRyaWNzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLiBWYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCwgdGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHMgbWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlIG9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsiZGVzY3JpcHRpb24iOiJ0YXJnZXQgc3BlY2lmaWVzIHRoZSB0YXJnZXQgdmFsdWUgZm9yIHRoZSBnaXZlbiBtZXRyaWMiLCJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJkZXNjcmlwdGlvbiI6ImF2ZXJhZ2VVdGlsaXphdGlvbiBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSByZXNvdXJjZSBtZXRyaWMgYWNyb3NzIGFsbCByZWxldmFudCBwb2RzLCByZXByZXNlbnRlZCBhcyBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHJlcXVlc3RlZCB2YWx1ZSBvZiB0aGUgcmVzb3VyY2UgZm9yIHRoZSBwb2RzLiBDdXJyZW50bHkgb25seSB2YWxpZCBmb3IgUmVzb3VyY2UgbWV0cmljIHNvdXJjZSB0eXBlIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6ImF2ZXJhZ2VWYWx1ZSBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBhdmVyYWdlIG9mIHRoZSBtZXRyaWMgYWNyb3NzIGFsbCByZWxldmFudCBwb2RzIChhcyBhIHF1YW50aXR5KSIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgcmVwcmVzZW50cyB3aGV0aGVyIHRoZSBtZXRyaWMgdHlwZSBpcyBVdGlsaXphdGlvbiwgVmFsdWUsIG9yIEF2ZXJhZ2VWYWx1ZSIsInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6InZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIG1ldHJpYyAoYXMgYSBxdWFudGl0eSkuIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJkZXNjcmliZWRPYmplY3QiLCJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJwb2RzIjp7ImRlc2NyaXB0aW9uIjoicG9kcyByZWZlcnMgdG8gYSBtZXRyaWMgZGVzY3JpYmluZyBlYWNoIHBvZCBpbiB0aGUgY3VycmVudCBzY2FsZSB0YXJnZXQgKGZvciBleGFtcGxlLCB0cmFuc2FjdGlvbnMtcHJvY2Vzc2VkLXBlci1zZWNvbmQpLiAgVGhlIHZhbHVlcyB3aWxsIGJlIGF2ZXJhZ2VkIHRvZ2V0aGVyIGJlZm9yZSBiZWluZyBjb21wYXJlZCB0byB0aGUgdGFyZ2V0IHZhbHVlLiIsInByb3BlcnRpZXMiOnsibWV0cmljIjp7ImRlc2NyaXB0aW9uIjoibWV0cmljIGlkZW50aWZpZXMgdGhlIHRhcmdldCBtZXRyaWMgYnkgbmFtZSBhbmQgc2VsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJuYW1lIGlzIHRoZSBuYW1lIG9mIHRoZSBnaXZlbiBtZXRyaWMiLCJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoic2VsZWN0b3IgaXMgdGhlIHN0cmluZy1lbmNvZGVkIGZvcm0gb2YgYSBzdGFuZGFyZCBrdWJlcm5ldGVzIGxhYmVsIHNlbGVjdG9yIGZvciB0aGUgZ2l2ZW4gbWV0cmljIFdoZW4gc2V0LCBpdCBpcyBwYXNzZWQgYXMgYW4gYWRkaXRpb25hbCBwYXJhbWV0ZXIgdG8gdGhlIG1ldHJpY3Mgc2VydmVyIGZvciBtb3JlIHNwZWNpZmljIG1ldHJpY3Mgc2NvcGluZy4gV2hlbiB1bnNldCwganVzdCB0aGUgbWV0cmljTmFtZSB3aWxsIGJlIHVzZWQgdG8gZ2F0aGVyIG1ldHJpY3MuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuIFZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sIHRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LCB0aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVscyBtYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGUgb3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInRhcmdldCI6eyJkZXNjcmlwdGlvbiI6InRhcmdldCBzcGVjaWZpZXMgdGhlIHRhcmdldCB2YWx1ZSBmb3IgdGhlIGdpdmVuIG1ldHJpYyIsInByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImRlc2NyaXB0aW9uIjoiYXZlcmFnZVV0aWxpemF0aW9uIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIHJlc291cmNlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMsIHJlcHJlc2VudGVkIGFzIGEgcGVyY2VudGFnZSBvZiB0aGUgcmVxdWVzdGVkIHZhbHVlIG9mIHRoZSByZXNvdXJjZSBmb3IgdGhlIHBvZHMuIEN1cnJlbnRseSBvbmx5IHZhbGlkIGZvciBSZXNvdXJjZSBtZXRyaWMgc291cmNlIHR5cGUiLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiYXZlcmFnZVZhbHVlIGlzIHRoZSB0YXJnZXQgdmFsdWUgb2YgdGhlIGF2ZXJhZ2Ugb2YgdGhlIG1ldHJpYyBhY3Jvc3MgYWxsIHJlbGV2YW50IHBvZHMgKGFzIGEgcXVhbnRpdHkpIiwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoidHlwZSByZXByZXNlbnRzIHdoZXRoZXIgdGhlIG1ldHJpYyB0eXBlIGlzIFV0aWxpemF0aW9uLCBWYWx1ZSwgb3IgQXZlcmFnZVZhbHVlIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoidmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgbWV0cmljIChhcyBhIHF1YW50aXR5KS4iLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm1ldHJpYyIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sInJlc291cmNlIjp7ImRlc2NyaXB0aW9uIjoicmVzb3VyY2UgcmVmZXJzIHRvIGEgcmVzb3VyY2UgbWV0cmljIChzdWNoIGFzIHRob3NlIHNwZWNpZmllZCBpbiByZXF1ZXN0cyBhbmQgbGltaXRzKSBrbm93biB0byBLdWJlcm5ldGVzIGRlc2NyaWJpbmcgZWFjaCBwb2QgaW4gdGhlIGN1cnJlbnQgc2NhbGUgdGFyZ2V0IChlLmcuIENQVSBvciBtZW1vcnkpLiBTdWNoIG1ldHJpY3MgYXJlIGJ1aWx0IGluIHRvIEt1YmVybmV0ZXMsIGFuZCBoYXZlIHNwZWNpYWwgc2NhbGluZyBvcHRpb25zIG9uIHRvcCBvZiB0aG9zZSBhdmFpbGFibGUgdG8gbm9ybWFsIHBlci1wb2QgbWV0cmljcyB1c2luZyB0aGUgXCJwb2RzXCIgc291cmNlLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgaXMgdGhlIG5hbWUgb2YgdGhlIHJlc291cmNlIGluIHF1ZXN0aW9uLiIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7ImRlc2NyaXB0aW9uIjoidGFyZ2V0IHNwZWNpZmllcyB0aGUgdGFyZ2V0IHZhbHVlIGZvciB0aGUgZ2l2ZW4gbWV0cmljIiwicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZGVzY3JpcHRpb24iOiJhdmVyYWdlVXRpbGl6YXRpb24gaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgcmVzb3VyY2UgbWV0cmljIGFjcm9zcyBhbGwgcmVsZXZhbnQgcG9kcywgcmVwcmVzZW50ZWQgYXMgYSBwZXJjZW50YWdlIG9mIHRoZSByZXF1ZXN0ZWQgdmFsdWUgb2YgdGhlIHJlc291cmNlIGZvciB0aGUgcG9kcy4gQ3VycmVudGx5IG9ubHkgdmFsaWQgZm9yIFJlc291cmNlIG1ldHJpYyBzb3VyY2UgdHlwZSIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJhdmVyYWdlVmFsdWUgaXMgdGhlIHRhcmdldCB2YWx1ZSBvZiB0aGUgYXZlcmFnZSBvZiB0aGUgbWV0cmljIGFjcm9zcyBhbGwgcmVsZXZhbnQgcG9kcyAoYXMgYSBxdWFudGl0eSkiLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIHJlcHJlc2VudHMgd2hldGhlciB0aGUgbWV0cmljIHR5cGUgaXMgVXRpbGl6YXRpb24sIFZhbHVlLCBvciBBdmVyYWdlVmFsdWUiLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJ2YWx1ZSBpcyB0aGUgdGFyZ2V0IHZhbHVlIG9mIHRoZSBtZXRyaWMgKGFzIGEgcXVhbnRpdHkpLiIsInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIGlzIHRoZSB0eXBlIG9mIG1ldHJpYyBzb3VyY2UuICBJdCBzaG91bGQgYmUgb25lIG9mIFwiQ29udGFpbmVyUmVzb3VyY2VcIiwgXCJFeHRlcm5hbFwiLCBcIk9iamVjdFwiLCBcIlBvZHNcIiBvciBcIlJlc291cmNlXCIsIGVhY2ggbWFwcGluZyB0byBhIG1hdGNoaW5nIGZpZWxkIGluIHRoZSBvYmplY3QuIE5vdGU6IFwiQ29udGFpbmVyUmVzb3VyY2VcIiB0eXBlIGlzIGF2YWlsYWJsZSBvbiB3aGVuIHRoZSBmZWF0dXJlLWdhdGUgSFBBQ29udGFpbmVyTWV0cmljcyBpcyBlbmFibGVkIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtaW5SZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6Im1pblJlcGxpY2FzIGlzIHRoZSBsb3dlciBsaW1pdCBmb3IgdGhlIG51bWJlciBvZiByZXBsaWNhcyB0byB3aGljaCB0aGUgYXV0b3NjYWxlciBjYW4gc2NhbGUgZG93bi4gIEl0IGRlZmF1bHRzIHRvIDEgcG9kLiAgbWluUmVwbGljYXMgaXMgYWxsb3dlZCB0byBiZSAwIGlmIHRoZSBhbHBoYSBmZWF0dXJlIGdhdGUgSFBBU2NhbGVUb1plcm8gaXMgZW5hYmxlZCBhbmQgYXQgbGVhc3Qgb25lIE9iamVjdCBvciBFeHRlcm5hbCBtZXRyaWMgaXMgY29uZmlndXJlZC4gIFNjYWxpbmcgaXMgYWN0aXZlIGFzIGxvbmcgYXMgYXQgbGVhc3Qgb25lIG1ldHJpYyB2YWx1ZSBpcyBhdmFpbGFibGUuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6IkRJU0FCTEVEIiwiZGVzY3JpcHRpb24iOiJTdGF0dXMgZGVzY3JpYmUgdGhlIGRlc2lyZWQgc3RhdHVzIHJlZ2FyZGluZyBkZXBsb3lpbmcgYW4gaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlciBESVNBQkxFRCB3aWxsIG5vdCBkZXBsb3kgYW4gaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlciBFTkFCTEVEIHdpbGwgZGVwbG95IGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIiLCJlbnVtIjpbIkRJU0FCTEVEIiwiRU5BQkxFRCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImthZmthQ29uc3VtZXJCYXRjaFNpemUiOnsiZGVmYXVsdCI6MTA0ODU3NjAsImRlc2NyaXB0aW9uIjoia2Fma2FDb25zdW1lckJhdGNoU2l6ZSBpbmRpY2F0ZXMgdG8gdGhlIGJyb2tlciB0aGUgbWF4aW11bSBiYXRjaCBzaXplLCBpbiBieXRlcywgdGhhdCB0aGUgY29uc3VtZXIgd2lsbCBhY2NlcHQuIElnbm9yZWQgd2hlbiBub3QgdXNpbmcgS2Fma2EuIERlZmF1bHQ6IDEwTUIuIiwidHlwZSI6ImludGVnZXIifSwia2Fma2FDb25zdW1lclF1ZXVlQ2FwYWNpdHkiOnsiZGVmYXVsdCI6MTAwMCwiZGVzY3JpcHRpb24iOiJrYWZrYUNvbnN1bWVyUXVldWVDYXBhY2l0eSBkZWZpbmVzIHRoZSBjYXBhY2l0eSBvZiB0aGUgaW50ZXJuYWwgbWVzc2FnZSBxdWV1ZSB1c2VkIGluIHRoZSBLYWZrYSBjb25zdW1lciBjbGllbnQuIElnbm9yZWQgd2hlbiBub3QgdXNpbmcgS2Fma2EuIiwidHlwZSI6ImludGVnZXIifSwia2Fma2FDb25zdW1lclJlcGxpY2FzIjp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoia2Fma2FDb25zdW1lclJlcGxpY2FzIGRlZmluZXMgdGhlIG51bWJlciBvZiByZXBsaWNhcyAocG9kcykgdG8gc3RhcnQgZm9yIGZsb3dsb2dzLXBpcGVsaW5lLXRyYW5zZm9ybWVyLCB3aGljaCBjb25zdW1lcyBLYWZrYSBtZXNzYWdlcy4gVGhpcyBzZXR0aW5nIGlzIGlnbm9yZWQgd2hlbiBLYWZrYSBpcyBkaXNhYmxlZC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJpbmZvIiwiZGVzY3JpcHRpb24iOiJsb2dMZXZlbCBvZiB0aGUgY29sbGVjdG9yIHJ1bnRpbWUiLCJlbnVtIjpbInRyYWNlIiwiZGVidWciLCJpbmZvIiwid2FybiIsImVycm9yIiwiZmF0YWwiLCJwYW5pYyJdLCJ0eXBlIjoic3RyaW5nIn0sIm1ldHJpY3MiOnsiZGVzY3JpcHRpb24iOiJNZXRyaWNzIGRlZmluZSB0aGUgcHJvY2Vzc29yIGNvbmZpZ3VyYXRpb24gcmVnYXJkaW5nIG1ldHJpY3MiLCJwcm9wZXJ0aWVzIjp7Imlnbm9yZVRhZ3MiOnsiZGVmYXVsdCI6WyJlZ3Jlc3MiLCJwYWNrZXRzIl0sImRlc2NyaXB0aW9uIjoiaWdub3JlVGFncyBpcyBhIGxpc3Qgb2YgdGFncyB0byBzcGVjaWZ5IHdoaWNoIG1ldHJpY3MgdG8gaWdub3JlIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwic2VydmVyIjp7ImRlc2NyaXB0aW9uIjoibWV0cmljc1NlcnZlciBlbmRwb2ludCBjb25maWd1cmF0aW9uIGZvciBQcm9tZXRoZXVzIHNjcmFwZXIiLCJwcm9wZXJ0aWVzIjp7InBvcnQiOnsiZGVmYXVsdCI6OTEwMiwiZGVzY3JpcHRpb24iOiJ0aGUgcHJvbWV0aGV1cyBIVFRQIHBvcnQiLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjY1NTM1LCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0bHMiOnsiZGVzY3JpcHRpb24iOiJUTFMgY29uZmlndXJhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7InByb3ZpZGVkIjp7ImRlc2NyaXB0aW9uIjoiVExTIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImNlcnRGaWxlIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIENvbmZpZ01hcCAvIFNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImNlcnRLZXkgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgQ29uZmlnTWFwIC8gU2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWUgb2YgdGhlIENvbmZpZ01hcCBvciBTZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMiLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBjb25maWdtYXAgb3Igc2VjcmV0IiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJESVNBQkxFRCIsImRlc2NyaXB0aW9uIjoiU2VsZWN0IHRoZSB0eXBlIG9mIFRMUyBjb25maWd1cmF0aW9uIFwiRElTQUJMRURcIiAoZGVmYXVsdCkgdG8gbm90IGNvbmZpZ3VyZSBUTFMgZm9yIHRoZSBlbmRwb2ludCwgXCJQUk9WSURFRFwiIHRvIG1hbnVhbGx5IHByb3ZpZGUgY2VydCBmaWxlIGFuZCBhIGtleSBmaWxlLCBhbmQgXCJBVVRPXCIgdG8gdXNlIE9wZW5zaGlmdCBhdXRvIGdlbmVyYXRlZCBjZXJ0aWZpY2F0ZSB1c2luZyBhbm5vdGF0aW9ucyIsImVudW0iOlsiRElTQUJMRUQiLCJQUk9WSURFRCIsIkFVVE8iXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb3J0Ijp7ImRlZmF1bHQiOjIwNTUsImRlc2NyaXB0aW9uIjoicG9ydCBvZiB0aGUgZmxvdyBjb2xsZWN0b3IgKGhvc3QgcG9ydCkgQnkgY29udmVudGlvbnMsIHNvbWUgdmFsdWUgYXJlIG5vdCBhdXRob3JpemVkIHBvcnQgbXVzdCBub3QgYmUgYmVsb3cgMTAyNCBhbmQgbXVzdCBub3QgZXF1YWwgdGhpcyB2YWx1ZXM6IDQ3ODksNjA4MSw1MDAsIGFuZCA0NTAwIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2NTUzNSwibWluaW11bSI6MTAyNSwidHlwZSI6ImludGVnZXIifSwicHJvZmlsZVBvcnQiOnsiZGVzY3JpcHRpb24iOiJwcm9maWxlUG9ydCBhbGxvd3Mgc2V0dGluZyB1cCBhIEdvIHBwcm9mIHByb2ZpbGVyIGxpc3RlbmluZyB0byB0aGlzIHBvcnQiLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjY1NTM1LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZXNvdXJjZXMiOnsiZGVmYXVsdCI6eyJsaW1pdHMiOnsibWVtb3J5IjoiODAwTWkifSwicmVxdWVzdHMiOnsiY3B1IjoiMTAwbSIsIm1lbW9yeSI6IjEwME1pIn19LCJkZXNjcmlwdGlvbiI6InJlc291cmNlcyBhcmUgdGhlIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkIGJ5IHRoaXMgY29udGFpbmVyLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInByb3BlcnRpZXMiOnsibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuIE1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLiBJZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsIG90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBNb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImFnZW50IiwiZGVwbG95bWVudE1vZGVsIl0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiRmxvd0NvbGxlY3RvclN0YXR1cyBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBGbG93Q29sbGVjdG9yIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiY29uZGl0aW9ucyByZXByZXNlbnQgdGhlIGxhdGVzdCBhdmFpbGFibGUgb2JzZXJ2YXRpb25zIG9mIGFuIG9iamVjdCdzIHN0YXRlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJDb25kaXRpb24gY29udGFpbnMgZGV0YWlscyBmb3Igb25lIGFzcGVjdCBvZiB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGlzIEFQSSBSZXNvdXJjZS4gLS0tIFRoaXMgc3RydWN0IGlzIGludGVuZGVkIGZvciBkaXJlY3QgdXNlIGFzIGFuIGFycmF5IGF0IHRoZSBmaWVsZCBwYXRoIC5zdGF0dXMuY29uZGl0aW9ucy4gIEZvciBleGFtcGxlLCB0eXBlIEZvb1N0YXR1cyBzdHJ1Y3R7ICAgICAvLyBSZXByZXNlbnRzIHRoZSBvYnNlcnZhdGlvbnMgb2YgYSBmb28ncyBjdXJyZW50IHN0YXRlLiAgICAgLy8gS25vd24gLnN0YXR1cy5jb25kaXRpb25zLnR5cGUgYXJlOiBcIkF2YWlsYWJsZVwiLCBcIlByb2dyZXNzaW5nXCIsIGFuZCBcIkRlZ3JhZGVkXCIgICAgIC8vICtwYXRjaE1lcmdlS2V5PXR5cGUgICAgIC8vICtwYXRjaFN0cmF0ZWd5PW1lcmdlICAgICAvLyArbGlzdFR5cGU9bWFwICAgICAvLyArbGlzdE1hcEtleT10eXBlICAgICBDb25kaXRpb25zIFtdbWV0YXYxLkNvbmRpdGlvbiBganNvbjpcImNvbmRpdGlvbnMsb21pdGVtcHR5XCIgcGF0Y2hTdHJhdGVneTpcIm1lcmdlXCIgcGF0Y2hNZXJnZUtleTpcInR5cGVcIiBwcm90b2J1ZjpcImJ5dGVzLDEscmVwLG5hbWU9Y29uZGl0aW9uc1wiYCBcbiAgICAgLy8gb3RoZXIgZmllbGRzIH0iLCJwcm9wZXJ0aWVzIjp7Imxhc3RUcmFuc2l0aW9uVGltZSI6eyJkZXNjcmlwdGlvbiI6Imxhc3RUcmFuc2l0aW9uVGltZSBpcyB0aGUgbGFzdCB0aW1lIHRoZSBjb25kaXRpb24gdHJhbnNpdGlvbmVkIGZyb20gb25lIHN0YXR1cyB0byBhbm90aGVyLiBUaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uIFRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLiBGb3IgaW5zdGFuY2UsIGlmIC5tZXRhZGF0YS5nZW5lcmF0aW9uIGlzIGN1cnJlbnRseSAxMiwgYnV0IHRoZSAuc3RhdHVzLmNvbmRpdGlvbnNbeF0ub2JzZXJ2ZWRHZW5lcmF0aW9uIGlzIDksIHRoZSBjb25kaXRpb24gaXMgb3V0IG9mIGRhdGUgd2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi4gUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsIGFuZCB3aGV0aGVyIHRoZSB2YWx1ZXMgYXJlIGNvbnNpZGVyZWQgYSBndWFyYW50ZWVkIEFQSS4gVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuIFRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiAtLS0gTWFueSAuY29uZGl0aW9uLnR5cGUgdmFsdWVzIGFyZSBjb25zaXN0ZW50IGFjcm9zcyByZXNvdXJjZXMgbGlrZSBBdmFpbGFibGUsIGJ1dCBiZWNhdXNlIGFyYml0cmFyeSBjb25kaXRpb25zIGNhbiBiZSB1c2VmdWwgKHNlZSAubm9kZS5zdGF0dXMuY29uZGl0aW9ucyksIHRoZSBhYmlsaXR5IHRvIGRlY29uZmxpY3QgaXMgaW1wb3J0YW50LiBUaGUgcmVnZXggaXQgbWF0Y2hlcyBpcyAoZG5zMTEyM1N1YmRvbWFpbkZtdC8pPyhxdWFsaWZpZWROYW1lRm10KSIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZSB3aGVyZSBjb25zb2xlIHBsdWdpbiBhbmQgZmxvd2xvZ3MtcGlwZWxpbmUgaGF2ZSBiZWVuIGRlcGxveWVkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNvbmRpdGlvbnMiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6W10sInN0b3JlZFZlcnNpb25zIjpbXX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJsYWJlbHMiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9LCJuYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZSJ9LCJzcGVjIjp7InBvcnRzIjpbeyJuYW1lIjoiaHR0cHMiLCJwb3J0Ijo4NDQzLCJwcm90b2NvbCI6IlRDUCIsInRhcmdldFBvcnQiOiJodHRwcyJ9XSwic2VsZWN0b3IiOnsiY29udHJvbC1wbGFuZSI6ImNvbnRyb2xsZXItbWFuYWdlciJ9fSwic3RhdHVzIjp7ImxvYWRCYWxhbmNlciI6e319fQ==
  - type: olm.bundle.object
    value:
      data: 
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel8@sha256:3fe21280040add09090bd129becf3aa88ea96b2b344ad97c3cdf750952ce2803
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel8@sha256:09f95e8df4d3d89cc5404271a07d55c2ba081d3a510993b44308f7e66b590ea5
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel8@sha256:6337adbde9034ebaef300c599f4d74123e46c5e280cf4773193cfd94a0cecb5f
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:757ae641f759f0e62b72947321df4f03430f74917f65c4d04f7f8e67ff7ccca1
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel8-operator@sha256:3b22f37d87e610674b57023b22394547134d5c07dd196f8120e6dac52325d4da
    name: network-observability-rhel8-operator-3b22f37d87e610674b57023b22394547134d5c07dd196f8120e6dac52325d4da-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel8-operator@sha256:3b22f37d87e610674b57023b22394547134d5c07dd196f8120e6dac52325d4da
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:a9e2e62b47f1706d59e437d56633e3100332050df27697c264849de9bfb10172
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:9ba226d0207edd7c9173333647353d3a7a0b5bfc32feb60ca5749dd6dc190c28
name: network-observability-operator.v1.2.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.2.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiZmxvd3MubmV0b2JzZXJ2LmlvL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiRmxvd0NvbGxlY3RvclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiY2x1c3RlclwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJhZ2VudFwiOiB7XG4gICAgICAgIFwiZWJwZlwiOiB7XG4gICAgICAgICAgXCJjYWNoZUFjdGl2ZVRpbWVvdXRcIjogXCI1c1wiLFxuICAgICAgICAgIFwiY2FjaGVNYXhGbG93c1wiOiAxMDAwMDAsXG4gICAgICAgICAgXCJleGNsdWRlSW50ZXJmYWNlc1wiOiBbXG4gICAgICAgICAgICBcImxvXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFwiaW1hZ2VQdWxsUG9saWN5XCI6IFwiSWZOb3RQcmVzZW50XCIsXG4gICAgICAgICAgXCJpbnRlcmZhY2VzXCI6IFtdLFxuICAgICAgICAgIFwia2Fma2FCYXRjaFNpemVcIjogMTA0ODU3NjAsXG4gICAgICAgICAgXCJsb2dMZXZlbFwiOiBcImluZm9cIixcbiAgICAgICAgICBcInJlc291cmNlc1wiOiB7XG4gICAgICAgICAgICBcImxpbWl0c1wiOiB7XG4gICAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiODAwTWlcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicmVxdWVzdHNcIjoge1xuICAgICAgICAgICAgICBcImNwdVwiOiBcIjEwMG1cIixcbiAgICAgICAgICAgICAgXCJtZW1vcnlcIjogXCI1ME1pXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwic2FtcGxpbmdcIjogNTBcbiAgICAgICAgfSxcbiAgICAgICAgXCJ0eXBlXCI6IFwiRUJQRlwiXG4gICAgICB9LFxuICAgICAgXCJjb25zb2xlUGx1Z2luXCI6IHtcbiAgICAgICAgXCJhdXRvc2NhbGVyXCI6IHtcbiAgICAgICAgICBcIm1heFJlcGxpY2FzXCI6IDMsXG4gICAgICAgICAgXCJtZXRyaWNzXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJyZXNvdXJjZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiY3B1XCIsXG4gICAgICAgICAgICAgICAgXCJ0YXJnZXRcIjoge1xuICAgICAgICAgICAgICAgICAgXCJhdmVyYWdlVXRpbGl6YXRpb25cIjogNTAsXG4gICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJVdGlsaXphdGlvblwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcInR5cGVcIjogXCJSZXNvdXJjZVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcIm1pblJlcGxpY2FzXCI6IDEsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJESVNBQkxFRFwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiaW1hZ2VQdWxsUG9saWN5XCI6IFwiSWZOb3RQcmVzZW50XCIsXG4gICAgICAgIFwibG9nTGV2ZWxcIjogXCJpbmZvXCIsXG4gICAgICAgIFwicG9ydFwiOiA5MDAxLFxuICAgICAgICBcInBvcnROYW1pbmdcIjoge1xuICAgICAgICAgIFwiZW5hYmxlXCI6IHRydWUsXG4gICAgICAgICAgXCJwb3J0TmFtZXNcIjoge1xuICAgICAgICAgICAgXCIzMTAwXCI6IFwibG9raVwiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInF1aWNrRmlsdGVyc1wiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJkZWZhdWx0XCI6IHRydWUsXG4gICAgICAgICAgICBcImZpbHRlclwiOiB7XG4gICAgICAgICAgICAgIFwiZHN0X25hbWVzcGFjZSFcIjogXCJvcGVuc2hpZnQtLG5ldG9ic2VydlwiLFxuICAgICAgICAgICAgICBcInNyY19uYW1lc3BhY2UhXCI6IFwib3BlbnNoaWZ0LSxuZXRvYnNlcnZcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIkFwcGxpY2F0aW9uc1wiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBcImZpbHRlclwiOiB7XG4gICAgICAgICAgICAgIFwiZHN0X25hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC0sbmV0b2JzZXJ2XCIsXG4gICAgICAgICAgICAgIFwic3JjX25hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC0sbmV0b2JzZXJ2XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJJbmZyYXN0cnVjdHVyZVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBcImRlZmF1bHRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwiZmlsdGVyXCI6IHtcbiAgICAgICAgICAgICAgXCJkc3Rfa2luZFwiOiBcIlBvZFwiLFxuICAgICAgICAgICAgICBcInNyY19raW5kXCI6IFwiUG9kXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJQb2RzIG5ldHdvcmtcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJmaWx0ZXJcIjoge1xuICAgICAgICAgICAgICBcImRzdF9raW5kXCI6IFwiU2VydmljZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiU2VydmljZXMgbmV0d29ya1wiXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBcInJlZ2lzdGVyXCI6IHRydWVcbiAgICAgIH0sXG4gICAgICBcImRlcGxveW1lbnRNb2RlbFwiOiBcIkRJUkVDVFwiLFxuICAgICAgXCJleHBvcnRlcnNcIjogW10sXG4gICAgICBcImthZmthXCI6IHtcbiAgICAgICAgXCJhZGRyZXNzXCI6IFwia2Fma2EtY2x1c3Rlci1rYWZrYS1ib290c3RyYXAubmV0b2JzZXJ2XCIsXG4gICAgICAgIFwidGxzXCI6IHtcbiAgICAgICAgICBcImNhQ2VydFwiOiB7XG4gICAgICAgICAgICBcImNlcnRGaWxlXCI6IFwiY2EuY3J0XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJrYWZrYS1jbHVzdGVyLWNsdXN0ZXItY2EtY2VydFwiLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwic2VjcmV0XCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiZW5hYmxlXCI6IGZhbHNlLFxuICAgICAgICAgIFwidXNlckNlcnRcIjoge1xuICAgICAgICAgICAgXCJjZXJ0RmlsZVwiOiBcInVzZXIuY3J0XCIsXG4gICAgICAgICAgICBcImNlcnRLZXlcIjogXCJ1c2VyLmtleVwiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiZmxwLWthZmthXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJzZWNyZXRcIlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJ0b3BpY1wiOiBcIm5ldHdvcmstZmxvd3NcIlxuICAgICAgfSxcbiAgICAgIFwibG9raVwiOiB7XG4gICAgICAgIFwiYmF0Y2hTaXplXCI6IDEwNDg1NzYwLFxuICAgICAgICBcImJhdGNoV2FpdFwiOiBcIjFzXCIsXG4gICAgICAgIFwibWF4QmFja29mZlwiOiBcIjVzXCIsXG4gICAgICAgIFwibWF4UmV0cmllc1wiOiAyLFxuICAgICAgICBcIm1pbkJhY2tvZmZcIjogXCIxc1wiLFxuICAgICAgICBcInRsc1wiOiB7XG4gICAgICAgICAgXCJjYUNlcnRcIjoge1xuICAgICAgICAgICAgXCJjZXJ0RmlsZVwiOiBcInNlcnZpY2UtY2EuY3J0XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJsb2tpLWdhdGV3YXktY2EtYnVuZGxlXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJjb25maWdtYXBcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJlbmFibGVcIjogZmFsc2UsXG4gICAgICAgICAgXCJpbnNlY3VyZVNraXBWZXJpZnlcIjogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgXCJ1cmxcIjogXCJodHRwOi8vbG9raS5uZXRvYnNlcnYuc3ZjOjMxMDAvXCJcbiAgICAgIH0sXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm5ldG9ic2VydlwiLFxuICAgICAgXCJwcm9jZXNzb3JcIjoge1xuICAgICAgICBcImRyb3BVbnVzZWRGaWVsZHNcIjogdHJ1ZSxcbiAgICAgICAgXCJpbWFnZVB1bGxQb2xpY3lcIjogXCJJZk5vdFByZXNlbnRcIixcbiAgICAgICAgXCJrYWZrYUNvbnN1bWVyQXV0b3NjYWxlclwiOiBudWxsLFxuICAgICAgICBcImthZmthQ29uc3VtZXJCYXRjaFNpemVcIjogMTA0ODU3NjAsXG4gICAgICAgIFwia2Fma2FDb25zdW1lclF1ZXVlQ2FwYWNpdHlcIjogMTAwMCxcbiAgICAgICAgXCJrYWZrYUNvbnN1bWVyUmVwbGljYXNcIjogMyxcbiAgICAgICAgXCJsb2dMZXZlbFwiOiBcImluZm9cIixcbiAgICAgICAgXCJtZXRyaWNzXCI6IHtcbiAgICAgICAgICBcImlnbm9yZVRhZ3NcIjogW1xuICAgICAgICAgICAgXCJmbG93c1wiLFxuICAgICAgICAgICAgXCJieXRlc1wiLFxuICAgICAgICAgICAgXCJwYWNrZXRzXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFwic2VydmVyXCI6IHtcbiAgICAgICAgICAgIFwicG9ydFwiOiA5MTAyXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInBvcnRcIjogMjA1NSxcbiAgICAgICAgXCJwcm9maWxlUG9ydFwiOiA2MDYwLFxuICAgICAgICBcInJlc291cmNlc1wiOiB7XG4gICAgICAgICAgXCJsaW1pdHNcIjoge1xuICAgICAgICAgICAgXCJtZW1vcnlcIjogXCI4MDBNaVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInJlcXVlc3RzXCI6IHtcbiAgICAgICAgICAgIFwiY3B1XCI6IFwiMTAwbVwiLFxuICAgICAgICAgICAgXCJtZW1vcnlcIjogXCIxMDBNaVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9LFxuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiZmxvd3MubmV0b2JzZXJ2LmlvL3YxYmV0YTFcIixcbiAgICBcImtpbmRcIjogXCJGbG93Q29sbGVjdG9yXCIsXG4gICAgXCJtZXRhZGF0YVwiOiB7XG4gICAgICBcIm5hbWVcIjogXCJjbHVzdGVyXCJcbiAgICB9LFxuICAgIFwic3BlY1wiOiB7XG4gICAgICBcImFnZW50XCI6IHtcbiAgICAgICAgXCJlYnBmXCI6IHtcbiAgICAgICAgICBcImNhY2hlQWN0aXZlVGltZW91dFwiOiBcIjVzXCIsXG4gICAgICAgICAgXCJjYWNoZU1heEZsb3dzXCI6IDEwMDAwMCxcbiAgICAgICAgICBcImV4Y2x1ZGVJbnRlcmZhY2VzXCI6IFtcbiAgICAgICAgICAgIFwibG9cIlxuICAgICAgICAgIF0sXG4gICAgICAgICAgXCJpbWFnZVB1bGxQb2xpY3lcIjogXCJJZk5vdFByZXNlbnRcIixcbiAgICAgICAgICBcImludGVyZmFjZXNcIjogW10sXG4gICAgICAgICAgXCJrYWZrYUJhdGNoU2l6ZVwiOiAxMDQ4NTc2MCxcbiAgICAgICAgICBcImxvZ0xldmVsXCI6IFwiaW5mb1wiLFxuICAgICAgICAgIFwicmVzb3VyY2VzXCI6IHtcbiAgICAgICAgICAgIFwibGltaXRzXCI6IHtcbiAgICAgICAgICAgICAgXCJtZW1vcnlcIjogXCI4MDBNaVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJyZXF1ZXN0c1wiOiB7XG4gICAgICAgICAgICAgIFwiY3B1XCI6IFwiMTAwbVwiLFxuICAgICAgICAgICAgICBcIm1lbW9yeVwiOiBcIjUwTWlcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJzYW1wbGluZ1wiOiA1MFxuICAgICAgICB9LFxuICAgICAgICBcInR5cGVcIjogXCJFQlBGXCJcbiAgICAgIH0sXG4gICAgICBcImNvbnNvbGVQbHVnaW5cIjoge1xuICAgICAgICBcImF1dG9zY2FsZXJcIjoge1xuICAgICAgICAgIFwibWF4UmVwbGljYXNcIjogMyxcbiAgICAgICAgICBcIm1ldHJpY3NcIjogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcInJlc291cmNlXCI6IHtcbiAgICAgICAgICAgICAgICBcIm5hbWVcIjogXCJjcHVcIixcbiAgICAgICAgICAgICAgICBcInRhcmdldFwiOiB7XG4gICAgICAgICAgICAgICAgICBcImF2ZXJhZ2VVdGlsaXphdGlvblwiOiA1MCxcbiAgICAgICAgICAgICAgICAgIFwidHlwZVwiOiBcIlV0aWxpemF0aW9uXCJcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFwidHlwZVwiOiBcIlJlc291cmNlXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICBdLFxuICAgICAgICAgIFwibWluUmVwbGljYXNcIjogMSxcbiAgICAgICAgICBcInN0YXR1c1wiOiBcIkRJU0FCTEVEXCJcbiAgICAgICAgfSxcbiAgICAgICAgXCJpbWFnZVB1bGxQb2xpY3lcIjogXCJJZk5vdFByZXNlbnRcIixcbiAgICAgICAgXCJsb2dMZXZlbFwiOiBcImluZm9cIixcbiAgICAgICAgXCJwb3J0XCI6IDkwMDEsXG4gICAgICAgIFwicG9ydE5hbWluZ1wiOiB7XG4gICAgICAgICAgXCJlbmFibGVcIjogdHJ1ZSxcbiAgICAgICAgICBcInBvcnROYW1lc1wiOiB7XG4gICAgICAgICAgICBcIjMxMDBcIjogXCJsb2tpXCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFwicXVpY2tGaWx0ZXJzXCI6IFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBcImRlZmF1bHRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwiZmlsdGVyXCI6IHtcbiAgICAgICAgICAgICAgXCJkc3RfbmFtZXNwYWNlIVwiOiBcIm9wZW5zaGlmdC0sbmV0b2JzZXJ2XCIsXG4gICAgICAgICAgICAgIFwic3JjX25hbWVzcGFjZSFcIjogXCJvcGVuc2hpZnQtLG5ldG9ic2VydlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiQXBwbGljYXRpb25zXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFwiZmlsdGVyXCI6IHtcbiAgICAgICAgICAgICAgXCJkc3RfbmFtZXNwYWNlXCI6IFwib3BlbnNoaWZ0LSxuZXRvYnNlcnZcIixcbiAgICAgICAgICAgICAgXCJzcmNfbmFtZXNwYWNlXCI6IFwib3BlbnNoaWZ0LSxuZXRvYnNlcnZcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIkluZnJhc3RydWN0dXJlXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFwiZGVmYXVsdFwiOiB0cnVlLFxuICAgICAgICAgICAgXCJmaWx0ZXJcIjoge1xuICAgICAgICAgICAgICBcImRzdF9raW5kXCI6IFwiUG9kXCIsXG4gICAgICAgICAgICAgIFwic3JjX2tpbmRcIjogXCJQb2RcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIlBvZHMgbmV0d29ya1wiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBcImZpbHRlclwiOiB7XG4gICAgICAgICAgICAgIFwiZHN0X2tpbmRcIjogXCJTZXJ2aWNlXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJTZXJ2aWNlcyBuZXR3b3JrXCJcbiAgICAgICAgICB9XG4gICAgICAgIF0sXG4gICAgICAgIFwicmVnaXN0ZXJcIjogdHJ1ZVxuICAgICAgfSxcbiAgICAgIFwiZGVwbG95bWVudE1vZGVsXCI6IFwiRElSRUNUXCIsXG4gICAgICBcImV4cG9ydGVyc1wiOiBbXSxcbiAgICAgIFwia2Fma2FcIjoge1xuICAgICAgICBcImFkZHJlc3NcIjogXCJrYWZrYS1jbHVzdGVyLWthZmthLWJvb3RzdHJhcC5uZXRvYnNlcnZcIixcbiAgICAgICAgXCJ0bHNcIjoge1xuICAgICAgICAgIFwiY2FDZXJ0XCI6IHtcbiAgICAgICAgICAgIFwiY2VydEZpbGVcIjogXCJjYS5jcnRcIixcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImthZmthLWNsdXN0ZXItY2x1c3Rlci1jYS1jZXJ0XCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJzZWNyZXRcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJlbmFibGVcIjogZmFsc2UsXG4gICAgICAgICAgXCJ1c2VyQ2VydFwiOiB7XG4gICAgICAgICAgICBcImNlcnRGaWxlXCI6IFwidXNlci5jcnRcIixcbiAgICAgICAgICAgIFwiY2VydEtleVwiOiBcInVzZXIua2V5XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJmbHAta2Fma2FcIixcbiAgICAgICAgICAgIFwidHlwZVwiOiBcInNlY3JldFwiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInRvcGljXCI6IFwibmV0d29yay1mbG93c1wiXG4gICAgICB9LFxuICAgICAgXCJsb2tpXCI6IHtcbiAgICAgICAgXCJiYXRjaFNpemVcIjogMTA0ODU3NjAsXG4gICAgICAgIFwiYmF0Y2hXYWl0XCI6IFwiMXNcIixcbiAgICAgICAgXCJtYXhCYWNrb2ZmXCI6IFwiNXNcIixcbiAgICAgICAgXCJtYXhSZXRyaWVzXCI6IDIsXG4gICAgICAgIFwibWluQmFja29mZlwiOiBcIjFzXCIsXG4gICAgICAgIFwic3RhdHVzVGxzXCI6IHtcbiAgICAgICAgICBcImNhQ2VydFwiOiB7XG4gICAgICAgICAgICBcImNlcnRGaWxlXCI6IFwic2VydmljZS1jYS5jcnRcIixcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImxva2ktY2EtYnVuZGxlXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJjb25maWdtYXBcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJlbmFibGVcIjogZmFsc2UsXG4gICAgICAgICAgXCJpbnNlY3VyZVNraXBWZXJpZnlcIjogZmFsc2UsXG4gICAgICAgICAgXCJ1c2VyQ2VydFwiOiB7XG4gICAgICAgICAgICBcImNlcnRGaWxlXCI6IFwidGxzLmNydFwiLFxuICAgICAgICAgICAgXCJjZXJ0S2V5XCI6IFwidGxzLmtleVwiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwibG9raS1xdWVyeS1mcm9udGVuZC1odHRwXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJzZWNyZXRcIlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJ0bHNcIjoge1xuICAgICAgICAgIFwiY2FDZXJ0XCI6IHtcbiAgICAgICAgICAgIFwiY2VydEZpbGVcIjogXCJzZXJ2aWNlLWNhLmNydFwiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwibG9raS1nYXRld2F5LWNhLWJ1bmRsZVwiLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwiY29uZmlnbWFwXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiZW5hYmxlXCI6IGZhbHNlLFxuICAgICAgICAgIFwiaW5zZWN1cmVTa2lwVmVyaWZ5XCI6IGZhbHNlXG4gICAgICAgIH0sXG4gICAgICAgIFwidXJsXCI6IFwiaHR0cDovL2xva2kubmV0b2JzZXJ2LnN2YzozMTAwL1wiXG4gICAgICB9LFxuICAgICAgXCJuYW1lc3BhY2VcIjogXCJuZXRvYnNlcnZcIixcbiAgICAgIFwicHJvY2Vzc29yXCI6IHtcbiAgICAgICAgXCJjb252ZXJzYXRpb25FbmRUaW1lb3V0XCI6IFwiMTBzXCIsXG4gICAgICAgIFwiY29udmVyc2F0aW9uSGVhcnRiZWF0SW50ZXJ2YWxcIjogXCIzMHNcIixcbiAgICAgICAgXCJkcm9wVW51c2VkRmllbGRzXCI6IHRydWUsXG4gICAgICAgIFwiaW1hZ2VQdWxsUG9saWN5XCI6IFwiSWZOb3RQcmVzZW50XCIsXG4gICAgICAgIFwia2Fma2FDb25zdW1lckF1dG9zY2FsZXJcIjogbnVsbCxcbiAgICAgICAgXCJrYWZrYUNvbnN1bWVyQmF0Y2hTaXplXCI6IDEwNDg1NzYwLFxuICAgICAgICBcImthZmthQ29uc3VtZXJRdWV1ZUNhcGFjaXR5XCI6IDEwMDAsXG4gICAgICAgIFwia2Fma2FDb25zdW1lclJlcGxpY2FzXCI6IDMsXG4gICAgICAgIFwibG9nTGV2ZWxcIjogXCJpbmZvXCIsXG4gICAgICAgIFwibG9nVHlwZXNcIjogXCJGTE9XU1wiLFxuICAgICAgICBcIm1ldHJpY3NcIjoge1xuICAgICAgICAgIFwiZGlzYWJsZUFsZXJ0c1wiOiBbXSxcbiAgICAgICAgICBcImlnbm9yZVRhZ3NcIjogW1xuICAgICAgICAgICAgXCJmbG93c1wiLFxuICAgICAgICAgICAgXCJieXRlc1wiLFxuICAgICAgICAgICAgXCJwYWNrZXRzXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFwic2VydmVyXCI6IHtcbiAgICAgICAgICAgIFwicG9ydFwiOiA5MTAyXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInBvcnRcIjogMjA1NSxcbiAgICAgICAgXCJwcm9maWxlUG9ydFwiOiA2MDYwLFxuICAgICAgICBcInJlc291cmNlc1wiOiB7XG4gICAgICAgICAgXCJsaW1pdHNcIjoge1xuICAgICAgICAgICAgXCJtZW1vcnlcIjogXCI4MDBNaVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInJlcXVlc3RzXCI6IHtcbiAgICAgICAgICAgIFwiY3B1XCI6IFwiMTAwbVwiLFxuICAgICAgICAgICAgXCJtZW1vcnlcIjogXCIxMDBNaVwiXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9XG5dIiwiY2FwYWJpbGl0aWVzIjoiU2VhbWxlc3MgVXBncmFkZXMiLCJjYXRlZ29yaWVzIjoiTW9uaXRvcmluZyIsImNvbnNvbGUub3BlbnNoaWZ0LmlvL3BsdWdpbnMiOiJbXCJuZXRvYnNlcnYtcGx1Z2luXCJdIiwiY29udGFpbmVySW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1yaGVsOS1vcGVyYXRvckBzaGEyNTY6OTEwYWU4NTY5OTg1OTM4ODhjYWRkNGE0ZjA1NDUyYjgwMDU3OWU3Y2Q0MjU0YzczZTAzYTlkNDFhODc0NTE2NCIsImNyZWF0ZWRBdCI6IjIwMjMtMDQtMTJUMTM6NDQ6MzciLCJkZXNjcmlwdGlvbiI6Ik5ldHdvcmsgZmxvd3MgY29sbGVjdG9yIGFuZCBtb25pdG9yaW5nIHNvbHV0aW9uIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vY2x1c3Rlci1tb25pdG9yaW5nIjoidHJ1ZSIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL3N1Z2dlc3RlZC1uYW1lc3BhY2UiOiJvcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yIiwib3BlcmF0b3JzLm9wZW5zaGlmdC5pby92YWxpZC1zdWJzY3JpcHRpb24iOiJbXCJPcGVuU2hpZnQgS3ViZXJuZXRlcyBFbmdpbmVcIiwgXCJPcGVuU2hpZnQgQ29udGFpbmVyIFBsYXRmb3JtXCIsIFwiT3BlblNoaWZ0IFBsYXRmb3JtIFBsdXNcIl0iLCJvcGVyYXRvcnMub3BlcmF0b3JmcmFtZXdvcmsuaW8vYnVpbGRlciI6Im9wZXJhdG9yLXNkay12MS4yNS4zIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL3Byb2plY3RfbGF5b3V0IjoiZ28ua3ViZWJ1aWxkZXIuaW8vdjMiLCJyZXBvc2l0b3J5IjoiaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IifSwibmFtZSI6Im5ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci52MS4yLjAiLCJuYW1lc3BhY2UiOiJwbGFjZWhvbGRlciJ9LCJzcGVjIjp7ImFwaXNlcnZpY2VkZWZpbml0aW9ucyI6e30sImN1c3RvbXJlc291cmNlZGVmaW5pdGlvbnMiOnsib3duZWQiOlt7ImRlc2NyaXB0aW9uIjoiRmxvd0NvbGxlY3RvciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgZmxvd2NvbGxlY3RvcnMgQVBJLCB3aGljaCBwaWxvdHMgYW5kIGNvbmZpZ3VyZXMgbmV0ZmxvdyBjb2xsZWN0aW9uLiIsImRpc3BsYXlOYW1lIjoiRmxvdyBDb2xsZWN0b3IiLCJraW5kIjoiRmxvd0NvbGxlY3RvciIsIm5hbWUiOiJmbG93Y29sbGVjdG9ycy5mbG93cy5uZXRvYnNlcnYuaW8iLCJ2ZXJzaW9uIjoidjFhbHBoYTEifSx7ImRlc2NyaXB0aW9uIjoiRmxvd0NvbGxlY3RvciBpcyB0aGUgU2NoZW1hIGZvciB0aGUgZmxvd2NvbGxlY3RvcnMgQVBJLCB3aGljaCBwaWxvdHMgYW5kIGNvbmZpZ3VyZXMgbmV0ZmxvdyBjb2xsZWN0aW9uLiIsImRpc3BsYXlOYW1lIjoiRmxvdyBDb2xsZWN0b3IiLCJraW5kIjoiRmxvd0NvbGxlY3RvciIsIm5hbWUiOiJmbG93Y29sbGVjdG9ycy5mbG93cy5uZXRvYnNlcnYuaW8iLCJ2ZXJzaW9uIjoidjFiZXRhMSJ9XX0sImRlc2NyaXB0aW9uIjoiTmV0d29yayBPYnNlcnZhYmlsaXR5IGlzIGFuIE9wZW5TaGlmdCBvcGVyYXRvciB0aGF0IGRlcGxveXMgYSBtb25pdG9yaW5nIHBpcGVsaW5lIHRvIGNvbGxlY3QgYW5kIGVucmljaCBuZXR3b3JrIGZsb3dzIHRoYXQgYXJlIHByb2R1Y2VkIGJ5IHRoZSBOZXR3b3JrIE9ic2VydmFiaWxpdHkgZUJQRiBhZ2VudC5cblxuVGhlIG9wZXJhdG9yIHByb3ZpZGVzIGRhc2hib2FyZHMsIG1ldHJpY3MsIGFuZCBrZWVwcyBmbG93cyBhY2Nlc3NpYmxlIGluIGEgcXVlcnlhYmxlIGxvZyBzdG9yZSwgR3JhZmFuYSBMb2tpLiBXaGVuIGEgYEZsb3dDb2xsZWN0b3JgIGluc3RhbmNlIGlzIGNyZWF0ZWQsIG5ldyB2aWV3cyBhcmUgYXZhaWxhYmxlIGluIHRoZSBDb25zb2xlLlxuXG4jIyBEZXBlbmRlbmNpZXNcblxuIyMjIExva2lcblxuW0xva2ldKGh0dHBzOi8vZ3JhZmFuYS5jb20vb3NzL2xva2kvKSwgZnJvbSBHcmFmYW5hTGFicywgaXMgdGhlIGJhY2tlbmQgdGhhdCBpcyB1c2VkIHRvIHN0b3JlIGFsbCBjb2xsZWN0ZWQgZmxvd3MuIFRoZSBOZXRPYnNlcnYgT3BlcmF0b3IgZG9lcyBub3QgaW5zdGFsbCBMb2tpIGRpcmVjdGx5LCBob3dldmVyIHdlIHByb3ZpZGUgc29tZSBndWlkYW5jZSB0byBoZWxwIHlvdSB0aGVyZS5cblxuRm9yIG5vcm1hbCB1c2FnZSwgd2UgcmVjb21tZW5kIHR3byBvcHRpb25zOlxuXG4tIEluc3RhbGxpbmcgdGhlIFtMb2tpIE9wZXJhdG9yXShodHRwczovL2RvY3Mub3BlbnNoaWZ0LmNvbS9jb250YWluZXItcGxhdGZvcm0vNC4xMS8vbG9nZ2luZy9jbHVzdGVyLWxvZ2dpbmctbG9raS5odG1sKS4gV2UgaGF2ZSB3cml0dGVuIFthIGd1aWRlXShodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L2RvY3VtZW50cy9ibG9iL21haW4vbG9raV9vcGVyYXRvci5tZCkgdG8gaGVscCB5b3UgdGhyb3VnaCB0aG9zZSBzdGVwcy4gUGxlYXNlIG5vdGUgdGhhdCBpdCByZXF1aXJlcyBjb25maWd1cmluZyBhbiBvYmplY3Qgc3RvcmFnZS4gTm90ZSBhbHNvIHRoYXQgdGhlIExva2kgT3BlcmF0b3IgY2FuIGFsc28gYmUgdXNlZCBmb3IgW09wZW5TaGlmdCBjbHVzdGVyIGxvZ2dpbmddKGh0dHBzOi8vZG9jcy5vcGVuc2hpZnQuY29tL2NvbnRhaW5lci1wbGF0Zm9ybS80LjExL2xvZ2dpbmcvY2x1c3Rlci1sb2dnaW5nLmh0bWwpLiBJZiB5b3UgZG8gc28sIHlvdSBzaG91bGQgbm90IHNoYXJlIHRoZSBzYW1lIGBMb2tpU3RhY2tgIGZvciBMb2dnaW5nIGFuZCBOZXRPYnNlcnYuXG5cbi0gSW5zdGFsbGluZyB1c2luZyBbR3JhZmFuYSdzIG9mZmljaWFsIGRvY3VtZW50YXRpb25dKGh0dHBzOi8vZ3JhZmFuYS5jb20vZG9jcy9sb2tpL2xhdGVzdC8pLiBIZXJlIGFsc28gd2Ugd3JvdGUgYSBbXCJkaXN0cmlidXRlZCBMb2tpXCIgc3RlcCBieSBzdGVwIGd1aWRlXShodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L2RvY3VtZW50cy9ibG9iL21haW4vbG9raV9kaXN0cmlidXRlZC5tZCkuXG5cbkZvciBhIHF1aWNrIHRyeSB0aGF0IGlzIG5vdCBzdWl0YWJsZSBmb3IgcHJvZHVjdGlvbiBhbmQgbm90IHNjYWxhYmxlIChpdCBkZXBsb3lzIGEgc2luZ2xlIHBvZCwgY29uZmlndXJlcyBhIDFHQiBzdG9yYWdlIFBWQywgd2l0aCAyNCBob3VycyBvZiByZXRlbnRpb24pLCB5b3UgY2FuIHNpbXBseSBydW4gdGhlIGZvbGxvd2luZyBjb21tYW5kczpcblxuYGBgXG5vYyBjcmVhdGUgbmFtZXNwYWNlIG5ldG9ic2Vydlxub2MgYXBwbHkgLWYgXHUwMDNjKGN1cmwgLUwgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL25ldG9ic2Vydi9kb2N1bWVudHMvMjUyYmI2MjRjZjA0MjVhMWI2NmY1OWNlNjhmYjkzOWYyNDZlZjc3Yi9leGFtcGxlcy96ZXJvLWNsaWNrLWxva2kvMS1zdG9yYWdlLnlhbWwpIC1uIG5ldG9ic2Vydlxub2MgYXBwbHkgLWYgXHUwMDNjKGN1cmwgLUwgaHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL25ldG9ic2Vydi9kb2N1bWVudHMvMjUyYmI2MjRjZjA0MjVhMWI2NmY1OWNlNjhmYjkzOWYyNDZlZjc3Yi9leGFtcGxlcy96ZXJvLWNsaWNrLWxva2kvMi1sb2tpLnlhbWwpIC1uIG5ldG9ic2VydlxuYGBgXG5cbiMjIyBLYWZrYVxuXG5bQXBhY2hlIEthZmthXShodHRwczovL2thZmthLmFwYWNoZS5vcmcvKSBjYW4gb3B0aW9uYWxseSBiZSB1c2VkIGZvciBhIG1vcmUgcmVzaWxpZW50IGFuZCBzY2FsYWJsZSBhcmNoaXRlY3R1cmUuIFlvdSBjYW4gdXNlIGZvciBpbnN0YW5jZSBbU3RyaW16aV0oaHR0cHM6Ly9zdHJpbXppLmlvLyksIGFuIG9wZXJhdG9yLWJhc2VkIGRpc3RyaWJ1dGlvbiBvZiBLYWZrYSBmb3IgS3ViZXJuZXRlcyBhbmQgT3BlblNoaWZ0LlxuXG4jIyMgR3JhZmFuYVxuXG5bR3JhZmFuYV0oaHR0cHM6Ly9ncmFmYW5hLmNvbS9vc3MvZ3JhZmFuYS8pIGNhbiBvcHRpb25hbGx5IGJlIGluc3RhbGxlZCBmb3IgY3VzdG9tIGRhc2hib2FyZHMgYW5kIHF1ZXJ5IGNhcGFiaWxpdGllcy5cblxuIyMgQ29uZmlndXJhdGlvblxuXG5UaGUgYEZsb3dDb2xsZWN0b3JgIHJlc291cmNlIGlzIHVzZWQgdG8gY29uZmlndXJlIHRoZSBvcGVyYXRvciBhbmQgaXRzIG1hbmFnZWQgY29tcG9uZW50cy4gQSBjb21wcmVoZW5zaXZlIGRvY3VtZW50YXRpb24gaXMgW2F2YWlsYWJsZSBoZXJlXShodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9ibG9iLzEuMC4yL2RvY3MvRmxvd0NvbGxlY3Rvci5tZCksIGFuZCBhIGZ1bGwgc2FtcGxlIGZpbGUgW3RoZXJlXShodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9ibG9iLzEuMC4yL2NvbmZpZy9zYW1wbGVzL2Zsb3dzX3YxYmV0YTFfZmxvd2NvbGxlY3Rvci55YW1sKS5cblxuVG8gZWRpdCBjb25maWd1cmF0aW9uIGluIGNsdXN0ZXIsIHJ1bjpcblxuYGBgYmFzaFxub2MgZWRpdCBmbG93Y29sbGVjdG9yIGNsdXN0ZXJcbmBgYFxuXG5BcyBpdCBvcGVyYXRlcyBjbHVzdGVyLXdpZGUsIG9ubHkgYSBzaW5nbGUgYEZsb3dDb2xsZWN0b3JgIGlzIGFsbG93ZWQsIGFuZCBpdCBoYXMgdG8gYmUgbmFtZWQgYGNsdXN0ZXJgLlxuXG5BIGNvdXBsZSBvZiBzZXR0aW5ncyBkZXNlcnZlIHNwZWNpYWwgYXR0ZW50aW9uOlxuXG4tIFNhbXBsaW5nIChgc3BlYy5hZ2VudC5lYnBmLnNhbXBsaW5nYCk6IGEgdmFsdWUgb2YgYDEwMGAgbWVhbnM6IG9uZSBmbG93IGV2ZXJ5IDEwMCBpcyBzYW1wbGVkLiBgMWAgbWVhbnMgYWxsIGZsb3dzIGFyZSBzYW1wbGVkLiBUaGUgbG93ZXIgaXQgaXMsIHRoZSBtb3JlIGZsb3dzIHlvdSBnZXQsIGFuZCB0aGUgbW9yZSBhY2N1cmF0ZSBhcmUgZGVyaXZlZCBtZXRyaWNzLCBidXQgdGhlIGhpZ2hlciBhbW91bnQgb2YgcmVzb3VyY2VzIGFyZSBjb25zdW1lZC4gQnkgZGVmYXVsdCwgc2FtcGxpbmcgaXMgc2V0IHRvIDUwIChpZS4gMTo1MCkuIE5vdGUgdGhhdCBtb3JlIHNhbXBsZWQgZmxvd3MgYWxzbyBtZWFucyBtb3JlIHN0b3JhZ2UgbmVlZGVkLiBXZSByZWNvbW1lbmQgdG8gc3RhcnQgd2l0aCBkZWZhdWx0IHZhbHVlcyBhbmQgcmVmaW5lIGVtcGlyaWNhbGx5LCB0byBmaWd1cmUgb3V0IHdoaWNoIHNldHRpbmcgeW91ciBjbHVzdGVyIGNhbiBtYW5hZ2UuXG5cbi0gTG9raSAoYHNwZWMubG9raWApOiBjb25maWd1cmUgaGVyZSBob3cgdG8gcmVhY2ggTG9raS4gVGhlIGRlZmF1bHQgdmFsdWVzIG1hdGNoIHRoZSBMb2tpIHF1aWNrIGluc3RhbGwgcGF0aHMgbWVudGlvbmVkIGFib3ZlLCBidXQgeW91IG1heSBoYXZlIHRvIGNvbmZpZ3VyZSBkaWZmZXJlbnRseSBpZiB5b3UgdXNlZCBhbm90aGVyIGluc3RhbGxhdGlvbiBtZXRob2QuXG5cbi0gUXVpY2sgZmlsdGVycyAoYHNwZWMuY29uc29sZVBsdWdpbi5xdWlja0ZpbHRlcnNgKTogY29uZmlndXJlIHByZXNldCBmaWx0ZXJzIHRvIGJlIGRpc3BsYXllZCBpbiB0aGUgQ29uc29sZSBwbHVnaW4uIFRoZXkgb2ZmZXIgYSB3YXkgdG8gcXVpY2tseSBzd2l0Y2ggZnJvbSBmaWx0ZXJzIHRvIG90aGVycywgc3VjaCBhcyBzaG93aW5nIC8gaGlkaW5nIHBvZHMgbmV0d29yaywgb3IgaW5mcmFzdHJ1Y3R1cmUgbmV0d29yaywgb3IgYXBwbGljYXRpb24gbmV0d29yaywgZXRjLiBUaGV5IGNhbiBiZSB0dW5lZCB0byByZWZsZWN0IHRoZSBkaWZmZXJlbnQgd29ya2xvYWRzIHJ1bm5pbmcgb24geW91ciBjbHVzdGVyLiBGb3IgYSBsaXN0IG9mIGF2YWlsYWJsZSBmaWx0ZXJzLCBbY2hlY2sgdGhpcyBwYWdlXShodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9ibG9iLzEuMC4yL2RvY3MvUXVpY2tGaWx0ZXJzLm1kKS5cblxuLSBLYWZrYSAoYHNwZWMuZGVwbG95bWVudE1vZGVsOiBLQUZLQWAgYW5kIGBzcGVjLmthZmthYCk6IHdoZW4gZW5hYmxlZCwgaW50ZWdyYXRlcyB0aGUgZmxvdyBjb2xsZWN0aW9uIHBpcGVsaW5lIHdpdGggS2Fma2EsIGJ5IHNwbGl0dGluZyBpbmdlc3Rpb24gZnJvbSB0cmFuc2Zvcm1hdGlvbiAoa3ViZSBlbnJpY2htZW50LCBkZXJpdmVkIG1ldHJpY3MsIC4uLikuIEthZmthIGNhbiBwcm92aWRlIGJldHRlciBzY2FsYWJpbGl0eSwgcmVzaWxpZW5jeSBhbmQgaGlnaCBhdmFpbGFiaWxpdHkgKFt2aWV3IG1vcmUgZGV0YWlsc10oaHR0cHM6Ly93d3cucmVkaGF0LmNvbS9lbi90b3BpY3MvaW50ZWdyYXRpb24vd2hhdC1pcy1hcGFjaGUta2Fma2EpKS4gQXNzdW1lcyBLYWZrYSBpcyBhbHJlYWR5IGRlcGxveWVkIGFuZCBhIHRvcGljIGlzIGNyZWF0ZWQuXG5cbi0gRXhwb3J0ZXJzIChgc3BlYy5leHBvcnRlcnNgLCBfZXhwZXJpbWVudGFsXykgYW4gb3B0aW9uYWwgbGlzdCBvZiBleHBvcnRlcnMgdG8gd2hpY2ggdG8gc2VuZCBlbnJpY2hlZCBmbG93cy4gQ3VycmVudGx5IG9ubHkgS0FGS0EgaXMgc3VwcG9ydGVkLiBUaGlzIGFsbG93cyB5b3UgdG8gZGVmaW5lIGFueSBjdXN0b20gc3RvcmFnZSBvciBwcm9jZXNzaW5nIHRoYXQgY2FuIHJlYWQgZnJvbSBLYWZrYS4gVGhpcyBmZWF0dXJlIGlzIGZsYWdnZWQgYXMgX2V4cGVyaW1lbnRhbF8gYXMgaXQgaGFzIG5vdCBiZWVuIHRob3JvdWdobHkgb3Igc3RyZXNzIHRlc3RlZCB5ZXQsIHNvIHVzZSBhdCB5b3VyIG93biByaXNrLlxuXG4jIyBGdXJ0aGVyIHJlYWRpbmdcblxuUGxlYXNlIHJlZmVyIHRvIHRoZSBkb2N1bWVudGF0aW9uIG9uIEdpdEh1YiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cblxuVGhpcyBkb2N1bWVudGF0aW9uIGluY2x1ZGVzOlxuXG4tIEFuIFtvdmVydmlld10oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3Ijb3BlbnNoaWZ0LWNvbnNvbGUpIG9mIHRoZSBmZWF0dXJlcywgd2l0aCBzY3JlZW5zaG90c1xuLSBBIFtwZXJmb3JtYW5jZV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IjcGVyZm9ybWFuY2UtZmluZS10dW5pbmcpIHNlY3Rpb24sIGZvciBmaW5lLXR1bmluZ1xuLSBBIFtzZWN1cml0eV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3Ijc2VjdXJpbmctZGF0YS1hbmQtY29tbXVuaWNhdGlvbnMpIHNlY3Rpb25cbi0gQW4gW0YuQS5RLl0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IjZmFxLS10cm91Ymxlc2hvb3RpbmcpIHNlY3Rpb25cbiIsImRpc3BsYXlOYW1lIjoiTmV0d29yayBvYnNlcnZhYmlsaXR5IiwiaWNvbiI6W3siYmFzZTY0ZGF0YSI6IlBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlkWFJtTFRnaVB6NEtQQ0V0TFNCSFpXNWxjbUYwYjNJNklFRmtiMkpsSUVsc2JIVnpkSEpoZEc5eUlESTJMakF1TWl3Z1UxWkhJRVY0Y0c5eWRDQlFiSFZuTFVsdUlDNGdVMVpISUZabGNuTnBiMjQ2SURZdU1EQWdRblZwYkdRZ01Da2dJQzB0UGdvOGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2FXUTlJa3hoZVdWeVh6RWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SWdlRzFzYm5NNmVHeHBibXM5SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpFNU9Ua3ZlR3hwYm1zaUlIZzlJakJ3ZUNJZ2VUMGlNSEI0SWdvSklIWnBaWGRDYjNnOUlqQWdNQ0F4TURBZ01UQXdJaUJ6ZEhsc1pUMGlaVzVoWW14bExXSmhZMnRuY205MWJtUTZibVYzSURBZ01DQXhNREFnTVRBd095SWdlRzFzT25Od1lXTmxQU0p3Y21WelpYSjJaU0krQ2p4emRIbHNaU0IwZVhCbFBTSjBaWGgwTDJOemN5SStDZ2t1YzNRd2UyWnBiR3c2ZFhKc0tDTlRWa2RKUkY4eFh5azdmUW9KTG5OME1YdG1hV3hzT2lOR1JrWkdSa1k3ZlFvSkxuTjBNbnR2Y0dGamFYUjVPakF1Tmp0OUNna3VjM1F6ZTI5d1lXTnBkSGs2TUM0MU8zMEtDUzV6ZERSN2IzQmhZMmwwZVRvd0xqUTdmUW84TDNOMGVXeGxQZ284Wno0S0NUeG5QZ29KQ1R4blBnb0pDUWs4Y21Ga2FXRnNSM0poWkdsbGJuUWdhV1E5SWxOV1IwbEVYekZmSWlCamVEMGlNVFF1TnpjMU9DSWdZM2s5SWkweUxqazNOekVpSUhJOUlqa3hMall5TnlJZ1ozSmhaR2xsYm5SVmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlQZ29KQ1FrSlBITjBiM0FnSUc5bVpuTmxkRDBpTUNJZ2MzUjViR1U5SW5OMGIzQXRZMjlzYjNJNkl6TkRNMFpCTmlJdlBnb0pDUWtKUEhOMGIzQWdJRzltWm5ObGREMGlNU0lnYzNSNWJHVTlJbk4wYjNBdFkyOXNiM0k2SXpOQ01ETTBNQ0l2UGdvSkNRazhMM0poWkdsaGJFZHlZV1JwWlc1MFBnb0pDUWs4Y0dGMGFDQmpiR0Z6Y3owaWMzUXdJaUJrUFNKTk5UQXNPVGxqTFRFekxqTXNNQzB5TlM0MExUVXVNeTB6TkM0eUxURXpMamxETmk0M0xEYzJMaklzTVN3Mk15NDNMREVzTlRCRE1Td3lNaTQ1TERJeUxqa3NNU3cxTUN3eFl6RXpMamNzTUN3eU5pNHlMRFV1Tnl3ek5TNHhMREUwTGpnS0NRa0pDVU01TXk0M0xESTBMallzT1Rrc016WXVOeXc1T1N3MU1FTTVPU3czTnk0eExEYzNMakVzT1Rrc05UQXNPVGw2SWk4K0Nna0pQQzluUGdvSkNUeG5QZ29KQ1FrOFkybHlZMnhsSUdOc1lYTnpQU0p6ZERFaUlHTjRQU0l6Tnk0MUlpQmplVDBpT0RFdU9TSWdjajBpTlNJdlBnb0pDVHd2Wno0S0NRazhjR0YwYUNCamJHRnpjejBpYzNReElpQmtQU0pOTkRndU5pdzVNUzQ1YkRFNExqZ3RORE11TTJNdE1pNDFMVEF1TVMwMUxUQXVOeTAzTGpJdE1rd3pNeTR5TERZNExqSnNNUzQwTFRFdU9Hd3lNQzB5TlM0eFl5MHhMalV0TWk0MExUSXVNeTAxTGpFdE1pNHpMVGN1T1V3NUxEVXlMaklLQ1FrSmJEUTNMall0TWprdU9Xd3dMREJqTUM0eExUQXVNU3d3TGpJdE1DNHlMREF1TWkwd0xqSmpOaTR4TFRZdU1Td3hOUzQ1TFRZdU1Td3lNaXd3YkRBdU1Td3dMakZqTml3MkxqRXNOaXd4TlM0NUxUQXVNU3d5TVM0NVl5MHdMakVzTUM0eExUQXVNaXd3TGpJdE1DNHlMREF1TW13d0xEQUtDUWtKVERRNExqWXNPVEV1T1hvaUx6NEtDUWs4WnlCamJHRnpjejBpYzNReUlqNEtDUWtKUEdOcGNtTnNaU0JqYkdGemN6MGljM1F4SWlCamVEMGlOVEF1TXlJZ1kzazlJakUwTGpjaUlISTlJak11TVNJdlBnb0pDVHd2Wno0S0NRazhaeUJqYkdGemN6MGljM1F6SWo0S0NRa0pQR05wY21Oc1pTQmpiR0Z6Y3owaWMzUXhJaUJqZUQwaU1qY3VOeUlnWTNrOUlqVTRJaUJ5UFNJeExqY2lMejRLQ1FrOEwyYytDZ2tKUEdjK0Nna0pDVHhqYVhKamJHVWdZMnhoYzNNOUluTjBNU0lnWTNnOUlqYzNMalFpSUdONVBTSTJPUzR6SWlCeVBTSXhMamNpTHo0S0NRazhMMmMrQ2drSlBHYytDZ2tKQ1R4amFYSmpiR1VnWTJ4aGMzTTlJbk4wTVNJZ1kzZzlJakUyTGpNaUlHTjVQU0l6Tmk0MklpQnlQU0l4TGpjaUx6NEtDUWs4TDJjK0Nna0pQR2NnWTJ4aGMzTTlJbk4wTkNJK0Nna0pDVHhqYVhKamJHVWdZMnhoYzNNOUluTjBNU0lnWTNnOUlqWXpMamNpSUdONVBTSTROUzQ1SWlCeVBTSXlMaklpTHo0S0NRazhMMmMrQ2drSlBHYytDZ2tKQ1R4amFYSmpiR1VnWTJ4aGMzTTlJbk4wTVNJZ1kzZzlJakk1TGpRaUlHTjVQU0l4T1M0MklpQnlQU0kwTGpnaUx6NEtDUWs4TDJjK0Nna0pQR2NnWTJ4aGMzTTlJbk4wTXlJK0Nna0pDVHhqYVhKamJHVWdZMnhoYzNNOUluTjBNU0lnWTNnOUlqZzRJaUJqZVQwaU5UQWlJSEk5SWpRdU9DSXZQZ29KQ1R3dlp6NEtDVHd2Wno0S1BDOW5QZ284TDNOMlp6NEsiLCJtZWRpYXR5cGUiOiJpbWFnZS9zdmcreG1sIn1dLCJpbnN0YWxsIjp7InNwZWMiOnsiY2x1c3RlclBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIl0sInZlcmJzIjpbImdldCJdfSx7ImFwaUdyb3VwcyI6WyJhcGlyZWdpc3RyYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJhcGlzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGFlbW9uc2V0cyIsImRlcGxveW1lbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbInJlcGxpY2FzZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInRva2VucmV2aWV3cyJdLCJ2ZXJicyI6WyJjcmVhdGUiXX0seyJhcGlHcm91cHMiOlsiYXV0b3NjYWxpbmciXSwicmVzb3VyY2VzIjpbImhvcml6b250YWxwb2RhdXRvc2NhbGVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25zb2xlLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY29uc29sZXBsdWdpbnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJjb25maWdtYXBzIiwibmFtZXNwYWNlcyIsInNlcnZpY2VhY2NvdW50cyIsInNlcnZpY2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZW5kcG9pbnRzIiwic2VjcmV0cyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJub2RlcyIsInBvZHMiLCJzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiZmxvd3MubmV0b2JzZXJ2LmlvIl0sInJlc291cmNlcyI6WyJmbG93Y29sbGVjdG9ycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJmbG93cy5uZXRvYnNlcnYuaW8iXSwicmVzb3VyY2VzIjpbImZsb3djb2xsZWN0b3JzL2ZpbmFsaXplcnMiXSwidmVyYnMiOlsidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbImZsb3dzLm5ldG9ic2Vydi5pbyJdLCJyZXNvdXJjZXMiOlsiZmxvd2NvbGxlY3RvcnMvc3RhdHVzIl0sInZlcmJzIjpbImdldCIsInBhdGNoIiwidXBkYXRlIl19LHsiYXBpR3JvdXBzIjpbIm1vbml0b3JpbmcuY29yZW9zLmNvbSJdLCJyZXNvdXJjZXMiOlsicHJvbWV0aGV1c3J1bGVzIiwic2VydmljZW1vbml0b3JzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIm9wZXJhdG9yLm9wZW5zaGlmdC5pbyJdLCJyZXNvdXJjZXMiOlsiY29uc29sZXMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlYmluZGluZ3MiLCJyb2xlYmluZGluZ3MiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbInJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbImNsdXN0ZXJyb2xlcyIsInJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImxpc3QiLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJob3N0bmV0d29yayJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19LHsiYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XSwic2VydmljZUFjY291bnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciJ9XSwiZGVwbG95bWVudHMiOlt7ImxhYmVsIjp7ImFwcCI6Im5ldG9ic2Vydi1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1jb250cm9sbGVyLW1hbmFnZXIiLCJzcGVjIjp7InJlcGxpY2FzIjoxLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdHJhdGVneSI6e30sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7ImJ1bmRsZUNyZWF0ZWRBdCI6IjIwMjMtMDQtMTJUMTM6NDQ6MzcifSwibGFiZWxzIjp7ImFwcCI6Im5ldG9ic2Vydi1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInNwZWMiOnsiY29udGFpbmVycyI6W3siYXJncyI6WyItLWhlYWx0aC1wcm9iZS1iaW5kLWFkZHJlc3M9OjgwODEiLCItLW1ldHJpY3MtYmluZC1hZGRyZXNzPTEyNy4wLjAuMTo4MDgwIiwiLS1sZWFkZXItZWxlY3QiLCItLWVicGYtYWdlbnQtaW1hZ2U9JChSRUxBVEVEX0lNQUdFX0VCUEZfQUdFTlQpIiwiLS1mbG93bG9ncy1waXBlbGluZS1pbWFnZT0kKFJFTEFURURfSU1BR0VfRkxPV0xPR1NfUElQRUxJTkUpIiwiLS1jb25zb2xlLXBsdWdpbi1pbWFnZT0kKFJFTEFURURfSU1BR0VfQ09OU09MRV9QTFVHSU4pIiwiLS1kb3duc3RyZWFtLWRlcGxveW1lbnQ9JChET1dOU1RSRUFNX0RFUExPWU1FTlQpIl0sImNvbW1hbmQiOlsiL21hbmFnZXIiXSwiZW52IjpbeyJuYW1lIjoiUkVMQVRFRF9JTUFHRV9FQlBGX0FHRU5UIiwidmFsdWUiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1lYnBmLWFnZW50LXJoZWw5QHNoYTI1Njo0NDcwNGI5ODhhZmRkYTBjMDMyZTUyODZhYTgwZjEzYzJmOWM0ZjBhNjkyMzEwMzI4OWFkOTg1Y2IwNTU2ZDQ5In0seyJuYW1lIjoiUkVMQVRFRF9JTUFHRV9GTE9XTE9HU19QSVBFTElORSIsInZhbHVlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktZmxvd2xvZ3MtcGlwZWxpbmUtcmhlbDlAc2hhMjU2OjI3MzI5NjZmZTViYzI1MmMwYzllNmYwZWMwYzNmMDM3NjEzMjdmNWVmMDk1MzY5NTg0YjMyZWY1NGNmMzU1MTEifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX0NPTlNPTEVfUExVR0lOIiwidmFsdWUiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1jb25zb2xlLXBsdWdpbi1yaGVsOUBzaGEyNTY6ZTkwNDVhMzZlYjg3ZTI5YzAxMTM3YWYyZDMyYzJkNDU1MDA3NThlOWMyYjU2MmEwNThmMzMyMjMxMjI4MmQ2YiJ9LHsibmFtZSI6IkRPV05TVFJFQU1fREVQTE9ZTUVOVCIsInZhbHVlIjoidHJ1ZSJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1yaGVsOS1vcGVyYXRvckBzaGEyNTY6OTEwYWU4NTY5OTg1OTM4ODhjYWRkNGE0ZjA1NDUyYjgwMDU3OWU3Y2Q0MjU0YzczZTAzYTlkNDFhODc0NTE2NCIsImltYWdlUHVsbFBvbGljeSI6IkFsd2F5cyIsImxpdmVuZXNzUHJvYmUiOnsiaHR0cEdldCI6eyJwYXRoIjoiL2hlYWx0aHoiLCJwb3J0Ijo4MDgxfSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6MTUsInBlcmlvZFNlY29uZHMiOjIwfSwibmFtZSI6Im1hbmFnZXIiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6OTQ0MywibmFtZSI6IndlYmhvb2stc2VydmVyIiwicHJvdG9jb2wiOiJUQ1AifV0sInJlYWRpbmVzc1Byb2JlIjp7Imh0dHBHZXQiOnsicGF0aCI6Ii9yZWFkeXoiLCJwb3J0Ijo4MDgxfSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6NSwicGVyaW9kU2Vjb25kcyI6MTB9LCJyZXNvdXJjZXMiOnsibGltaXRzIjp7Im1lbW9yeSI6IjQwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiIxMDBNaSJ9fSwic2VjdXJpdHlDb250ZXh0Ijp7ImFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiI6ZmFsc2V9LCJ2b2x1bWVNb3VudHMiOlt7Im1vdW50UGF0aCI6Ii90bXAvazhzLXdlYmhvb2stc2VydmVyL3NlcnZpbmctY2VydHMiLCJuYW1lIjoiY2VydCIsInJlYWRPbmx5Ijp0cnVlfV19LHsiYXJncyI6WyItLXNlY3VyZS1saXN0ZW4tYWRkcmVzcz0wLjAuMC4wOjg0NDMiLCItLXVwc3RyZWFtPWh0dHA6Ly8xMjcuMC4wLjE6ODA4MC8iLCItLWxvZ3Rvc3RkZXJyPXRydWUiLCItLXY9MTAiLCItLXRscy1jZXJ0LWZpbGU9L2V0Yy90bHMvcHJpdmF0ZS90bHMuY3J0IiwiLS10bHMtcHJpdmF0ZS1rZXktZmlsZT0vZXRjL3Rscy9wcml2YXRlL3Rscy5rZXkiXSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2Uta3ViZS1yYmFjLXByb3h5QHNoYTI1NjpjOWI3YTUxZmNjZDQwOTQ1MWZlNWNhZTdiZDE1YWJjMDBlMTBjOWFjMWEyZTk3MjMyMTcyZDM5MTM0ZGI5MjU0IiwibmFtZSI6Imt1YmUtcmJhYy1wcm94eSIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4NDQzLCJuYW1lIjoiaHR0cHMiLCJwcm90b2NvbCI6IlRDUCJ9XSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiMTI4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiNW0iLCJtZW1vcnkiOiI2NE1pIn19LCJ2b2x1bWVNb3VudHMiOlt7Im1vdW50UGF0aCI6Ii9ldGMvdGxzL3ByaXZhdGUiLCJuYW1lIjoibWFuYWdlci1tZXRyaWMtdGxzIiwicmVhZE9ubHkiOnRydWV9XX1dLCJzZWN1cml0eUNvbnRleHQiOnsicnVuQXNOb25Sb290Ijp0cnVlfSwic2VydmljZUFjY291bnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciIsInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMCwidm9sdW1lcyI6W3sibmFtZSI6ImNlcnQiLCJzZWNyZXQiOnsiZGVmYXVsdE1vZGUiOjQyMCwic2VjcmV0TmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifX0seyJuYW1lIjoibWFuYWdlci1tZXRyaWMtdGxzIiwic2VjcmV0Ijp7ImRlZmF1bHRNb2RlIjo0MjAsInNlY3JldE5hbWUiOiJtYW5hZ2VyLW1ldHJpY3MtdGxzIn19XX19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsibmV0d29yayBvYnNlcnZhYmlsaXR5IiwiZWJwZiIsImZsb3cgdHJhY2luZyIsImZsb3dzIiwidG9wb2xvZ3kiLCJuZXR3b3JrIiwib2JzZXJ2YWJpbGl0eSJdLCJsaW5rcyI6W3sibmFtZSI6IlByb2plY3QgcGFnZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXRvYnNlcnYvbmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yIn0seyJuYW1lIjoiSXNzdWUgdHJhY2tlciIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXRvYnNlcnYvbmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yL2lzc3VlcyJ9LHsibmFtZSI6IkRpc2N1c3Npb24gYm9hcmQiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9kaXNjdXNzaW9ucyJ9XSwibWFpbnRhaW5lcnMiOlt7ImVtYWlsIjoianRha3ZvcmlAcmVkaGF0LmNvbSIsIm5hbWUiOiJKb2VsIFRha3ZvcmlhbiJ9LHsiZW1haWwiOiJqcGluc29ubkByZWRoYXQuY29tIiwibmFtZSI6Ikp1bGllbiBQaW5zb25uZWF1In0seyJlbWFpbCI6Im1tYWNpYXNsQHJlZGhhdC5jb20iLCJuYW1lIjoiTWFyaW8gTWFjaWFzIn0seyJlbWFpbCI6Im9jYXphZGVAcmVkaGF0LmNvbSIsIm5hbWUiOiJPbGl2aWVyIENhemFkZSJ9XSwibWF0dXJpdHkiOiJzdGFibGUiLCJtaW5LdWJlVmVyc2lvbiI6IjEuMjMuMCIsInByb3ZpZGVyIjp7Im5hbWUiOiJSZWQgSGF0IiwidXJsIjoiaHR0cHM6Ly93d3cucmVkaGF0LmNvbSJ9LCJyZWxhdGVkSW1hZ2VzIjpbeyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9uZXR3b3JrLW9ic2VydmFiaWxpdHkvbmV0d29yay1vYnNlcnZhYmlsaXR5LXJoZWw5LW9wZXJhdG9yQHNoYTI1Njo5MTBhZTg1Njk5ODU5Mzg4OGNhZGQ0YTRmMDU0NTJiODAwNTc5ZTdjZDQyNTRjNzNlMDNhOWQ0MWE4NzQ1MTY0IiwibmFtZSI6Im5ldHdvcmstb2JzZXJ2YWJpbGl0eS1yaGVsOS1vcGVyYXRvci05MTBhZTg1Njk5ODU5Mzg4OGNhZGQ0YTRmMDU0NTJiODAwNTc5ZTdjZDQyNTRjNzNlMDNhOWQ0MWE4NzQ1MTY0LWFubm90YXRpb24ifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktcmhlbDktb3BlcmF0b3JAc2hhMjU2OjkxMGFlODU2OTk4NTkzODg4Y2FkZDRhNGYwNTQ1MmI4MDA1NzllN2NkNDI1NGM3M2UwM2E5ZDQxYTg3NDUxNjQiLCJuYW1lIjoibWFuYWdlciJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2Uta3ViZS1yYmFjLXByb3h5QHNoYTI1NjpjOWI3YTUxZmNjZDQwOTQ1MWZlNWNhZTdiZDE1YWJjMDBlMTBjOWFjMWEyZTk3MjMyMTcyZDM5MTM0ZGI5MjU0IiwibmFtZSI6Imt1YmUtcmJhYy1wcm94eSJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1lYnBmLWFnZW50LXJoZWw5QHNoYTI1Njo0NDcwNGI5ODhhZmRkYTBjMDMyZTUyODZhYTgwZjEzYzJmOWM0ZjBhNjkyMzEwMzI4OWFkOTg1Y2IwNTU2ZDQ5IiwibmFtZSI6ImVicGZfYWdlbnQifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktZmxvd2xvZ3MtcGlwZWxpbmUtcmhlbDlAc2hhMjU2OjI3MzI5NjZmZTViYzI1MmMwYzllNmYwZWMwYzNmMDM3NjEzMjdmNWVmMDk1MzY5NTg0YjMyZWY1NGNmMzU1MTEiLCJuYW1lIjoiZmxvd2xvZ3NfcGlwZWxpbmUifSx7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktY29uc29sZS1wbHVnaW4tcmhlbDlAc2hhMjU2OmU5MDQ1YTM2ZWI4N2UyOWMwMTEzN2FmMmQzMmMyZDQ1NTAwNzU4ZTljMmI1NjJhMDU4ZjMzMjIzMTIyODJkNmIiLCJuYW1lIjoiY29uc29sZV9wbHVnaW4ifV0sInJlcGxhY2VzIjoibmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yLnYxLjEuMC0yMDIzMDIxMTAwNTAiLCJ2ZXJzaW9uIjoiMS4yLjAiLCJ3ZWJob29rZGVmaW5pdGlvbnMiOlt7ImFkbWlzc2lvblJldmlld1ZlcnNpb25zIjpbInYxYWxwaGExIiwidjFiZXRhMSJdLCJjb250YWluZXJQb3J0Ijo0NDMsImNvbnZlcnNpb25DUkRzIjpbImZsb3djb2xsZWN0b3JzLmZsb3dzLm5ldG9ic2Vydi5pbyJdLCJkZXBsb3ltZW50TmFtZSI6Im5ldG9ic2Vydi1jb250cm9sbGVyLW1hbmFnZXIiLCJnZW5lcmF0ZU5hbWUiOiJjZmxvd2NvbGxlY3RvcnMua2IuaW8iLCJzaWRlRWZmZWN0cyI6Ik5vbmUiLCJ0YXJnZXRQb3J0Ijo5NDQzLCJ0eXBlIjoiQ29udmVyc2lvbldlYmhvb2siLCJ3ZWJob29rUGF0aCI6Ii9jb252ZXJ0In0seyJhZG1pc3Npb25SZXZpZXdWZXJzaW9ucyI6WyJ2MSJdLCJjb250YWluZXJQb3J0Ijo0NDMsImRlcGxveW1lbnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciIsImZhaWx1cmVQb2xpY3kiOiJGYWlsIiwiZ2VuZXJhdGVOYW1lIjoiZmxvd2NvbGxlY3RvcmNvbnZlcnNpb253ZWJob29rLm5ldG9ic2Vydi5pbyIsInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsibmV0b2JzZXJ2LmlvIl0sImFwaVZlcnNpb25zIjpbInYxYmV0YTEiXSwib3BlcmF0aW9ucyI6WyJDUkVBVEUiLCJVUERBVEUiXSwicmVzb3VyY2VzIjpbImZsb3djb2xsZWN0b3JzIl19XSwic2lkZUVmZmVjdHMiOiJOb25lIiwidGFyZ2V0UG9ydCI6OTQ0MywidHlwZSI6IlZhbGlkYXRpbmdBZG1pc3Npb25XZWJob29rIiwid2ViaG9va1BhdGgiOiIvdmFsaWRhdGUtbmV0b2JzZXJ2LWlvLXYxYmV0YTEtZmxvd2NvbGxlY3RvciJ9XX19
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:e9045a36eb87e29c01137af2d32c2d45500758e9c2b562a058f3322312282d6b
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:44704b988afdda0c032e5286aa80f13c2f9c4f0a6923103289ad985cb0556d49
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:2732966fe5bc252c0c9e6f0ec0c3f03761327f5ef095369584b32ef54cf35511
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:9ba226d0207edd7c9173333647353d3a7a0b5bfc32feb60ca5749dd6dc190c28
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:910ae856998593888cadd4a4f05452b800579e7cd4254c73e03a9d41a8745164
    name: network-observability-rhel9-operator-910ae856998593888cadd4a4f05452b800579e7cd4254c73e03a9d41a8745164-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:910ae856998593888cadd4a4f05452b800579e7cd4254c73e03a9d41a8745164
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c9b7a51fccd409451fe5cae7bd15abc00e10c9ac1a2e97232172d39134db9254
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:b03f4e88ab1fed4744356a584d673fb2fdb15de7e1de7786bdd222b853690670
name: network-observability-operator.v1.3.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.3.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJDbHVzdGVyUm9sZSIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3MtcmVhZGVyIn0sInJ1bGVzIjpbeyJub25SZXNvdXJjZVVSTHMiOlsiL21ldHJpY3MiXSwidmVyYnMiOlsiZ2V0Il19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:880c0812a2cd4b7194f417e31fbdcee951ce76776fa06e33c5c9cd479a854daa
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:e31acc12d8690c339e13b5dd22d33e707701362bdd31086c9b4c0f48cad62cc3
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:7c7c42fff63e0599bb943a9e9617b43181360d5a5254b27f368010af275cf0c3
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:b03f4e88ab1fed4744356a584d673fb2fdb15de7e1de7786bdd222b853690670
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:fd943746840cba26996dabb47b1beb3445571fa43cb1b859fb073e4aa114b376
    name: network-observability-rhel9-operator-fd943746840cba26996dabb47b1beb3445571fa43cb1b859fb073e4aa114b376-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:fd943746840cba26996dabb47b1beb3445571fa43cb1b859fb073e4aa114b376
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:37b3c9b2eed351d9d1a39c99045bbc7993ccb819f67f7b390deaa34930f45946
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:25dfc5ecfc1614d67a9768b8cebb58367cac16c5e541646bb2dc13d75c705bdd
name: network-observability-operator.v1.4.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.4.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:9feb17ebd651d8e55b177d4c1fb82ee434d0617233dd3e21c8fc97071afa4369
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:5c4c118987448fd7e730cc94e28405d0a869b9a5f3e3ac005c2491b92541df1f
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:3f6d2e8f0cdec5b44c7ae153c67cd0b10f42cc2bc0139ac262fb23cfdfae47a5
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:25dfc5ecfc1614d67a9768b8cebb58367cac16c5e541646bb2dc13d75c705bdd
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:24afa1aa7757a3030af0d35e278041bf99700f388b691f32ece3c08f1311d944
    name: network-observability-rhel9-operator-24afa1aa7757a3030af0d35e278041bf99700f388b691f32ece3c08f1311d944-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:24afa1aa7757a3030af0d35e278041bf99700f388b691f32ece3c08f1311d944
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:fcb3b8ab93dfb5ef2b290e39ea5899dbb5e0c6d430370b8d281e59e74d94d749
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:6f998bb3b7d5311d8e74b25f8fcfe4ae65897270da3c0763ca2cb1d763135bc4
name: network-observability-operator.v1.4.1
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.4.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoib3BlcmF0b3JzLmNvcmVvcy5jb20vdjEiLCJraW5kIjoiQ2x1c3RlclNlcnZpY2VWZXJzaW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiYWxtLWV4YW1wbGVzIjoiW1xuICB7XG4gICAgXCJhcGlWZXJzaW9uXCI6IFwiZmxvd3MubmV0b2JzZXJ2LmlvL3YxYWxwaGExXCIsXG4gICAgXCJraW5kXCI6IFwiRmxvd0NvbGxlY3RvclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiY2x1c3RlclwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJhZ2VudFwiOiB7XG4gICAgICAgIFwiZWJwZlwiOiB7XG4gICAgICAgICAgXCJjYWNoZUFjdGl2ZVRpbWVvdXRcIjogXCI1c1wiLFxuICAgICAgICAgIFwiY2FjaGVNYXhGbG93c1wiOiAxMDAwMDAsXG4gICAgICAgICAgXCJleGNsdWRlSW50ZXJmYWNlc1wiOiBbXG4gICAgICAgICAgICBcImxvXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFwiaW1hZ2VQdWxsUG9saWN5XCI6IFwiSWZOb3RQcmVzZW50XCIsXG4gICAgICAgICAgXCJpbnRlcmZhY2VzXCI6IFtdLFxuICAgICAgICAgIFwia2Fma2FCYXRjaFNpemVcIjogMTA0ODU3NjAsXG4gICAgICAgICAgXCJsb2dMZXZlbFwiOiBcImluZm9cIixcbiAgICAgICAgICBcInJlc291cmNlc1wiOiB7XG4gICAgICAgICAgICBcImxpbWl0c1wiOiB7XG4gICAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiODAwTWlcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwicmVxdWVzdHNcIjoge1xuICAgICAgICAgICAgICBcImNwdVwiOiBcIjEwMG1cIixcbiAgICAgICAgICAgICAgXCJtZW1vcnlcIjogXCI1ME1pXCJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9LFxuICAgICAgICAgIFwic2FtcGxpbmdcIjogNTBcbiAgICAgICAgfSxcbiAgICAgICAgXCJ0eXBlXCI6IFwiRUJQRlwiXG4gICAgICB9LFxuICAgICAgXCJjb25zb2xlUGx1Z2luXCI6IHtcbiAgICAgICAgXCJhdXRvc2NhbGVyXCI6IHtcbiAgICAgICAgICBcIm1heFJlcGxpY2FzXCI6IDMsXG4gICAgICAgICAgXCJtZXRyaWNzXCI6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJyZXNvdXJjZVwiOiB7XG4gICAgICAgICAgICAgICAgXCJuYW1lXCI6IFwiY3B1XCIsXG4gICAgICAgICAgICAgICAgXCJ0YXJnZXRcIjoge1xuICAgICAgICAgICAgICAgICAgXCJhdmVyYWdlVXRpbGl6YXRpb25cIjogNTAsXG4gICAgICAgICAgICAgICAgICBcInR5cGVcIjogXCJVdGlsaXphdGlvblwiXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBcInR5cGVcIjogXCJSZXNvdXJjZVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgXSxcbiAgICAgICAgICBcIm1pblJlcGxpY2FzXCI6IDEsXG4gICAgICAgICAgXCJzdGF0dXNcIjogXCJESVNBQkxFRFwiXG4gICAgICAgIH0sXG4gICAgICAgIFwiaW1hZ2VQdWxsUG9saWN5XCI6IFwiSWZOb3RQcmVzZW50XCIsXG4gICAgICAgIFwibG9nTGV2ZWxcIjogXCJpbmZvXCIsXG4gICAgICAgIFwicG9ydFwiOiA5MDAxLFxuICAgICAgICBcInBvcnROYW1pbmdcIjoge1xuICAgICAgICAgIFwiZW5hYmxlXCI6IHRydWUsXG4gICAgICAgICAgXCJwb3J0TmFtZXNcIjoge1xuICAgICAgICAgICAgXCIzMTAwXCI6IFwibG9raVwiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInF1aWNrRmlsdGVyc1wiOiBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJkZWZhdWx0XCI6IHRydWUsXG4gICAgICAgICAgICBcImZpbHRlclwiOiB7XG4gICAgICAgICAgICAgIFwiZHN0X25hbWVzcGFjZSFcIjogXCJvcGVuc2hpZnQtLG5ldG9ic2VydlwiLFxuICAgICAgICAgICAgICBcInNyY19uYW1lc3BhY2UhXCI6IFwib3BlbnNoaWZ0LSxuZXRvYnNlcnZcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIkFwcGxpY2F0aW9uc1wiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBcImZpbHRlclwiOiB7XG4gICAgICAgICAgICAgIFwiZHN0X25hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC0sbmV0b2JzZXJ2XCIsXG4gICAgICAgICAgICAgIFwic3JjX25hbWVzcGFjZVwiOiBcIm9wZW5zaGlmdC0sbmV0b2JzZXJ2XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJJbmZyYXN0cnVjdHVyZVwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBcImRlZmF1bHRcIjogdHJ1ZSxcbiAgICAgICAgICAgIFwiZmlsdGVyXCI6IHtcbiAgICAgICAgICAgICAgXCJkc3Rfa2luZFwiOiBcIlBvZFwiLFxuICAgICAgICAgICAgICBcInNyY19raW5kXCI6IFwiUG9kXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJQb2RzIG5ldHdvcmtcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJmaWx0ZXJcIjoge1xuICAgICAgICAgICAgICBcImRzdF9raW5kXCI6IFwiU2VydmljZVwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiU2VydmljZXMgbmV0d29ya1wiXG4gICAgICAgICAgfVxuICAgICAgICBdLFxuICAgICAgICBcInJlZ2lzdGVyXCI6IHRydWVcbiAgICAgIH0sXG4gICAgICBcImRlcGxveW1lbnRNb2RlbFwiOiBcIkRJUkVDVFwiLFxuICAgICAgXCJleHBvcnRlcnNcIjogW10sXG4gICAgICBcImthZmthXCI6IHtcbiAgICAgICAgXCJhZGRyZXNzXCI6IFwia2Fma2EtY2x1c3Rlci1rYWZrYS1ib290c3RyYXAubmV0b2JzZXJ2XCIsXG4gICAgICAgIFwidGxzXCI6IHtcbiAgICAgICAgICBcImNhQ2VydFwiOiB7XG4gICAgICAgICAgICBcImNlcnRGaWxlXCI6IFwiY2EuY3J0XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJrYWZrYS1jbHVzdGVyLWNsdXN0ZXItY2EtY2VydFwiLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwic2VjcmV0XCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIFwiZW5hYmxlXCI6IGZhbHNlLFxuICAgICAgICAgIFwidXNlckNlcnRcIjoge1xuICAgICAgICAgICAgXCJjZXJ0RmlsZVwiOiBcInVzZXIuY3J0XCIsXG4gICAgICAgICAgICBcImNlcnRLZXlcIjogXCJ1c2VyLmtleVwiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiZmxwLWthZmthXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJzZWNyZXRcIlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJ0b3BpY1wiOiBcIm5ldHdvcmstZmxvd3NcIlxuICAgICAgfSxcbiAgICAgIFwibG9raVwiOiB7XG4gICAgICAgIFwiYmF0Y2hTaXplXCI6IDEwNDg1NzYwLFxuICAgICAgICBcImJhdGNoV2FpdFwiOiBcIjFzXCIsXG4gICAgICAgIFwibWF4QmFja29mZlwiOiBcIjVzXCIsXG4gICAgICAgIFwibWF4UmV0cmllc1wiOiAyLFxuICAgICAgICBcIm1pbkJhY2tvZmZcIjogXCIxc1wiLFxuICAgICAgICBcInRsc1wiOiB7XG4gICAgICAgICAgXCJjYUNlcnRcIjoge1xuICAgICAgICAgICAgXCJjZXJ0RmlsZVwiOiBcInNlcnZpY2UtY2EuY3J0XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJsb2tpLWdhdGV3YXktY2EtYnVuZGxlXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJjb25maWdtYXBcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJlbmFibGVcIjogZmFsc2UsXG4gICAgICAgICAgXCJpbnNlY3VyZVNraXBWZXJpZnlcIjogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgXCJ1cmxcIjogXCJodHRwOi8vbG9raS5uZXRvYnNlcnYuc3ZjOjMxMDAvXCJcbiAgICAgIH0sXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm5ldG9ic2VydlwiLFxuICAgICAgXCJwcm9jZXNzb3JcIjoge1xuICAgICAgICBcImRyb3BVbnVzZWRGaWVsZHNcIjogdHJ1ZSxcbiAgICAgICAgXCJpbWFnZVB1bGxQb2xpY3lcIjogXCJJZk5vdFByZXNlbnRcIixcbiAgICAgICAgXCJrYWZrYUNvbnN1bWVyQXV0b3NjYWxlclwiOiBudWxsLFxuICAgICAgICBcImthZmthQ29uc3VtZXJCYXRjaFNpemVcIjogMTA0ODU3NjAsXG4gICAgICAgIFwia2Fma2FDb25zdW1lclF1ZXVlQ2FwYWNpdHlcIjogMTAwMCxcbiAgICAgICAgXCJrYWZrYUNvbnN1bWVyUmVwbGljYXNcIjogMyxcbiAgICAgICAgXCJsb2dMZXZlbFwiOiBcImluZm9cIixcbiAgICAgICAgXCJtZXRyaWNzXCI6IHtcbiAgICAgICAgICBcImlnbm9yZVRhZ3NcIjogW1xuICAgICAgICAgICAgXCJlZ3Jlc3NcIixcbiAgICAgICAgICAgIFwicGFja2V0c1wiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInNlcnZlclwiOiB7XG4gICAgICAgICAgICBcInBvcnRcIjogOTEwMlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJwb3J0XCI6IDIwNTUsXG4gICAgICAgIFwicHJvZmlsZVBvcnRcIjogNjA2MCxcbiAgICAgICAgXCJyZXNvdXJjZXNcIjoge1xuICAgICAgICAgIFwibGltaXRzXCI6IHtcbiAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiODAwTWlcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJyZXF1ZXN0c1wiOiB7XG4gICAgICAgICAgICBcImNwdVwiOiBcIjEwMG1cIixcbiAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiMTAwTWlcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAge1xuICAgIFwiYXBpVmVyc2lvblwiOiBcImZsb3dzLm5ldG9ic2Vydi5pby92MWJldGExXCIsXG4gICAgXCJraW5kXCI6IFwiRmxvd0NvbGxlY3RvclwiLFxuICAgIFwibWV0YWRhdGFcIjoge1xuICAgICAgXCJuYW1lXCI6IFwiY2x1c3RlclwiXG4gICAgfSxcbiAgICBcInNwZWNcIjoge1xuICAgICAgXCJhZ2VudFwiOiB7XG4gICAgICAgIFwiZWJwZlwiOiB7XG4gICAgICAgICAgXCJjYWNoZUFjdGl2ZVRpbWVvdXRcIjogXCI1c1wiLFxuICAgICAgICAgIFwiY2FjaGVNYXhGbG93c1wiOiAxMDAwMDAsXG4gICAgICAgICAgXCJleGNsdWRlSW50ZXJmYWNlc1wiOiBbXG4gICAgICAgICAgICBcImxvXCJcbiAgICAgICAgICBdLFxuICAgICAgICAgIFwiaW1hZ2VQdWxsUG9saWN5XCI6IFwiSWZOb3RQcmVzZW50XCIsXG4gICAgICAgICAgXCJpbnRlcmZhY2VzXCI6IFtdLFxuICAgICAgICAgIFwia2Fma2FCYXRjaFNpemVcIjogMTA0ODU3NjAsXG4gICAgICAgICAgXCJsb2dMZXZlbFwiOiBcImluZm9cIixcbiAgICAgICAgICBcInByaXZpbGVnZWRcIjogZmFsc2UsXG4gICAgICAgICAgXCJyZXNvdXJjZXNcIjoge1xuICAgICAgICAgICAgXCJsaW1pdHNcIjoge1xuICAgICAgICAgICAgICBcIm1lbW9yeVwiOiBcIjgwME1pXCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcInJlcXVlc3RzXCI6IHtcbiAgICAgICAgICAgICAgXCJjcHVcIjogXCIxMDBtXCIsXG4gICAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiNTBNaVwiXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfSxcbiAgICAgICAgICBcInNhbXBsaW5nXCI6IDUwXG4gICAgICAgIH0sXG4gICAgICAgIFwidHlwZVwiOiBcIkVCUEZcIlxuICAgICAgfSxcbiAgICAgIFwiY29uc29sZVBsdWdpblwiOiB7XG4gICAgICAgIFwiYXV0b3NjYWxlclwiOiB7XG4gICAgICAgICAgXCJtYXhSZXBsaWNhc1wiOiAzLFxuICAgICAgICAgIFwibWV0cmljc1wiOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIFwicmVzb3VyY2VcIjoge1xuICAgICAgICAgICAgICAgIFwibmFtZVwiOiBcImNwdVwiLFxuICAgICAgICAgICAgICAgIFwidGFyZ2V0XCI6IHtcbiAgICAgICAgICAgICAgICAgIFwiYXZlcmFnZVV0aWxpemF0aW9uXCI6IDUwLFxuICAgICAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiVXRpbGl6YXRpb25cIlxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgXCJ0eXBlXCI6IFwiUmVzb3VyY2VcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF0sXG4gICAgICAgICAgXCJtaW5SZXBsaWNhc1wiOiAxLFxuICAgICAgICAgIFwic3RhdHVzXCI6IFwiRElTQUJMRURcIlxuICAgICAgICB9LFxuICAgICAgICBcImVuYWJsZVwiOiB0cnVlLFxuICAgICAgICBcImltYWdlUHVsbFBvbGljeVwiOiBcIklmTm90UHJlc2VudFwiLFxuICAgICAgICBcImxvZ0xldmVsXCI6IFwiaW5mb1wiLFxuICAgICAgICBcInBvcnRcIjogOTAwMSxcbiAgICAgICAgXCJwb3J0TmFtaW5nXCI6IHtcbiAgICAgICAgICBcImVuYWJsZVwiOiB0cnVlLFxuICAgICAgICAgIFwicG9ydE5hbWVzXCI6IHtcbiAgICAgICAgICAgIFwiMzEwMFwiOiBcImxva2lcIlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJxdWlja0ZpbHRlcnNcIjogW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIFwiZGVmYXVsdFwiOiB0cnVlLFxuICAgICAgICAgICAgXCJmaWx0ZXJcIjoge1xuICAgICAgICAgICAgICBcImRzdF9uYW1lc3BhY2UhXCI6IFwib3BlbnNoaWZ0LSxuZXRvYnNlcnZcIixcbiAgICAgICAgICAgICAgXCJzcmNfbmFtZXNwYWNlIVwiOiBcIm9wZW5zaGlmdC0sbmV0b2JzZXJ2XCJcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJBcHBsaWNhdGlvbnNcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJmaWx0ZXJcIjoge1xuICAgICAgICAgICAgICBcImRzdF9uYW1lc3BhY2VcIjogXCJvcGVuc2hpZnQtLG5ldG9ic2VydlwiLFxuICAgICAgICAgICAgICBcInNyY19uYW1lc3BhY2VcIjogXCJvcGVuc2hpZnQtLG5ldG9ic2VydlwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiSW5mcmFzdHJ1Y3R1cmVcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgXCJkZWZhdWx0XCI6IHRydWUsXG4gICAgICAgICAgICBcImZpbHRlclwiOiB7XG4gICAgICAgICAgICAgIFwiZHN0X2tpbmRcIjogXCJQb2RcIixcbiAgICAgICAgICAgICAgXCJzcmNfa2luZFwiOiBcIlBvZFwiXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwiUG9kcyBuZXR3b3JrXCJcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIFwiZmlsdGVyXCI6IHtcbiAgICAgICAgICAgICAgXCJkc3Rfa2luZFwiOiBcIlNlcnZpY2VcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwibmFtZVwiOiBcIlNlcnZpY2VzIG5ldHdvcmtcIlxuICAgICAgICAgIH1cbiAgICAgICAgXSxcbiAgICAgICAgXCJyZWdpc3RlclwiOiB0cnVlXG4gICAgICB9LFxuICAgICAgXCJkZXBsb3ltZW50TW9kZWxcIjogXCJESVJFQ1RcIixcbiAgICAgIFwiZXhwb3J0ZXJzXCI6IFtdLFxuICAgICAgXCJrYWZrYVwiOiB7XG4gICAgICAgIFwiYWRkcmVzc1wiOiBcImthZmthLWNsdXN0ZXIta2Fma2EtYm9vdHN0cmFwLm5ldG9ic2VydlwiLFxuICAgICAgICBcInRsc1wiOiB7XG4gICAgICAgICAgXCJjYUNlcnRcIjoge1xuICAgICAgICAgICAgXCJjZXJ0RmlsZVwiOiBcImNhLmNydFwiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwia2Fma2EtY2x1c3Rlci1jbHVzdGVyLWNhLWNlcnRcIixcbiAgICAgICAgICAgIFwidHlwZVwiOiBcInNlY3JldFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImVuYWJsZVwiOiBmYWxzZSxcbiAgICAgICAgICBcInVzZXJDZXJ0XCI6IHtcbiAgICAgICAgICAgIFwiY2VydEZpbGVcIjogXCJ1c2VyLmNydFwiLFxuICAgICAgICAgICAgXCJjZXJ0S2V5XCI6IFwidXNlci5rZXlcIixcbiAgICAgICAgICAgIFwibmFtZVwiOiBcImZscC1rYWZrYVwiLFxuICAgICAgICAgICAgXCJ0eXBlXCI6IFwic2VjcmV0XCJcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIFwidG9waWNcIjogXCJuZXR3b3JrLWZsb3dzXCJcbiAgICAgIH0sXG4gICAgICBcImxva2lcIjoge1xuICAgICAgICBcImJhdGNoU2l6ZVwiOiAxMDQ4NTc2MCxcbiAgICAgICAgXCJiYXRjaFdhaXRcIjogXCIxc1wiLFxuICAgICAgICBcImVuYWJsZVwiOiB0cnVlLFxuICAgICAgICBcIm1heEJhY2tvZmZcIjogXCI1c1wiLFxuICAgICAgICBcIm1heFJldHJpZXNcIjogMixcbiAgICAgICAgXCJtaW5CYWNrb2ZmXCI6IFwiMXNcIixcbiAgICAgICAgXCJzdGF0dXNUbHNcIjoge1xuICAgICAgICAgIFwiY2FDZXJ0XCI6IHtcbiAgICAgICAgICAgIFwiY2VydEZpbGVcIjogXCJzZXJ2aWNlLWNhLmNydFwiLFxuICAgICAgICAgICAgXCJuYW1lXCI6IFwibG9raS1jYS1idW5kbGVcIixcbiAgICAgICAgICAgIFwidHlwZVwiOiBcImNvbmZpZ21hcFwiXG4gICAgICAgICAgfSxcbiAgICAgICAgICBcImVuYWJsZVwiOiBmYWxzZSxcbiAgICAgICAgICBcImluc2VjdXJlU2tpcFZlcmlmeVwiOiBmYWxzZSxcbiAgICAgICAgICBcInVzZXJDZXJ0XCI6IHtcbiAgICAgICAgICAgIFwiY2VydEZpbGVcIjogXCJ0bHMuY3J0XCIsXG4gICAgICAgICAgICBcImNlcnRLZXlcIjogXCJ0bHMua2V5XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJsb2tpLXF1ZXJ5LWZyb250ZW5kLWh0dHBcIixcbiAgICAgICAgICAgIFwidHlwZVwiOiBcInNlY3JldFwiXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBcInRsc1wiOiB7XG4gICAgICAgICAgXCJjYUNlcnRcIjoge1xuICAgICAgICAgICAgXCJjZXJ0RmlsZVwiOiBcInNlcnZpY2UtY2EuY3J0XCIsXG4gICAgICAgICAgICBcIm5hbWVcIjogXCJsb2tpLWdhdGV3YXktY2EtYnVuZGxlXCIsXG4gICAgICAgICAgICBcInR5cGVcIjogXCJjb25maWdtYXBcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJlbmFibGVcIjogZmFsc2UsXG4gICAgICAgICAgXCJpbnNlY3VyZVNraXBWZXJpZnlcIjogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgXCJ1cmxcIjogXCJodHRwOi8vbG9raS5uZXRvYnNlcnYuc3ZjOjMxMDAvXCJcbiAgICAgIH0sXG4gICAgICBcIm5hbWVzcGFjZVwiOiBcIm5ldG9ic2VydlwiLFxuICAgICAgXCJwcm9jZXNzb3JcIjoge1xuICAgICAgICBcImNvbnZlcnNhdGlvbkVuZFRpbWVvdXRcIjogXCIxMHNcIixcbiAgICAgICAgXCJjb252ZXJzYXRpb25IZWFydGJlYXRJbnRlcnZhbFwiOiBcIjMwc1wiLFxuICAgICAgICBcImNvbnZlcnNhdGlvblRlcm1pbmF0aW5nVGltZW91dFwiOiBcIjVzXCIsXG4gICAgICAgIFwiZHJvcFVudXNlZEZpZWxkc1wiOiB0cnVlLFxuICAgICAgICBcImltYWdlUHVsbFBvbGljeVwiOiBcIklmTm90UHJlc2VudFwiLFxuICAgICAgICBcImthZmthQ29uc3VtZXJBdXRvc2NhbGVyXCI6IG51bGwsXG4gICAgICAgIFwia2Fma2FDb25zdW1lckJhdGNoU2l6ZVwiOiAxMDQ4NTc2MCxcbiAgICAgICAgXCJrYWZrYUNvbnN1bWVyUXVldWVDYXBhY2l0eVwiOiAxMDAwLFxuICAgICAgICBcImthZmthQ29uc3VtZXJSZXBsaWNhc1wiOiAzLFxuICAgICAgICBcImxvZ0xldmVsXCI6IFwiaW5mb1wiLFxuICAgICAgICBcImxvZ1R5cGVzXCI6IFwiRkxPV1NcIixcbiAgICAgICAgXCJtZXRyaWNzXCI6IHtcbiAgICAgICAgICBcImRpc2FibGVBbGVydHNcIjogW10sXG4gICAgICAgICAgXCJpZ25vcmVUYWdzXCI6IFtcbiAgICAgICAgICAgIFwiZWdyZXNzXCIsXG4gICAgICAgICAgICBcInBhY2tldHNcIixcbiAgICAgICAgICAgIFwibm9kZXMtZmxvd3NcIixcbiAgICAgICAgICAgIFwibmFtZXNwYWNlcy1mbG93c1wiLFxuICAgICAgICAgICAgXCJ3b3JrbG9hZHMtZmxvd3NcIixcbiAgICAgICAgICAgIFwibmFtZXNwYWNlc1wiXG4gICAgICAgICAgXSxcbiAgICAgICAgICBcInNlcnZlclwiOiB7XG4gICAgICAgICAgICBcInBvcnRcIjogOTEwMlxuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgXCJwb3J0XCI6IDIwNTUsXG4gICAgICAgIFwicHJvZmlsZVBvcnRcIjogNjA2MCxcbiAgICAgICAgXCJyZXNvdXJjZXNcIjoge1xuICAgICAgICAgIFwibGltaXRzXCI6IHtcbiAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiODAwTWlcIlxuICAgICAgICAgIH0sXG4gICAgICAgICAgXCJyZXF1ZXN0c1wiOiB7XG4gICAgICAgICAgICBcImNwdVwiOiBcIjEwMG1cIixcbiAgICAgICAgICAgIFwibWVtb3J5XCI6IFwiMTAwTWlcIlxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxuXSIsImNhcGFiaWxpdGllcyI6IlNlYW1sZXNzIFVwZ3JhZGVzIiwiY2F0ZWdvcmllcyI6Ik1vbml0b3JpbmciLCJjb25zb2xlLm9wZW5zaGlmdC5pby9wbHVnaW5zIjoiW1wibmV0b2JzZXJ2LXBsdWdpblwiXSIsImNvbnRhaW5lckltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktcmhlbDktb3BlcmF0b3JAc2hhMjU2OmE4Mjg4YzQxOGQ4ODgxZjI0NTU1NjM0NTc2NTZlY2Y0ZjcyMDU0NTRmMjVmNDEzZjVhNDUwYzdkMzRmNThlMGYiLCJjcmVhdGVkQXQiOiIyMDIzLTEwLTE5VDExOjUwOjE4IiwiZGVzY3JpcHRpb24iOiJOZXR3b3JrIGZsb3dzIGNvbGxlY3RvciBhbmQgbW9uaXRvcmluZyBzb2x1dGlvbiIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2NsdXN0ZXItbW9uaXRvcmluZyI6InRydWUiLCJvcGVyYXRvcmZyYW1ld29yay5pby9zdWdnZXN0ZWQtbmFtZXNwYWNlIjoib3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvciIsIm9wZXJhdG9ycy5vcGVuc2hpZnQuaW8vdmFsaWQtc3Vic2NyaXB0aW9uIjoiW1wiT3BlblNoaWZ0IEt1YmVybmV0ZXMgRW5naW5lXCIsIFwiT3BlblNoaWZ0IENvbnRhaW5lciBQbGF0Zm9ybVwiLCBcIk9wZW5TaGlmdCBQbGF0Zm9ybSBQbHVzXCJdIiwib3BlcmF0b3JzLm9wZXJhdG9yZnJhbWV3b3JrLmlvL2J1aWxkZXIiOiJvcGVyYXRvci1zZGstdjEuMjUuMyIsIm9wZXJhdG9ycy5vcGVyYXRvcmZyYW1ld29yay5pby9wcm9qZWN0X2xheW91dCI6ImdvLmt1YmVidWlsZGVyLmlvL3YzIiwicmVwb3NpdG9yeSI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXRvYnNlcnYvbmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yIn0sImxhYmVscyI6eyJvcGVyYXRvcmZyYW1ld29yay5pby9hcmNoLmFtZDY0Ijoic3VwcG9ydGVkIiwib3BlcmF0b3JmcmFtZXdvcmsuaW8vYXJjaC5hcm02NCI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2gucHBjNjRsZSI6InN1cHBvcnRlZCIsIm9wZXJhdG9yZnJhbWV3b3JrLmlvL2FyY2guczM5MHgiOiJzdXBwb3J0ZWQiLCJvcGVyYXRvcmZyYW1ld29yay5pby9vcy5saW51eCI6InN1cHBvcnRlZCJ9LCJuYW1lIjoibmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yLnYxLjQuMSIsIm5hbWVzcGFjZSI6InBsYWNlaG9sZGVyIn0sInNwZWMiOnsiYXBpc2VydmljZWRlZmluaXRpb25zIjp7fSwiY3VzdG9tcmVzb3VyY2VkZWZpbml0aW9ucyI6eyJvd25lZCI6W3siZGVzY3JpcHRpb24iOiJGbG93Q29sbGVjdG9yIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBmbG93Y29sbGVjdG9ycyBBUEksIHdoaWNoIHBpbG90cyBhbmQgY29uZmlndXJlcyBuZXRmbG93IGNvbGxlY3Rpb24uIiwiZGlzcGxheU5hbWUiOiJGbG93IENvbGxlY3RvciIsImtpbmQiOiJGbG93Q29sbGVjdG9yIiwibmFtZSI6ImZsb3djb2xsZWN0b3JzLmZsb3dzLm5ldG9ic2Vydi5pbyIsInZlcnNpb24iOiJ2MWFscGhhMSJ9LHsiZGVzY3JpcHRpb24iOiJgRmxvd0NvbGxlY3RvcmAgaXMgdGhlIHNjaGVtYSBmb3IgdGhlIG5ldHdvcmsgZmxvd3MgY29sbGVjdGlvbiBBUEksIHdoaWNoIHBpbG90cyBhbmQgY29uZmlndXJlcyB0aGUgdW5kZXJseWluZyBkZXBsb3ltZW50cy4iLCJkaXNwbGF5TmFtZSI6IkZsb3cgQ29sbGVjdG9yIiwia2luZCI6IkZsb3dDb2xsZWN0b3IiLCJuYW1lIjoiZmxvd2NvbGxlY3RvcnMuZmxvd3MubmV0b2JzZXJ2LmlvIiwidmVyc2lvbiI6InYxYmV0YTEifV19LCJkZXNjcmlwdGlvbiI6Ik5ldHdvcmsgT2JzZXJ2YWJpbGl0eSBpcyBhbiBPcGVuU2hpZnQgb3BlcmF0b3IgdGhhdCBkZXBsb3lzIGEgbW9uaXRvcmluZyBwaXBlbGluZSB0byBjb2xsZWN0IGFuZCBlbnJpY2ggbmV0d29yayBmbG93cyB0aGF0IGFyZSBwcm9kdWNlZCBieSB0aGUgTmV0d29yayBPYnNlcnZhYmlsaXR5IGVCUEYgYWdlbnQuXG5cblRoZSBvcGVyYXRvciBwcm92aWRlcyBkYXNoYm9hcmRzLCBtZXRyaWNzLCBhbmQga2VlcHMgZmxvd3MgYWNjZXNzaWJsZSBpbiBhIHF1ZXJ5YWJsZSBsb2cgc3RvcmUsIEdyYWZhbmEgTG9raS4gV2hlbiBhIGBGbG93Q29sbGVjdG9yYCBpbnN0YW5jZSBpcyBjcmVhdGVkLCBuZXcgdmlld3MgYXJlIGF2YWlsYWJsZSBpbiB0aGUgQ29uc29sZS5cblxuIyMgRGVwZW5kZW5jaWVzXG5cbiMjIyBMb2tpXG5cbltMb2tpXShodHRwczovL2dyYWZhbmEuY29tL29zcy9sb2tpLyksIGZyb20gR3JhZmFuYUxhYnMsIGlzIHRoZSBiYWNrZW5kIHRoYXQgaXMgdXNlZCB0byBzdG9yZSBhbGwgY29sbGVjdGVkIGZsb3dzLiBUaGUgTmV0T2JzZXJ2IE9wZXJhdG9yIGRvZXMgbm90IGluc3RhbGwgTG9raSBkaXJlY3RseSwgaG93ZXZlciB3ZSBwcm92aWRlIHNvbWUgZ3VpZGFuY2UgdG8gaGVscCB5b3UgdGhlcmUuXG5cbi0gRm9yIGEgcHJvZHVjdGlvbiBvciBwcm9kdWN0aW9uLWxpa2UgZW52aXJvbm1lbnQgdXNhZ2UsIHJlZmVyIHRvIFt0aGUgb3BlcmF0b3IgZG9jdW1lbnRhdGlvbl0oaHR0cHM6Ly9kb2NzLm9wZW5zaGlmdC5jb20vY29udGFpbmVyLXBsYXRmb3JtL2xhdGVzdC9uZXR3b3JraW5nL25ldHdvcmtfb2JzZXJ2YWJpbGl0eS9pbnN0YWxsaW5nLW9wZXJhdG9ycy5odG1sKS5cblxuLSBGb3IgYSBxdWljayB0cnkgdGhhdCBpcyBub3Qgc3VpdGFibGUgZm9yIHByb2R1Y3Rpb24gYW5kIG5vdCBzY2FsYWJsZSAoaXQgZGVwbG95cyBhIHNpbmdsZSBwb2QsIGNvbmZpZ3VyZXMgYSAxR0Igc3RvcmFnZSBQVkMsIHdpdGggMjQgaG91cnMgb2YgcmV0ZW50aW9uKSwgeW91IGNhbiBzaW1wbHkgcnVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZHM6XG5cbmBgYFxub2MgY3JlYXRlIG5hbWVzcGFjZSBuZXRvYnNlcnZcbm9jIGFwcGx5IC1mIFx1MDAzYyhjdXJsIC1MIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9uZXRvYnNlcnYvZG9jdW1lbnRzLzI1MmJiNjI0Y2YwNDI1YTFiNjZmNTljZTY4ZmI5MzlmMjQ2ZWY3N2IvZXhhbXBsZXMvemVyby1jbGljay1sb2tpLzEtc3RvcmFnZS55YW1sKSAtbiBuZXRvYnNlcnZcbm9jIGFwcGx5IC1mIFx1MDAzYyhjdXJsIC1MIGh0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9uZXRvYnNlcnYvZG9jdW1lbnRzLzI1MmJiNjI0Y2YwNDI1YTFiNjZmNTljZTY4ZmI5MzlmMjQ2ZWY3N2IvZXhhbXBsZXMvemVyby1jbGljay1sb2tpLzItbG9raS55YW1sKSAtbiBuZXRvYnNlcnZcbmBgYFxuXG4jIyMgS2Fma2FcblxuW0FwYWNoZSBLYWZrYV0oaHR0cHM6Ly9rYWZrYS5hcGFjaGUub3JnLykgY2FuIG9wdGlvbmFsbHkgYmUgdXNlZCBmb3IgYSBtb3JlIHJlc2lsaWVudCBhbmQgc2NhbGFibGUgYXJjaGl0ZWN0dXJlLiBZb3UgY2FuIHVzZSBmb3IgaW5zdGFuY2UgW1N0cmltemldKGh0dHBzOi8vc3RyaW16aS5pby8pLCBhbiBvcGVyYXRvci1iYXNlZCBkaXN0cmlidXRpb24gb2YgS2Fma2EgZm9yIEt1YmVybmV0ZXMgYW5kIE9wZW5TaGlmdC5cblxuIyMjIEdyYWZhbmFcblxuW0dyYWZhbmFdKGh0dHBzOi8vZ3JhZmFuYS5jb20vb3NzL2dyYWZhbmEvKSBjYW4gb3B0aW9uYWxseSBiZSBpbnN0YWxsZWQgZm9yIGN1c3RvbSBkYXNoYm9hcmRzIGFuZCBxdWVyeSBjYXBhYmlsaXRpZXMuXG5cbiMjIENvbmZpZ3VyYXRpb25cblxuVGhlIGBGbG93Q29sbGVjdG9yYCByZXNvdXJjZSBpcyB1c2VkIHRvIGNvbmZpZ3VyZSB0aGUgb3BlcmF0b3IgYW5kIGl0cyBtYW5hZ2VkIGNvbXBvbmVudHMuIEEgY29tcHJlaGVuc2l2ZSBkb2N1bWVudGF0aW9uIGlzIFthdmFpbGFibGUgaGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IvYmxvYi8xLjAuMy9kb2NzL0Zsb3dDb2xsZWN0b3IubWQpLCBhbmQgYSBmdWxsIHNhbXBsZSBmaWxlIFt0aGVyZV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IvYmxvYi8xLjAuMy9jb25maWcvc2FtcGxlcy9mbG93c192MWJldGExX2Zsb3djb2xsZWN0b3IueWFtbCkuXG5cblRvIGVkaXQgY29uZmlndXJhdGlvbiBpbiBjbHVzdGVyLCBydW46XG5cbmBgYGJhc2hcbm9jIGVkaXQgZmxvd2NvbGxlY3RvciBjbHVzdGVyXG5gYGBcblxuQXMgaXQgb3BlcmF0ZXMgY2x1c3Rlci13aWRlLCBvbmx5IGEgc2luZ2xlIGBGbG93Q29sbGVjdG9yYCBpcyBhbGxvd2VkLCBhbmQgaXQgaGFzIHRvIGJlIG5hbWVkIGBjbHVzdGVyYC5cblxuQSBjb3VwbGUgb2Ygc2V0dGluZ3MgZGVzZXJ2ZSBzcGVjaWFsIGF0dGVudGlvbjpcblxuLSBTYW1wbGluZyAoYHNwZWMuYWdlbnQuZWJwZi5zYW1wbGluZ2ApOiBhIHZhbHVlIG9mIGAxMDBgIG1lYW5zOiBvbmUgZmxvdyBldmVyeSAxMDAgaXMgc2FtcGxlZC4gYDFgIG1lYW5zIGFsbCBmbG93cyBhcmUgc2FtcGxlZC4gVGhlIGxvd2VyIGl0IGlzLCB0aGUgbW9yZSBmbG93cyB5b3UgZ2V0LCBhbmQgdGhlIG1vcmUgYWNjdXJhdGUgYXJlIGRlcml2ZWQgbWV0cmljcywgYnV0IHRoZSBoaWdoZXIgYW1vdW50IG9mIHJlc291cmNlcyBhcmUgY29uc3VtZWQuIEJ5IGRlZmF1bHQsIHNhbXBsaW5nIGlzIHNldCB0byA1MCAoaWUuIDE6NTApLiBOb3RlIHRoYXQgbW9yZSBzYW1wbGVkIGZsb3dzIGFsc28gbWVhbnMgbW9yZSBzdG9yYWdlIG5lZWRlZC4gV2UgcmVjb21tZW5kIHRvIHN0YXJ0IHdpdGggZGVmYXVsdCB2YWx1ZXMgYW5kIHJlZmluZSBlbXBpcmljYWxseSwgdG8gZmlndXJlIG91dCB3aGljaCBzZXR0aW5nIHlvdXIgY2x1c3RlciBjYW4gbWFuYWdlLlxuXG4tIExva2kgKGBzcGVjLmxva2lgKTogY29uZmlndXJlIGhlcmUgaG93IHRvIHJlYWNoIExva2kuIFRoZSBkZWZhdWx0IHZhbHVlcyBtYXRjaCB0aGUgTG9raSBxdWljayBpbnN0YWxsIHBhdGhzIG1lbnRpb25lZCBhYm92ZSwgYnV0IHlvdSBtYXkgaGF2ZSB0byBjb25maWd1cmUgZGlmZmVyZW50bHkgaWYgeW91IHVzZWQgYW5vdGhlciBpbnN0YWxsYXRpb24gbWV0aG9kLlxuXG4tIFF1aWNrIGZpbHRlcnMgKGBzcGVjLmNvbnNvbGVQbHVnaW4ucXVpY2tGaWx0ZXJzYCk6IGNvbmZpZ3VyZSBwcmVzZXQgZmlsdGVycyB0byBiZSBkaXNwbGF5ZWQgaW4gdGhlIENvbnNvbGUgcGx1Z2luLiBUaGV5IG9mZmVyIGEgd2F5IHRvIHF1aWNrbHkgc3dpdGNoIGZyb20gZmlsdGVycyB0byBvdGhlcnMsIHN1Y2ggYXMgc2hvd2luZyAvIGhpZGluZyBwb2RzIG5ldHdvcmssIG9yIGluZnJhc3RydWN0dXJlIG5ldHdvcmssIG9yIGFwcGxpY2F0aW9uIG5ldHdvcmssIGV0Yy4gVGhleSBjYW4gYmUgdHVuZWQgdG8gcmVmbGVjdCB0aGUgZGlmZmVyZW50IHdvcmtsb2FkcyBydW5uaW5nIG9uIHlvdXIgY2x1c3Rlci4gRm9yIGEgbGlzdCBvZiBhdmFpbGFibGUgZmlsdGVycywgW2NoZWNrIHRoaXMgcGFnZV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IvYmxvYi8xLjAuMy9kb2NzL1F1aWNrRmlsdGVycy5tZCkuXG5cbi0gS2Fma2EgKGBzcGVjLmRlcGxveW1lbnRNb2RlbDogS0FGS0FgIGFuZCBgc3BlYy5rYWZrYWApOiB3aGVuIGVuYWJsZWQsIGludGVncmF0ZXMgdGhlIGZsb3cgY29sbGVjdGlvbiBwaXBlbGluZSB3aXRoIEthZmthLCBieSBzcGxpdHRpbmcgaW5nZXN0aW9uIGZyb20gdHJhbnNmb3JtYXRpb24gKGt1YmUgZW5yaWNobWVudCwgZGVyaXZlZCBtZXRyaWNzLCAuLi4pLiBLYWZrYSBjYW4gcHJvdmlkZSBiZXR0ZXIgc2NhbGFiaWxpdHksIHJlc2lsaWVuY3kgYW5kIGhpZ2ggYXZhaWxhYmlsaXR5IChbdmlldyBtb3JlIGRldGFpbHNdKGh0dHBzOi8vd3d3LnJlZGhhdC5jb20vZW4vdG9waWNzL2ludGVncmF0aW9uL3doYXQtaXMtYXBhY2hlLWthZmthKSkuIEFzc3VtZXMgS2Fma2EgaXMgYWxyZWFkeSBkZXBsb3llZCBhbmQgYSB0b3BpYyBpcyBjcmVhdGVkLlxuXG4tIEV4cG9ydGVycyAoYHNwZWMuZXhwb3J0ZXJzYCkgYW4gb3B0aW9uYWwgbGlzdCBvZiBleHBvcnRlcnMgdG8gd2hpY2ggdG8gc2VuZCBlbnJpY2hlZCBmbG93cy4gS0FGS0EgYW5kIElQRklYIGV4cG9ydGVycyBhcmUgc3VwcG9ydGVkLiBUaGlzIGFsbG93cyB5b3UgdG8gZGVmaW5lIGFueSBjdXN0b20gc3RvcmFnZSBvciBwcm9jZXNzaW5nIHRoYXQgY2FuIHJlYWQgZnJvbSBLYWZrYSBvciB1c2UgdGhlIElQRklYIHN0YW5kYXJkLlxuXG4jIyBGdXJ0aGVyIHJlYWRpbmdcblxuUGxlYXNlIHJlZmVyIHRvIHRoZSBkb2N1bWVudGF0aW9uIG9uIEdpdEh1YiBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cblxuVGhpcyBkb2N1bWVudGF0aW9uIGluY2x1ZGVzOlxuXG4tIEFuIFtvdmVydmlld10oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3Ijb3BlbnNoaWZ0LWNvbnNvbGUpIG9mIHRoZSBmZWF0dXJlcywgd2l0aCBzY3JlZW5zaG90c1xuLSBBIFtwZXJmb3JtYW5jZV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IjcGVyZm9ybWFuY2UtZmluZS10dW5pbmcpIHNlY3Rpb24sIGZvciBmaW5lLXR1bmluZ1xuLSBBIFtzZWN1cml0eV0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3Ijc2VjdXJpbmctZGF0YS1hbmQtY29tbXVuaWNhdGlvbnMpIHNlY3Rpb25cbi0gQW4gW0YuQS5RLl0oaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IjZmFxLS10cm91Ymxlc2hvb3RpbmcpIHNlY3Rpb25cbiIsImRpc3BsYXlOYW1lIjoiTmV0d29yayBPYnNlcnZhYmlsaXR5IiwiaWNvbiI6W3siYmFzZTY0ZGF0YSI6IlBEOTRiV3dnZG1WeWMybHZiajBpTVM0d0lpQmxibU52WkdsdVp6MGlkWFJtTFRnaVB6NEtQQ0V0TFNCSFpXNWxjbUYwYjNJNklFRmtiMkpsSUVsc2JIVnpkSEpoZEc5eUlESTJMakF1TWl3Z1UxWkhJRVY0Y0c5eWRDQlFiSFZuTFVsdUlDNGdVMVpISUZabGNuTnBiMjQ2SURZdU1EQWdRblZwYkdRZ01Da2dJQzB0UGdvOGMzWm5JSFpsY25OcGIyNDlJakV1TVNJZ2FXUTlJa3hoZVdWeVh6RWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SWdlRzFzYm5NNmVHeHBibXM5SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpFNU9Ua3ZlR3hwYm1zaUlIZzlJakJ3ZUNJZ2VUMGlNSEI0SWdvSklIWnBaWGRDYjNnOUlqQWdNQ0F4TURBZ01UQXdJaUJ6ZEhsc1pUMGlaVzVoWW14bExXSmhZMnRuY205MWJtUTZibVYzSURBZ01DQXhNREFnTVRBd095SWdlRzFzT25Od1lXTmxQU0p3Y21WelpYSjJaU0krQ2p4emRIbHNaU0IwZVhCbFBTSjBaWGgwTDJOemN5SStDZ2t1YzNRd2UyWnBiR3c2ZFhKc0tDTlRWa2RKUkY4eFh5azdmUW9KTG5OME1YdG1hV3hzT2lOR1JrWkdSa1k3ZlFvSkxuTjBNbnR2Y0dGamFYUjVPakF1Tmp0OUNna3VjM1F6ZTI5d1lXTnBkSGs2TUM0MU8zMEtDUzV6ZERSN2IzQmhZMmwwZVRvd0xqUTdmUW84TDNOMGVXeGxQZ284Wno0S0NUeG5QZ29KQ1R4blBnb0pDUWs4Y21Ga2FXRnNSM0poWkdsbGJuUWdhV1E5SWxOV1IwbEVYekZmSWlCamVEMGlNVFF1TnpjMU9DSWdZM2s5SWkweUxqazNOekVpSUhJOUlqa3hMall5TnlJZ1ozSmhaR2xsYm5SVmJtbDBjejBpZFhObGNsTndZV05sVDI1VmMyVWlQZ29KQ1FrSlBITjBiM0FnSUc5bVpuTmxkRDBpTUNJZ2MzUjViR1U5SW5OMGIzQXRZMjlzYjNJNkl6TkRNMFpCTmlJdlBnb0pDUWtKUEhOMGIzQWdJRzltWm5ObGREMGlNU0lnYzNSNWJHVTlJbk4wYjNBdFkyOXNiM0k2SXpOQ01ETTBNQ0l2UGdvSkNRazhMM0poWkdsaGJFZHlZV1JwWlc1MFBnb0pDUWs4Y0dGMGFDQmpiR0Z6Y3owaWMzUXdJaUJrUFNKTk5UQXNPVGxqTFRFekxqTXNNQzB5TlM0MExUVXVNeTB6TkM0eUxURXpMamxETmk0M0xEYzJMaklzTVN3Mk15NDNMREVzTlRCRE1Td3lNaTQ1TERJeUxqa3NNU3cxTUN3eFl6RXpMamNzTUN3eU5pNHlMRFV1Tnl3ek5TNHhMREUwTGpnS0NRa0pDVU01TXk0M0xESTBMallzT1Rrc016WXVOeXc1T1N3MU1FTTVPU3czTnk0eExEYzNMakVzT1Rrc05UQXNPVGw2SWk4K0Nna0pQQzluUGdvSkNUeG5QZ29KQ1FrOFkybHlZMnhsSUdOc1lYTnpQU0p6ZERFaUlHTjRQU0l6Tnk0MUlpQmplVDBpT0RFdU9TSWdjajBpTlNJdlBnb0pDVHd2Wno0S0NRazhjR0YwYUNCamJHRnpjejBpYzNReElpQmtQU0pOTkRndU5pdzVNUzQ1YkRFNExqZ3RORE11TTJNdE1pNDFMVEF1TVMwMUxUQXVOeTAzTGpJdE1rd3pNeTR5TERZNExqSnNNUzQwTFRFdU9Hd3lNQzB5TlM0eFl5MHhMalV0TWk0MExUSXVNeTAxTGpFdE1pNHpMVGN1T1V3NUxEVXlMaklLQ1FrSmJEUTNMall0TWprdU9Xd3dMREJqTUM0eExUQXVNU3d3TGpJdE1DNHlMREF1TWkwd0xqSmpOaTR4TFRZdU1Td3hOUzQ1TFRZdU1Td3lNaXd3YkRBdU1Td3dMakZqTml3MkxqRXNOaXd4TlM0NUxUQXVNU3d5TVM0NVl5MHdMakVzTUM0eExUQXVNaXd3TGpJdE1DNHlMREF1TW13d0xEQUtDUWtKVERRNExqWXNPVEV1T1hvaUx6NEtDUWs4WnlCamJHRnpjejBpYzNReUlqNEtDUWtKUEdOcGNtTnNaU0JqYkdGemN6MGljM1F4SWlCamVEMGlOVEF1TXlJZ1kzazlJakUwTGpjaUlISTlJak11TVNJdlBnb0pDVHd2Wno0S0NRazhaeUJqYkdGemN6MGljM1F6SWo0S0NRa0pQR05wY21Oc1pTQmpiR0Z6Y3owaWMzUXhJaUJqZUQwaU1qY3VOeUlnWTNrOUlqVTRJaUJ5UFNJeExqY2lMejRLQ1FrOEwyYytDZ2tKUEdjK0Nna0pDVHhqYVhKamJHVWdZMnhoYzNNOUluTjBNU0lnWTNnOUlqYzNMalFpSUdONVBTSTJPUzR6SWlCeVBTSXhMamNpTHo0S0NRazhMMmMrQ2drSlBHYytDZ2tKQ1R4amFYSmpiR1VnWTJ4aGMzTTlJbk4wTVNJZ1kzZzlJakUyTGpNaUlHTjVQU0l6Tmk0MklpQnlQU0l4TGpjaUx6NEtDUWs4TDJjK0Nna0pQR2NnWTJ4aGMzTTlJbk4wTkNJK0Nna0pDVHhqYVhKamJHVWdZMnhoYzNNOUluTjBNU0lnWTNnOUlqWXpMamNpSUdONVBTSTROUzQ1SWlCeVBTSXlMaklpTHo0S0NRazhMMmMrQ2drSlBHYytDZ2tKQ1R4amFYSmpiR1VnWTJ4aGMzTTlJbk4wTVNJZ1kzZzlJakk1TGpRaUlHTjVQU0l4T1M0MklpQnlQU0kwTGpnaUx6NEtDUWs4TDJjK0Nna0pQR2NnWTJ4aGMzTTlJbk4wTXlJK0Nna0pDVHhqYVhKamJHVWdZMnhoYzNNOUluTjBNU0lnWTNnOUlqZzRJaUJqZVQwaU5UQWlJSEk5SWpRdU9DSXZQZ29KQ1R3dlp6NEtDVHd2Wno0S1BDOW5QZ284TDNOMlp6NEsiLCJtZWRpYXR5cGUiOiJpbWFnZS9zdmcreG1sIn1dLCJpbnN0YWxsIjp7InNwZWMiOnsiY2x1c3RlclBlcm1pc3Npb25zIjpbeyJydWxlcyI6W3sibm9uUmVzb3VyY2VVUkxzIjpbIi9tZXRyaWNzIl0sInZlcmJzIjpbImdldCJdfSx7ImFwaUdyb3VwcyI6WyJhcGlyZWdpc3RyYXRpb24uazhzLmlvIl0sInJlc291cmNlcyI6WyJhcGlzZXJ2aWNlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0Iiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsiYXBwcyJdLCJyZXNvdXJjZXMiOlsiZGFlbW9uc2V0cyIsImRlcGxveW1lbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImFwcHMiXSwicmVzb3VyY2VzIjpbInJlcGxpY2FzZXRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJhdXRoZW50aWNhdGlvbi5rOHMuaW8iXSwicmVzb3VyY2VzIjpbInRva2VucmV2aWV3cyJdLCJ2ZXJicyI6WyJjcmVhdGUiXX0seyJhcGlHcm91cHMiOlsiYXV0b3NjYWxpbmciXSwicmVzb3VyY2VzIjpbImhvcml6b250YWxwb2RhdXRvc2NhbGVycyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJjb25maWcub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjbHVzdGVydmVyc2lvbnMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImNvbnNvbGUub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjb25zb2xlcGx1Z2lucyJdLCJ2ZXJicyI6WyJjcmVhdGUiLCJkZWxldGUiLCJnZXQiLCJsaXN0IiwicGF0Y2giLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiLCJuYW1lc3BhY2VzIiwic2VjcmV0cyIsInNlcnZpY2VhY2NvdW50cyIsInNlcnZpY2VzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZW5kcG9pbnRzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbIm5vZGVzIiwicG9kcyIsInNlcnZpY2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJmbG93cy5uZXRvYnNlcnYuaW8iXSwicmVzb3VyY2VzIjpbImZsb3djb2xsZWN0b3JzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJwYXRjaCIsInVwZGF0ZSIsIndhdGNoIl19LHsiYXBpR3JvdXBzIjpbImZsb3dzLm5ldG9ic2Vydi5pbyJdLCJyZXNvdXJjZXMiOlsiZmxvd2NvbGxlY3RvcnMvZmluYWxpemVycyJdLCJ2ZXJicyI6WyJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsiZmxvd3MubmV0b2JzZXJ2LmlvIl0sInJlc291cmNlcyI6WyJmbG93Y29sbGVjdG9ycy9zdGF0dXMiXSwidmVyYnMiOlsiZ2V0IiwicGF0Y2giLCJ1cGRhdGUiXX0seyJhcGlHcm91cHMiOlsibW9uaXRvcmluZy5jb3Jlb3MuY29tIl0sInJlc291cmNlcyI6WyJwcm9tZXRoZXVzcnVsZXMiLCJzZXJ2aWNlbW9uaXRvcnMiXSwidmVyYnMiOlsiY3JlYXRlIiwiZGVsZXRlIiwiZ2V0IiwibGlzdCIsInBhdGNoIiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsib3BlcmF0b3Iub3BlbnNoaWZ0LmlvIl0sInJlc291cmNlcyI6WyJjb25zb2xlcyJdLCJ2ZXJicyI6WyJnZXQiLCJsaXN0IiwidXBkYXRlIiwid2F0Y2giXX0seyJhcGlHcm91cHMiOlsicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsiY2x1c3RlcnJvbGViaW5kaW5ncyIsImNsdXN0ZXJyb2xlcyIsInJvbGViaW5kaW5ncyIsInJvbGVzIl0sInZlcmJzIjpbImNyZWF0ZSIsImRlbGV0ZSIsImdldCIsImxpc3QiLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VzIjpbInNlY3VyaXR5Y29udGV4dGNvbnN0cmFpbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsImxpc3QiLCJ1cGRhdGUiLCJ3YXRjaCJdfSx7ImFwaUdyb3VwcyI6WyJzZWN1cml0eS5vcGVuc2hpZnQuaW8iXSwicmVzb3VyY2VOYW1lcyI6WyJob3N0bmV0d29yayJdLCJyZXNvdXJjZXMiOlsic2VjdXJpdHljb250ZXh0Y29uc3RyYWludHMiXSwidmVyYnMiOlsidXNlIl19LHsiYXBpR3JvdXBzIjpbImF1dGhlbnRpY2F0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsidG9rZW5yZXZpZXdzIl0sInZlcmJzIjpbImNyZWF0ZSJdfSx7ImFwaUdyb3VwcyI6WyJhdXRob3JpemF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsic3ViamVjdGFjY2Vzc3Jldmlld3MiXSwidmVyYnMiOlsiY3JlYXRlIl19XSwic2VydmljZUFjY291bnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciJ9XSwiZGVwbG95bWVudHMiOlt7ImxhYmVsIjp7ImFwcCI6Im5ldG9ic2Vydi1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1jb250cm9sbGVyLW1hbmFnZXIiLCJzcGVjIjp7InJlcGxpY2FzIjoxLCJzZWxlY3RvciI6eyJtYXRjaExhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IiLCJjb250cm9sLXBsYW5lIjoiY29udHJvbGxlci1tYW5hZ2VyIn19LCJzdHJhdGVneSI6e30sInRlbXBsYXRlIjp7Im1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7ImJ1bmRsZUNyZWF0ZWRBdCI6IjIwMjMtMTAtMTlUMTE6NTA6MTgifSwibGFiZWxzIjp7ImFwcCI6Im5ldG9ic2Vydi1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInNwZWMiOnsiY29udGFpbmVycyI6W3siYXJncyI6WyItLWhlYWx0aC1wcm9iZS1iaW5kLWFkZHJlc3M9OjgwODEiLCItLW1ldHJpY3MtYmluZC1hZGRyZXNzPTEyNy4wLjAuMTo4MDgwIiwiLS1sZWFkZXItZWxlY3QiLCItLWVicGYtYWdlbnQtaW1hZ2U9JChSRUxBVEVEX0lNQUdFX0VCUEZfQUdFTlQpIiwiLS1mbG93bG9ncy1waXBlbGluZS1pbWFnZT0kKFJFTEFURURfSU1BR0VfRkxPV0xPR1NfUElQRUxJTkUpIiwiLS1jb25zb2xlLXBsdWdpbi1pbWFnZT0kKFJFTEFURURfSU1BR0VfQ09OU09MRV9QTFVHSU4pIiwiLS1kb3duc3RyZWFtLWRlcGxveW1lbnQ9JChET1dOU1RSRUFNX0RFUExPWU1FTlQpIl0sImNvbW1hbmQiOlsiL21hbmFnZXIiXSwiZW52IjpbeyJuYW1lIjoiUkVMQVRFRF9JTUFHRV9FQlBGX0FHRU5UIiwidmFsdWUiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1lYnBmLWFnZW50LXJoZWw5QHNoYTI1NjowODM2ODNjMDIwYjljYzc2ZWJiZDU2ODFhMTUwZWExZTFkMjBjN2E2YTgzOGE3MWUzMzJlZDlkYTgzMGMyN2VlIn0seyJuYW1lIjoiUkVMQVRFRF9JTUFHRV9GTE9XTE9HU19QSVBFTElORSIsInZhbHVlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktZmxvd2xvZ3MtcGlwZWxpbmUtcmhlbDlAc2hhMjU2OjBjYThjYTUwOGE3YjJmODE0MTVhYTAxYzM1MjI2MjgzYjM4YTU3NWEyZDkxM2QwNjFlYmUxYjkyMGQwMTQ3MjcifSx7Im5hbWUiOiJSRUxBVEVEX0lNQUdFX0NPTlNPTEVfUExVR0lOIiwidmFsdWUiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1jb25zb2xlLXBsdWdpbi1yaGVsOUBzaGEyNTY6YjZjMDJmNDE5NWEyYmU4YzRhZGFkYmRmZTQzNTQ1MWQ5OTQ3OTExOTcyOWZiZTY0NjU4NDYyMjU1ODBiZWQ1YiJ9LHsibmFtZSI6IkRPV05TVFJFQU1fREVQTE9ZTUVOVCIsInZhbHVlIjoidHJ1ZSJ9XSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1yaGVsOS1vcGVyYXRvckBzaGEyNTY6YTgyODhjNDE4ZDg4ODFmMjQ1NTU2MzQ1NzY1NmVjZjRmNzIwNTQ1NGYyNWY0MTNmNWE0NTBjN2QzNGY1OGUwZiIsImltYWdlUHVsbFBvbGljeSI6IkFsd2F5cyIsImxpdmVuZXNzUHJvYmUiOnsiaHR0cEdldCI6eyJwYXRoIjoiL2hlYWx0aHoiLCJwb3J0Ijo4MDgxfSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6MTUsInBlcmlvZFNlY29uZHMiOjIwfSwibmFtZSI6Im1hbmFnZXIiLCJwb3J0cyI6W3siY29udGFpbmVyUG9ydCI6OTQ0MywibmFtZSI6IndlYmhvb2stc2VydmVyIiwicHJvdG9jb2wiOiJUQ1AifV0sInJlYWRpbmVzc1Byb2JlIjp7Imh0dHBHZXQiOnsicGF0aCI6Ii9yZWFkeXoiLCJwb3J0Ijo4MDgxfSwiaW5pdGlhbERlbGF5U2Vjb25kcyI6NSwicGVyaW9kU2Vjb25kcyI6MTB9LCJyZXNvdXJjZXMiOnsibGltaXRzIjp7Im1lbW9yeSI6IjQwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiIxMDBNaSJ9fSwic2VjdXJpdHlDb250ZXh0Ijp7ImFsbG93UHJpdmlsZWdlRXNjYWxhdGlvbiI6ZmFsc2V9LCJ2b2x1bWVNb3VudHMiOlt7Im1vdW50UGF0aCI6Ii90bXAvazhzLXdlYmhvb2stc2VydmVyL3NlcnZpbmctY2VydHMiLCJuYW1lIjoiY2VydCIsInJlYWRPbmx5Ijp0cnVlfV19LHsiYXJncyI6WyItLXNlY3VyZS1saXN0ZW4tYWRkcmVzcz0wLjAuMC4wOjg0NDMiLCItLXVwc3RyZWFtPWh0dHA6Ly8xMjcuMC4wLjE6ODA4MC8iLCItLWxvZ3Rvc3RkZXJyPXRydWUiLCItLXY9MTAiLCItLXRscy1jZXJ0LWZpbGU9L2V0Yy90bHMvcHJpdmF0ZS90bHMuY3J0IiwiLS10bHMtcHJpdmF0ZS1rZXktZmlsZT0vZXRjL3Rscy9wcml2YXRlL3Rscy5rZXkiXSwiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vb3BlbnNoaWZ0NC9vc2Uta3ViZS1yYmFjLXByb3h5QHNoYTI1NjpmY2IzYjhhYjkzZGZiNWVmMmIyOTBlMzllYTU4OTlkYmI1ZTBjNmQ0MzAzNzBiOGQyODFlNTllNzRkOTRkNzQ5IiwibmFtZSI6Imt1YmUtcmJhYy1wcm94eSIsInBvcnRzIjpbeyJjb250YWluZXJQb3J0Ijo4NDQzLCJuYW1lIjoiaHR0cHMiLCJwcm90b2NvbCI6IlRDUCJ9XSwicmVzb3VyY2VzIjp7ImxpbWl0cyI6eyJjcHUiOiI1MDBtIiwibWVtb3J5IjoiMTI4TWkifSwicmVxdWVzdHMiOnsiY3B1IjoiNW0iLCJtZW1vcnkiOiI2NE1pIn19LCJ2b2x1bWVNb3VudHMiOlt7Im1vdW50UGF0aCI6Ii9ldGMvdGxzL3ByaXZhdGUiLCJuYW1lIjoibWFuYWdlci1tZXRyaWMtdGxzIiwicmVhZE9ubHkiOnRydWV9XX1dLCJzZWN1cml0eUNvbnRleHQiOnsicnVuQXNOb25Sb290Ijp0cnVlfSwic2VydmljZUFjY291bnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciIsInRlcm1pbmF0aW9uR3JhY2VQZXJpb2RTZWNvbmRzIjoxMCwidm9sdW1lcyI6W3sibmFtZSI6ImNlcnQiLCJzZWNyZXQiOnsiZGVmYXVsdE1vZGUiOjQyMCwic2VjcmV0TmFtZSI6IndlYmhvb2stc2VydmVyLWNlcnQifX0seyJuYW1lIjoibWFuYWdlci1tZXRyaWMtdGxzIiwic2VjcmV0Ijp7ImRlZmF1bHRNb2RlIjo0MjAsInNlY3JldE5hbWUiOiJtYW5hZ2VyLW1ldHJpY3MtdGxzIn19XX19fX1dLCJwZXJtaXNzaW9ucyI6W3sicnVsZXMiOlt7ImFwaUdyb3VwcyI6WyIiXSwicmVzb3VyY2VzIjpbImNvbmZpZ21hcHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIiwiY3JlYXRlIiwidXBkYXRlIiwicGF0Y2giLCJkZWxldGUiXX0seyJhcGlHcm91cHMiOlsiY29vcmRpbmF0aW9uLms4cy5pbyJdLCJyZXNvdXJjZXMiOlsibGVhc2VzIl0sInZlcmJzIjpbImdldCIsImxpc3QiLCJ3YXRjaCIsImNyZWF0ZSIsInVwZGF0ZSIsInBhdGNoIiwiZGVsZXRlIl19LHsiYXBpR3JvdXBzIjpbIiJdLCJyZXNvdXJjZXMiOlsiZXZlbnRzIl0sInZlcmJzIjpbImNyZWF0ZSIsInBhdGNoIl19XSwic2VydmljZUFjY291bnROYW1lIjoibmV0b2JzZXJ2LWNvbnRyb2xsZXItbWFuYWdlciJ9XX0sInN0cmF0ZWd5IjoiZGVwbG95bWVudCJ9LCJpbnN0YWxsTW9kZXMiOlt7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJPd25OYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJTaW5nbGVOYW1lc3BhY2UifSx7InN1cHBvcnRlZCI6ZmFsc2UsInR5cGUiOiJNdWx0aU5hbWVzcGFjZSJ9LHsic3VwcG9ydGVkIjp0cnVlLCJ0eXBlIjoiQWxsTmFtZXNwYWNlcyJ9XSwia2V5d29yZHMiOlsibmV0d29yayBvYnNlcnZhYmlsaXR5IiwiZWJwZiIsImZsb3cgdHJhY2luZyIsImZsb3dzIiwidG9wb2xvZ3kiLCJuZXR3b3JrIiwib2JzZXJ2YWJpbGl0eSJdLCJsaW5rcyI6W3sibmFtZSI6IlByb2plY3QgcGFnZSIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXRvYnNlcnYvbmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yIn0seyJuYW1lIjoiSXNzdWUgdHJhY2tlciIsInVybCI6Imh0dHBzOi8vZ2l0aHViLmNvbS9uZXRvYnNlcnYvbmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yL2lzc3VlcyJ9LHsibmFtZSI6IkRpc2N1c3Npb24gYm9hcmQiLCJ1cmwiOiJodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9kaXNjdXNzaW9ucyJ9XSwibWFpbnRhaW5lcnMiOlt7ImVtYWlsIjoianBpbnNvbm5AcmVkaGF0LmNvbSIsIm5hbWUiOiJKdWxpZW4gUGluc29ubmVhdSJ9LHsiZW1haWwiOiJqdGFrdm9yaUByZWRoYXQuY29tIiwibmFtZSI6IkpvZWwgVGFrdm9yaWFuIn0seyJlbWFpbCI6ImttZXRoQHJlZGhhdC5jb20iLCJuYW1lIjoiS2FsbWFuIE1ldGgifSx7ImVtYWlsIjoibW1haG1vdWRAcmVkaGF0LmNvbSIsIm5hbWUiOiJNb2hhbWVkIFMuIE1haG1vdWQifSx7ImVtYWlsIjoib2NhemFkZUByZWRoYXQuY29tIiwibmFtZSI6Ik9saXZpZXIgQ2F6YWRlIn0seyJlbWFpbCI6InJzY2hhZmZlQHJlZGhhdC5jb20iLCJuYW1lIjoiUm9uZW4gU2NoYWZmZXIifSx7ImVtYWlsIjoic3RsZWVAcmVkaGF0LmNvbSIsIm5hbWUiOiJTdGV2ZW4gTGVlIn1dLCJtYXR1cml0eSI6InN0YWJsZSIsIm1pbkt1YmVWZXJzaW9uIjoiMS4yMy4wIiwicHJvdmlkZXIiOnsibmFtZSI6IlJlZCBIYXQiLCJ1cmwiOiJodHRwczovL3d3dy5yZWRoYXQuY29tIn0sInJlbGF0ZWRJbWFnZXMiOlt7ImltYWdlIjoicmVnaXN0cnkucmVkaGF0LmlvL25ldHdvcmstb2JzZXJ2YWJpbGl0eS9uZXR3b3JrLW9ic2VydmFiaWxpdHktcmhlbDktb3BlcmF0b3JAc2hhMjU2OmE4Mjg4YzQxOGQ4ODgxZjI0NTU1NjM0NTc2NTZlY2Y0ZjcyMDU0NTRmMjVmNDEzZjVhNDUwYzdkMzRmNThlMGYiLCJuYW1lIjoibmV0d29yay1vYnNlcnZhYmlsaXR5LXJoZWw5LW9wZXJhdG9yLWE4Mjg4YzQxOGQ4ODgxZjI0NTU1NjM0NTc2NTZlY2Y0ZjcyMDU0NTRmMjVmNDEzZjVhNDUwYzdkMzRmNThlMGYtYW5ub3RhdGlvbiJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1yaGVsOS1vcGVyYXRvckBzaGEyNTY6YTgyODhjNDE4ZDg4ODFmMjQ1NTU2MzQ1NzY1NmVjZjRmNzIwNTQ1NGYyNWY0MTNmNWE0NTBjN2QzNGY1OGUwZiIsIm5hbWUiOiJtYW5hZ2VyIn0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9vcGVuc2hpZnQ0L29zZS1rdWJlLXJiYWMtcHJveHlAc2hhMjU2OmZjYjNiOGFiOTNkZmI1ZWYyYjI5MGUzOWVhNTg5OWRiYjVlMGM2ZDQzMDM3MGI4ZDI4MWU1OWU3NGQ5NGQ3NDkiLCJuYW1lIjoia3ViZS1yYmFjLXByb3h5In0seyJpbWFnZSI6InJlZ2lzdHJ5LnJlZGhhdC5pby9uZXR3b3JrLW9ic2VydmFiaWxpdHkvbmV0d29yay1vYnNlcnZhYmlsaXR5LWVicGYtYWdlbnQtcmhlbDlAc2hhMjU2OjA4MzY4M2MwMjBiOWNjNzZlYmJkNTY4MWExNTBlYTFlMWQyMGM3YTZhODM4YTcxZTMzMmVkOWRhODMwYzI3ZWUiLCJuYW1lIjoiZWJwZl9hZ2VudCJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1mbG93bG9ncy1waXBlbGluZS1yaGVsOUBzaGEyNTY6MGNhOGNhNTA4YTdiMmY4MTQxNWFhMDFjMzUyMjYyODNiMzhhNTc1YTJkOTEzZDA2MWViZTFiOTIwZDAxNDcyNyIsIm5hbWUiOiJmbG93bG9nc19waXBlbGluZSJ9LHsiaW1hZ2UiOiJyZWdpc3RyeS5yZWRoYXQuaW8vbmV0d29yay1vYnNlcnZhYmlsaXR5L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1jb25zb2xlLXBsdWdpbi1yaGVsOUBzaGEyNTY6YjZjMDJmNDE5NWEyYmU4YzRhZGFkYmRmZTQzNTQ1MWQ5OTQ3OTExOTcyOWZiZTY0NjU4NDYyMjU1ODBiZWQ1YiIsIm5hbWUiOiJjb25zb2xlX3BsdWdpbiJ9XSwicmVwbGFjZXMiOiJuZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IudjEuNC4wIiwidmVyc2lvbiI6IjEuNC4xIiwid2ViaG9va2RlZmluaXRpb25zIjpbeyJhZG1pc3Npb25SZXZpZXdWZXJzaW9ucyI6WyJ2MWFscGhhMSIsInYxYmV0YTEiXSwiY29udGFpbmVyUG9ydCI6NDQzLCJjb252ZXJzaW9uQ1JEcyI6WyJmbG93Y29sbGVjdG9ycy5mbG93cy5uZXRvYnNlcnYuaW8iXSwiZGVwbG95bWVudE5hbWUiOiJuZXRvYnNlcnYtY29udHJvbGxlci1tYW5hZ2VyIiwiZ2VuZXJhdGVOYW1lIjoiY2Zsb3djb2xsZWN0b3JzLmtiLmlvIiwic2lkZUVmZmVjdHMiOiJOb25lIiwidGFyZ2V0UG9ydCI6OTQ0MywidHlwZSI6IkNvbnZlcnNpb25XZWJob29rIiwid2ViaG9va1BhdGgiOiIvY29udmVydCJ9LHsiYWRtaXNzaW9uUmV2aWV3VmVyc2lvbnMiOlsidjEiXSwiY29udGFpbmVyUG9ydCI6NDQzLCJkZXBsb3ltZW50TmFtZSI6Im5ldG9ic2Vydi1jb250cm9sbGVyLW1hbmFnZXIiLCJmYWlsdXJlUG9saWN5IjoiRmFpbCIsImdlbmVyYXRlTmFtZSI6ImZsb3djb2xsZWN0b3Jjb252ZXJzaW9ud2ViaG9vay5uZXRvYnNlcnYuaW8iLCJydWxlcyI6W3siYXBpR3JvdXBzIjpbIm5ldG9ic2Vydi5pbyJdLCJhcGlWZXJzaW9ucyI6WyJ2MWJldGExIl0sIm9wZXJhdGlvbnMiOlsiQ1JFQVRFIiwiVVBEQVRFIl0sInJlc291cmNlcyI6WyJmbG93Y29sbGVjdG9ycyJdfV0sInNpZGVFZmZlY3RzIjoiTm9uZSIsInRhcmdldFBvcnQiOjk0NDMsInR5cGUiOiJWYWxpZGF0aW5nQWRtaXNzaW9uV2ViaG9vayIsIndlYmhvb2tQYXRoIjoiL3ZhbGlkYXRlLW5ldG9ic2Vydi1pby12MWJldGExLWZsb3djb2xsZWN0b3IifV19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:b6c02f4195a2be8c4adadbdfe435451d99479119729fbe6465846225580bed5b
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:083683c020b9cc76ebbd5681a150ea1e1d20c7a6a838a71e332ed9da830c27ee
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:0ca8ca508a7b2f81415aa01c35226283b38a575a2d913d061ebe1b920d014727
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:6f998bb3b7d5311d8e74b25f8fcfe4ae65897270da3c0763ca2cb1d763135bc4
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:a8288c418d8881f2455563457656ecf4f7205454f25f413f5a450c7d34f58e0f
    name: network-observability-rhel9-operator-a8288c418d8881f2455563457656ecf4f7205454f25f413f5a450c7d34f58e0f-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:a8288c418d8881f2455563457656ecf4f7205454f25f413f5a450c7d34f58e0f
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:fcb3b8ab93dfb5ef2b290e39ea5899dbb5e0c6d430370b8d281e59e74d94d749
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:dc8f77f41b077986639b3f594f9e5eb3bf56dad90bed1927921f973c4171ba68
name: network-observability-operator.v1.4.2
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.4.2
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:238bc51584c7af63056dd673b23ce8a4fb26cba7360bedad2b9e249a61459c35
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:5dee0d22ca62ab56c1b3d07147a31602d9106a24c423740a75405a82eece8a7f
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:0541e97b9d5fbc10a97262c321fb750340d84004be8261cad1e30e8d91def58b
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:dc8f77f41b077986639b3f594f9e5eb3bf56dad90bed1927921f973c4171ba68
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:cc5b325c36dabb429381b8016f4e3af40fbe2803e547e6d8ed8bd094a07939ce
    name: network-observability-rhel9-operator-cc5b325c36dabb429381b8016f4e3af40fbe2803e547e6d8ed8bd094a07939ce-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:cc5b325c36dabb429381b8016f4e3af40fbe2803e547e6d8ed8bd094a07939ce
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:53d3620bb0490d83aaf6a356bb7d3b9e7147222d1a2017f8317f05fa90cd3de9
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:c97aff3b0ed506b2a1e34c1b22878dc42c6ef3ebf03b73147e8879e23ab5f8af
name: network-observability-operator.v1.5.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1alpha1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta2
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowMetric
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.5.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjYuMSJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibmFtZSI6ImZsb3dtZXRyaWNzLmZsb3dzLm5ldG9ic2Vydi5pbyJ9LCJzcGVjIjp7Imdyb3VwIjoiZmxvd3MubmV0b2JzZXJ2LmlvIiwibmFtZXMiOnsia2luZCI6IkZsb3dNZXRyaWMiLCJsaXN0S2luZCI6IkZsb3dNZXRyaWNMaXN0IiwicGx1cmFsIjoiZmxvd21ldHJpY3MiLCJzaW5ndWxhciI6ImZsb3dtZXRyaWMifSwic2NvcGUiOiJOYW1lc3BhY2VkIiwidmVyc2lvbnMiOlt7Im5hbWUiOiJ2MWFscGhhMSIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJGbG93TWV0cmljIGlzIHRoZSBTY2hlbWEgZm9yIHRoZSBmbG93bWV0cmljcyBBUEkiLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuIFNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZCBtYXkgcmVqZWN0IHVucmVjb2duaXplZCB2YWx1ZXMuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy4gU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uIENhbm5vdCBiZSB1cGRhdGVkLiBJbiBDYW1lbENhc2UuIE1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InR5cGUiOiJvYmplY3QifSwic3BlYyI6eyJkZXNjcmlwdGlvbiI6IkZsb3dNZXRyaWNTcGVjIGRlZmluZXMgdGhlIGRlc2lyZWQgc3RhdGUgb2YgRmxvd01ldHJpYyBUaGUgcHJvdmlkZWQgQVBJIGFsbG93cyB5b3UgdG8gY3VzdG9taXplIHRoZXNlIG1ldHJpY3MgYWNjb3JkaW5nIHRvIHlvdXIgbmVlZHMuXHUwMDNjYnJcdTAwM2UgV2hlbiBhZGRpbmcgbmV3IG1ldHJpY3Mgb3IgbW9kaWZ5aW5nIGV4aXN0aW5nIGxhYmVscywgeW91IG11c3QgY2FyZWZ1bGx5IG1vbml0b3IgdGhlIG1lbW9yeSB1c2FnZSBvZiBQcm9tZXRoZXVzIHdvcmtsb2FkcyBhcyB0aGlzIGNvdWxkIHBvdGVudGlhbGx5IGhhdmUgYSBoaWdoIGltcGFjdC4gQ2YgaHR0cHM6Ly9yaG9icy1oYW5kYm9vay5uZXRsaWZ5LmFwcC9wcm9kdWN0cy9vcGVuc2hpZnRtb25pdG9yaW5nL3RlbGVtZXRyeS5tZC8jd2hhdC1pcy10aGUtY2FyZGluYWxpdHktb2YtYS1tZXRyaWNcdTAwM2Niclx1MDAzZSBUbyBjaGVjayB0aGUgY2FyZGluYWxpdHkgb2YgYWxsIE5ldE9ic2VydiBtZXRyaWNzLCBydW4gYXMgYHByb21xbGA6IGBjb3VudCh7X19uYW1lX189flwibmV0b2JzZXJ2LipcIn0pIGJ5IChfX25hbWVfXylgLiIsInByb3BlcnRpZXMiOnsiYnVja2V0cyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBidWNrZXRzIHRvIHVzZSB3aGVuIGB0eXBlYCBpcyBcIkhpc3RvZ3JhbVwiLiBUaGUgbGlzdCBtdXN0IGJlIHBhcnNlYWJsZSBhcyBmbG9hdHMuIFByb21ldGhldXMgZGVmYXVsdCBidWNrZXRzIHdpbGwgYmUgdXNlZCBpZiB1bnNldC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJkaXJlY3Rpb24iOnsiZGVmYXVsdCI6IkFueSIsImRlc2NyaXB0aW9uIjoiRmlsdGVyIGZvciBpbmdyZXNzLCBlZ3Jlc3Mgb3IgYW55IGRpcmVjdGlvbiBmbG93cy4gV2hlbiBzZXQgdG8gYEluZ3Jlc3NgLCBpdCBpcyBlcXVpdmFsZW50IHRvIGFkZGluZyB0aGUgcmVnZXggZmlsdGVyIG9uIGBGbG93RGlyZWN0aW9uYDogYDB8MmAuIFdoZW4gc2V0IHRvIGBFZ3Jlc3NgLCBpdCBpcyBlcXVpdmFsZW50IHRvIGFkZGluZyB0aGUgcmVnZXggZmlsdGVyIG9uIGBGbG93RGlyZWN0aW9uYDogYDF8MmAuIiwiZW51bSI6WyJBbnkiLCJFZ3Jlc3MiLCJJbmdyZXNzIl0sInR5cGUiOiJzdHJpbmcifSwiZmlsdGVycyI6eyJkZXNjcmlwdGlvbiI6ImBmaWx0ZXJzYCBpcyBhIGxpc3Qgb2YgZmllbGRzIGFuZCB2YWx1ZXMgdXNlZCB0byByZXN0cmljdCB3aGljaCBmbG93cyBhcmUgdGFrZW4gaW50byBhY2NvdW50LiBPZnRlbnRpbWVzLCB0aGVzZSBmaWx0ZXJzIG11c3QgYmUgdXNlZCB0byBlbGltaW5hdGUgZHVwbGljYXRlczogYER1cGxpY2F0ZTpcImZhbHNlXCJgIGFuZCBgRmxvd0RpcmVjdGlvbjogXCIwXCJgLiBSZWZlciB0byB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGxpc3Qgb2YgYXZhaWxhYmxlIGZpZWxkczogaHR0cHM6Ly9kb2NzLm9wZW5zaGlmdC5jb20vY29udGFpbmVyLXBsYXRmb3JtL2xhdGVzdC9uZXR3b3JraW5nL25ldHdvcmtfb2JzZXJ2YWJpbGl0eS9qc29uLWZsb3dzLWZvcm1hdC1yZWZlcmVuY2UuaHRtbC4iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImZpZWxkIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgZmllbGQgdG8gZmlsdGVyIG9uIiwidHlwZSI6InN0cmluZyJ9LCJtYXRjaFR5cGUiOnsiZGVmYXVsdCI6IkV4YWN0IiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIG1hdGNoaW5nIHRvIGFwcGx5IiwiZW51bSI6WyJFeGFjdCIsIlJlZ2V4IiwiUHJlc2VuY2UiLCJBYnNlbmNlIl0sInR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSB0byBmaWx0ZXIgb24iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJmaWVsZCIsIm1hdGNoVHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlRHVwbGljYXRlcyI6eyJkZXNjcmlwdGlvbiI6IldoZW4gc2V0IHRvIGB0cnVlYCwgZmxvd3MgZHVwbGljYXRlZCBhY3Jvc3Mgc2V2ZXJhbCBpbnRlcmZhY2VzIHdpbGwgYWRkIHVwIGluIHRoZSBnZW5lcmF0ZWQgbWV0cmljcy4gV2hlbiBzZXQgdG8gYGZhbHNlYCAoZGVmYXVsdCksIGl0IGlzIGVxdWl2YWxlbnQgdG8gYWRkaW5nIHRoZSBleGFjdCBmaWx0ZXIgb24gYER1cGxpY2F0ZWA6IGBmYWxzZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwibGFiZWxzIjp7ImRlc2NyaXB0aW9uIjoiYGxhYmVsc2AgaXMgYSBsaXN0IG9mIGZpZWxkcyB0aGF0IHNob3VsZCBiZSB1c2VkIGFzIFByb21ldGhldXMgbGFiZWxzLCBhbHNvIGtub3duIGFzIGRpbWVuc2lvbnMuIEZyb20gY2hvb3NpbmcgbGFiZWxzIHJlc3VsdHMgdGhlIGxldmVsIG9mIGdyYW51bGFyaXR5IG9mIHRoaXMgbWV0cmljLCBhcyB3ZWxsIGFzIHRoZSBhdmFpbGFibGUgYWdncmVnYXRpb25zIGF0IHF1ZXJ5IHRpbWUuIEl0IG11c3QgYmUgZG9uZSBjYXJlZnVsbHkgYXMgaXQgaW1wYWN0cyB0aGUgbWV0cmljIGNhcmRpbmFsaXR5IChjZiBodHRwczovL3Job2JzLWhhbmRib29rLm5ldGxpZnkuYXBwL3Byb2R1Y3RzL29wZW5zaGlmdG1vbml0b3JpbmcvdGVsZW1ldHJ5Lm1kLyN3aGF0LWlzLXRoZS1jYXJkaW5hbGl0eS1vZi1hLW1ldHJpYykuIEluIGdlbmVyYWwsIGF2b2lkIHNldHRpbmcgdmVyeSBoaWdoIGNhcmRpbmFsaXR5IGxhYmVscyBzdWNoIGFzIElQIG9yIE1BQyBhZGRyZXNzZXMuIFwiU3JjSzhTX093bmVyTmFtZVwiIG9yIFwiRHN0SzhTX093bmVyTmFtZVwiIHNob3VsZCBiZSBwcmVmZXJyZWQgb3ZlciBcIlNyY0s4U19OYW1lXCIgb3IgXCJEc3RLOFNfTmFtZVwiIGFzIG11Y2ggYXMgcG9zc2libGUuIFJlZmVyIHRvIHRoZSBkb2N1bWVudGF0aW9uIGZvciB0aGUgbGlzdCBvZiBhdmFpbGFibGUgZmllbGRzOiBodHRwczovL2RvY3Mub3BlbnNoaWZ0LmNvbS9jb250YWluZXItcGxhdGZvcm0vbGF0ZXN0L25ldHdvcmtfb2JzZXJ2YWJpbGl0eS9qc29uLWZsb3dzLWZvcm1hdC1yZWZlcmVuY2UuaHRtbC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJtZXRyaWNOYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgbWV0cmljIGluIFByb21ldGhldXMuIEl0IHdpbGwgYmUgYXV0b21hdGljYWxseSBwcmVmaXhlZCB3aXRoIFwibmV0b2JzZXJ2X1wiLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6Ik1ldHJpYyB0eXBlOiBcIkNvdW50ZXJcIiBvciBcIkhpc3RvZ3JhbVwiLiBVc2UgXCJDb3VudGVyXCIgZm9yIGFueSB2YWx1ZSB0aGF0IGluY3JlYXNlcyBvdmVyIHRpbWUgYW5kIG9uIHdoaWNoIHlvdSBjYW4gY29tcHV0ZSBhIHJhdGUsIHN1Y2ggYXMgQnl0ZXMgb3IgUGFja2V0cy4gVXNlIFwiSGlzdG9ncmFtXCIgZm9yIGFueSB2YWx1ZSB0aGF0IG11c3QgYmUgc2FtcGxlZCBpbmRlcGVuZGVudGx5LCBzdWNoIGFzIGxhdGVuY2llcy4iLCJlbnVtIjpbIkNvdW50ZXIiLCJIaXN0b2dyYW0iXSwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZUZpZWxkIjp7ImRlc2NyaXB0aW9uIjoiYHZhbHVlRmllbGRgIGlzIHRoZSBmbG93IGZpZWxkIHRoYXQgbXVzdCBiZSB1c2VkIGFzIGEgdmFsdWUgZm9yIHRoaXMgbWV0cmljLiBUaGlzIGZpZWxkIG11c3QgaG9sZCBudW1lcmljIHZhbHVlcy4gTGVhdmUgZW1wdHkgdG8gY291bnQgZmxvd3MgcmF0aGVyIHRoYW4gYSBzcGVjaWZpYyB2YWx1ZSBwZXIgZmxvdy4gUmVmZXIgdG8gdGhlIGRvY3VtZW50YXRpb24gZm9yIHRoZSBsaXN0IG9mIGF2YWlsYWJsZSBmaWVsZHM6IGh0dHBzOi8vZG9jcy5vcGVuc2hpZnQuY29tL2NvbnRhaW5lci1wbGF0Zm9ybS9sYXRlc3QvbmV0d29ya2luZy9uZXR3b3JrX29ic2VydmFiaWxpdHkvanNvbi1mbG93cy1mb3JtYXQtcmVmZXJlbmNlLmh0bWwuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibWV0cmljTmFtZSIsInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJGbG93TWV0cmljU3RhdHVzIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEZsb3dNZXRyaWMiLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJzZXJ2ZWQiOnRydWUsInN0b3JhZ2UiOnRydWUsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX1dfSwic3RhdHVzIjp7ImFjY2VwdGVkTmFtZXMiOnsia2luZCI6IiIsInBsdXJhbCI6IiJ9LCJjb25kaXRpb25zIjpbXSwic3RvcmVkVmVyc2lvbnMiOltdfX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:5d0954b7750b115d842a54130f56acdbdaa3102e8bd99abebb2f1890033866e5
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:c32cee1dc5219e6fc1b6d0e98d65772de3ace914094afc182000899522f16d04
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:60467bca0a898e383d2ba535e787ec2f46707bdf487082616d5cc3b608db30dc
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:c97aff3b0ed506b2a1e34c1b22878dc42c6ef3ebf03b73147e8879e23ab5f8af
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:b1378b36a37f31880d745c3d8f2f1f1b942f4b15af182022398fd737c643aa96
    name: network-observability-rhel9-operator-b1378b36a37f31880d745c3d8f2f1f1b942f4b15af182022398fd737c643aa96-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:b1378b36a37f31880d745c3d8f2f1f1b942f4b15af182022398fd737c643aa96
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8ae1e417a40fb2df575e170128267a4399f56b6bac6db8b30c5b5e2698d0e6f2
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:30868483bc25d1a7c280f05ef84659e390b568422b205fffe12c3e15d8272c92
name: network-observability-operator.v1.6.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta2
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowMetric
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.6.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:3fea32004888bb9a6115faf8d54d2458a336a4e813efba9768891cc7b7e4dd6e
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:7007961ad3c0322f474131115fe5b5bd4fc8b0dbc6430d3db4932fb4433c3391
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:5eb11fcc2f2e153c01db2f0799938cac591abccd00a0f6c0a18465e11d681027
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:30868483bc25d1a7c280f05ef84659e390b568422b205fffe12c3e15d8272c92
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:492b56a8750865346a247cc0a5f852c068da5c5a0ff3744085967f698efd8a30
    name: network-observability-rhel9-operator-492b56a8750865346a247cc0a5f852c068da5c5a0ff3744085967f698efd8a30-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:492b56a8750865346a247cc0a5f852c068da5c5a0ff3744085967f698efd8a30
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:0c2e9805d2c48d3cea7a9e348f0c37de435302e2e244415541c8a6fd75d77132
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:814737b3cca4b3e02fbf6750be08b93a6094ecb1457820619d3b9ee33900284c
name: network-observability-operator.v1.6.1
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta2
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowMetric
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.6.1
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:53d74bf74373d92529df4f30c4811473f62a1046a02e45d61b9049c9644342da
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:e1e5f3ec1f8bbb7e6d0a28801ed1567d59768fd7a854ceb5860642f6ba06722a
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:47540b6fd2cb1a0d89cb66859bc10b72e0266d828c6096ff0e9d83f4aa406579
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:814737b3cca4b3e02fbf6750be08b93a6094ecb1457820619d3b9ee33900284c
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:a06fb994fb564121b210ff85c1e5c98747e7a190ad4791ad3d54981162385a8c
    name: network-observability-rhel9-operator-a06fb994fb564121b210ff85c1e5c98747e7a190ad4791ad3d54981162385a8c-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:a06fb994fb564121b210ff85c1e5c98747e7a190ad4791ad3d54981162385a8c
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:77df668a9591bbaae675d0553f8dca5423c0f257317bc08fe821d965f44ed019
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:f660759b145bd0053ac756def298ae9a3727d84685dc06cd3ee9bbbaaa68971a
name: network-observability-operator.v1.6.2
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta2
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowMetric
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.6.2
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:b19c1783e289f9c892592baafa6ca87973654a406eedcd1e89923849b8e55d5b
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:f3607ecd0aae86bced57730dd721c986a49c7d0c1dfb1f541dbdaf373a19668f
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:ee924ca2c8320838345679ff19b4ba78fa6be42225e1a9ec2daaadc1bc38ee2b
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:f660759b145bd0053ac756def298ae9a3727d84685dc06cd3ee9bbbaaa68971a
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:737ac2d174c1ce1e5435e67360b245f681eb4dc7dce35d3c3cf64636a131257b
    name: network-observability-rhel9-operator-737ac2d174c1ce1e5435e67360b245f681eb4dc7dce35d3c3cf64636a131257b-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:737ac2d174c1ce1e5435e67360b245f681eb4dc7dce35d3c3cf64636a131257b
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f6c37678f1eb3279e603f63d2a821b72394c52d25c2ed5058dc29d4caa15d504
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:3a3c70c990bd3a012453857698433d674b98445e55cc9c5c4ed38eea29eb82b1
name: network-observability-operator.v1.7.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta2
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowMetric
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.7.0
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoiYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjEiLCJraW5kIjoiQ3VzdG9tUmVzb3VyY2VEZWZpbml0aW9uIiwibWV0YWRhdGEiOnsiYW5ub3RhdGlvbnMiOnsiY29udHJvbGxlci1nZW4ua3ViZWJ1aWxkZXIuaW8vdmVyc2lvbiI6InYwLjE2LjIifSwiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJmbG93Y29sbGVjdG9ycy5mbG93cy5uZXRvYnNlcnYuaW8ifSwic3BlYyI6eyJjb252ZXJzaW9uIjp7InN0cmF0ZWd5IjoiV2ViaG9vayIsIndlYmhvb2siOnsiY2xpZW50Q29uZmlnIjp7InNlcnZpY2UiOnsibmFtZSI6Im5ldG9ic2Vydi13ZWJob29rLXNlcnZpY2UiLCJuYW1lc3BhY2UiOiJuZXRvYnNlcnYiLCJwYXRoIjoiL2NvbnZlcnQifX0sImNvbnZlcnNpb25SZXZpZXdWZXJzaW9ucyI6WyJ2MSJdfX0sImdyb3VwIjoiZmxvd3MubmV0b2JzZXJ2LmlvIiwibmFtZXMiOnsia2luZCI6IkZsb3dDb2xsZWN0b3IiLCJsaXN0S2luZCI6IkZsb3dDb2xsZWN0b3JMaXN0IiwicGx1cmFsIjoiZmxvd2NvbGxlY3RvcnMiLCJzaW5ndWxhciI6ImZsb3djb2xsZWN0b3IifSwic2NvcGUiOiJDbHVzdGVyIiwidmVyc2lvbnMiOlt7ImFkZGl0aW9uYWxQcmludGVyQ29sdW1ucyI6W3sianNvblBhdGgiOiIuc3BlYy5hZ2VudC50eXBlIiwibmFtZSI6IkFnZW50IiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3BlYy5hZ2VudC5lYnBmLnNhbXBsaW5nIiwibmFtZSI6IlNhbXBsaW5nIChFQlBGKSIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuZGVwbG95bWVudE1vZGVsIiwibmFtZSI6IkRlcGxveW1lbnQgTW9kZWwiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zdGF0dXMuY29uZGl0aW9uc1s/KEAudHlwZT09XCJSZWFkeVwiKV0ucmVhc29uIiwibmFtZSI6IlN0YXR1cyIsInR5cGUiOiJzdHJpbmcifV0sImRlcHJlY2F0ZWQiOnRydWUsIm5hbWUiOiJ2MWJldGExIiwic2NoZW1hIjp7Im9wZW5BUElWM1NjaGVtYSI6eyJkZXNjcmlwdGlvbiI6ImBGbG93Q29sbGVjdG9yYCBpcyB0aGUgc2NoZW1hIGZvciB0aGUgbmV0d29yayBmbG93cyBjb2xsZWN0aW9uIEFQSSwgd2hpY2ggcGlsb3RzIGFuZCBjb25maWd1cmVzIHRoZSB1bmRlcmx5aW5nIGRlcGxveW1lbnRzLiIsInByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJkZXNjcmlwdGlvbiI6IkFQSVZlcnNpb24gZGVmaW5lcyB0aGUgdmVyc2lvbmVkIHNjaGVtYSBvZiB0aGlzIHJlcHJlc2VudGF0aW9uIG9mIGFuIG9iamVjdC5cblNlcnZlcnMgc2hvdWxkIGNvbnZlcnQgcmVjb2duaXplZCBzY2hlbWFzIHRvIHRoZSBsYXRlc3QgaW50ZXJuYWwgdmFsdWUsIGFuZFxubWF5IHJlamVjdCB1bnJlY29nbml6ZWQgdmFsdWVzLlxuTW9yZSBpbmZvOiBodHRwczovL2dpdC5rOHMuaW8vY29tbXVuaXR5L2NvbnRyaWJ1dG9ycy9kZXZlbC9zaWctYXJjaGl0ZWN0dXJlL2FwaS1jb252ZW50aW9ucy5tZCNyZXNvdXJjZXMiLCJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsiZGVzY3JpcHRpb24iOiJLaW5kIGlzIGEgc3RyaW5nIHZhbHVlIHJlcHJlc2VudGluZyB0aGUgUkVTVCByZXNvdXJjZSB0aGlzIG9iamVjdCByZXByZXNlbnRzLlxuU2VydmVycyBtYXkgaW5mZXIgdGhpcyBmcm9tIHRoZSBlbmRwb2ludCB0aGUgY2xpZW50IHN1Ym1pdHMgcmVxdWVzdHMgdG8uXG5DYW5ub3QgYmUgdXBkYXRlZC5cbkluIENhbWVsQ2FzZS5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjdHlwZXMta2luZHMiLCJ0eXBlIjoic3RyaW5nIn0sIm1ldGFkYXRhIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJwYXR0ZXJuIjoiXmNsdXN0ZXIkIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzcGVjIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyB0aGUgZGVzaXJlZCBzdGF0ZSBvZiB0aGUgRmxvd0NvbGxlY3RvciByZXNvdXJjZS5cblx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2Vcbio6IHRoZSBtZW50aW9uIG9mIFwidW5zdXBwb3J0ZWRcIiwgb3IgXCJkZXByZWNhdGVkXCIgZm9yIGEgZmVhdHVyZSB0aHJvdWdob3V0IHRoaXMgZG9jdW1lbnQgbWVhbnMgdGhhdCB0aGlzIGZlYXR1cmVcbmlzIG5vdCBvZmZpY2lhbGx5IHN1cHBvcnRlZCBieSBSZWQgSGF0LiBJdCBtaWdodCBoYXZlIGJlZW4sIGZvciBleGFtcGxlLCBjb250cmlidXRlZCBieSB0aGUgY29tbXVuaXR5XG5hbmQgYWNjZXB0ZWQgd2l0aG91dCBhIGZvcm1hbCBhZ3JlZW1lbnQgZm9yIG1haW50ZW5hbmNlLiBUaGUgcHJvZHVjdCBtYWludGFpbmVycyBtaWdodCBwcm92aWRlIHNvbWUgc3VwcG9ydFxuZm9yIHRoZXNlIGZlYXR1cmVzIGFzIGEgYmVzdCBlZmZvcnQgb25seS4iLCJwcm9wZXJ0aWVzIjp7ImFnZW50Ijp7ImRlc2NyaXB0aW9uIjoiQWdlbnQgY29uZmlndXJhdGlvbiBmb3IgZmxvd3MgZXh0cmFjdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImVicGYiOnsiZGVzY3JpcHRpb24iOiJgZWJwZmAgZGVzY3JpYmVzIHRoZSBzZXR0aW5ncyByZWxhdGVkIHRvIHRoZSBlQlBGLWJhc2VkIGZsb3cgcmVwb3J0ZXIgd2hlbiBgc3BlYy5hZ2VudC50eXBlYFxuaXMgc2V0IHRvIGBFQlBGYC4iLCJwcm9wZXJ0aWVzIjp7ImNhY2hlQWN0aXZlVGltZW91dCI6eyJkZWZhdWx0IjoiNXMiLCJkZXNjcmlwdGlvbiI6ImBjYWNoZUFjdGl2ZVRpbWVvdXRgIGlzIHRoZSBtYXggcGVyaW9kIGR1cmluZyB3aGljaCB0aGUgcmVwb3J0ZXIgYWdncmVnYXRlcyBmbG93cyBiZWZvcmUgc2VuZGluZy5cbkluY3JlYXNpbmcgYGNhY2hlTWF4Rmxvd3NgIGFuZCBgY2FjaGVBY3RpdmVUaW1lb3V0YCBjYW4gZGVjcmVhc2UgdGhlIG5ldHdvcmsgdHJhZmZpYyBvdmVyaGVhZCBhbmQgdGhlIENQVSBsb2FkLFxuaG93ZXZlciB5b3UgY2FuIGV4cGVjdCBoaWdoZXIgbWVtb3J5IGNvbnN1bXB0aW9uIGFuZCBhbiBpbmNyZWFzZWQgbGF0ZW5jeSBpbiB0aGUgZmxvdyBjb2xsZWN0aW9uLiIsInBhdHRlcm4iOiJeXFxkKyhuc3xtc3xzfG0pPyQiLCJ0eXBlIjoic3RyaW5nIn0sImNhY2hlTWF4Rmxvd3MiOnsiZGVmYXVsdCI6MTAwMDAwLCJkZXNjcmlwdGlvbiI6ImBjYWNoZU1heEZsb3dzYCBpcyB0aGUgbWF4IG51bWJlciBvZiBmbG93cyBpbiBhbiBhZ2dyZWdhdGU7IHdoZW4gcmVhY2hlZCwgdGhlIHJlcG9ydGVyIHNlbmRzIHRoZSBmbG93cy5cbkluY3JlYXNpbmcgYGNhY2hlTWF4Rmxvd3NgIGFuZCBgY2FjaGVBY3RpdmVUaW1lb3V0YCBjYW4gZGVjcmVhc2UgdGhlIG5ldHdvcmsgdHJhZmZpYyBvdmVyaGVhZCBhbmQgdGhlIENQVSBsb2FkLFxuaG93ZXZlciB5b3UgY2FuIGV4cGVjdCBoaWdoZXIgbWVtb3J5IGNvbnN1bXB0aW9uIGFuZCBhbiBpbmNyZWFzZWQgbGF0ZW5jeSBpbiB0aGUgZmxvdyBjb2xsZWN0aW9uLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwiZGVidWciOnsiZGVzY3JpcHRpb24iOiJgZGVidWdgIGFsbG93cyBzZXR0aW5nIHNvbWUgYXNwZWN0cyBvZiB0aGUgaW50ZXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgZUJQRiBhZ2VudC5cblRoaXMgc2VjdGlvbiBpcyBhaW1lZCBleGNsdXNpdmVseSBmb3IgZGVidWdnaW5nIGFuZCBmaW5lLWdyYWluZWQgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9ucyxcbnN1Y2ggYXMgYEdPR0NgIGFuZCBgR09NQVhQUk9DU2AgZW52IHZhcnMuIFNldCB0aGVzZSB2YWx1ZXMgYXQgeW91ciBvd24gcmlzay4iLCJwcm9wZXJ0aWVzIjp7ImVudiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiYGVudmAgYWxsb3dzIHBhc3NpbmcgY3VzdG9tIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byB1bmRlcmx5aW5nIGNvbXBvbmVudHMuIFVzZWZ1bCBmb3IgcGFzc2luZ1xuc29tZSB2ZXJ5IGNvbmNyZXRlIHBlcmZvcm1hbmNlLXR1bmluZyBvcHRpb25zLCBzdWNoIGFzIGBHT0dDYCBhbmQgYEdPTUFYUFJPQ1NgLCB0aGF0IHNob3VsZCBub3QgYmVcbnB1YmxpY2x5IGV4cG9zZWQgYXMgcGFydCBvZiB0aGUgRmxvd0NvbGxlY3RvciBkZXNjcmlwdG9yLCBhcyB0aGV5IGFyZSBvbmx5IHVzZWZ1bFxuaW4gZWRnZSBkZWJ1ZyBvciBzdXBwb3J0IHNjZW5hcmlvcy4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImV4Y2x1ZGVJbnRlcmZhY2VzIjp7ImRlZmF1bHQiOlsibG8iXSwiZGVzY3JpcHRpb24iOiJgZXhjbHVkZUludGVyZmFjZXNgIGNvbnRhaW5zIHRoZSBpbnRlcmZhY2UgbmFtZXMgdGhhdCBhcmUgZXhjbHVkZWQgZnJvbSBmbG93IHRyYWNpbmcuXG5BbiBlbnRyeSBlbmNsb3NlZCBieSBzbGFzaGVzLCBzdWNoIGFzIGAvYnItL2AsIGlzIG1hdGNoZWQgYXMgYSByZWd1bGFyIGV4cHJlc3Npb24uXG5PdGhlcndpc2UgaXQgaXMgbWF0Y2hlZCBhcyBhIGNhc2Utc2Vuc2l0aXZlIHN0cmluZy4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJmZWF0dXJlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgYWRkaXRpb25hbCBmZWF0dXJlcyB0byBlbmFibGUuIFRoZXkgYXJlIGFsbCBkaXNhYmxlZCBieSBkZWZhdWx0LiBFbmFibGluZyBhZGRpdGlvbmFsIGZlYXR1cmVzIG1pZ2h0IGhhdmUgcGVyZm9ybWFuY2UgaW1wYWN0cy4gUG9zc2libGUgdmFsdWVzIGFyZTpcdTAwM2Niclx1MDAzZVxuLSBgUGFja2V0RHJvcGA6IGVuYWJsZSB0aGUgcGFja2V0cyBkcm9wIGZsb3dzIGxvZ2dpbmcgZmVhdHVyZS4gVGhpcyBmZWF0dXJlIHJlcXVpcmVzIG1vdW50aW5nXG50aGUga2VybmVsIGRlYnVnIGZpbGVzeXN0ZW0sIHNvIHRoZSBlQlBGIHBvZCBoYXMgdG8gcnVuIGFzIHByaXZpbGVnZWQuXG5JZiB0aGUgYHNwZWMuYWdlbnQuZWJwZi5wcml2aWxlZ2VkYCBwYXJhbWV0ZXIgaXMgbm90IHNldCwgYW4gZXJyb3IgaXMgcmVwb3J0ZWQuXHUwMDNjYnJcdTAwM2Vcbi0gYEROU1RyYWNraW5nYDogZW5hYmxlIHRoZSBETlMgdHJhY2tpbmcgZmVhdHVyZS5cdTAwM2Niclx1MDAzZVxuLSBgRmxvd1JUVGA6IGVuYWJsZSBmbG93IGxhdGVuY3kgKHNSVFQpIGV4dHJhY3Rpb24gaW4gdGhlIGVCUEYgYWdlbnQgZnJvbSBUQ1AgdHJhZmZpYy5cdTAwM2Niclx1MDAzZVxuLSBgTmV0d29ya0V2ZW50c2A6IGVuYWJsZSB0aGUgTmV0d29yayBldmVudHMgbW9uaXRvcmluZyBmZWF0dXJlLiBUaGlzIGZlYXR1cmUgcmVxdWlyZXMgbW91bnRpbmdcbnRoZSBrZXJuZWwgZGVidWcgZmlsZXN5c3RlbSwgc28gdGhlIGVCUEYgcG9kIGhhcyB0byBydW4gYXMgcHJpdmlsZWdlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkFnZW50IGZlYXR1cmUsIGNhbiBiZSBvbmUgb2Y6XHUwMDNjYnJcdTAwM2Vcbi0gYFBhY2tldERyb3BgLCB0byB0cmFjayBwYWNrZXQgZHJvcHMuXHUwMDNjYnJcdTAwM2Vcbi0gYEROU1RyYWNraW5nYCwgdG8gdHJhY2sgc3BlY2lmaWMgaW5mb3JtYXRpb24gb24gRE5TIHRyYWZmaWMuXHUwMDNjYnJcdTAwM2Vcbi0gYEZsb3dSVFRgLCB0byB0cmFjayBUQ1AgbGF0ZW5jeSBbVW5zdXBwb3J0ZWQgKCopXS5cdTAwM2Niclx1MDAzZVxuLSBgTmV0d29ya0V2ZW50c2AsIHRvIHRyYWNrIE5ldHdvcmsgZXZlbnRzLlx1MDAzY2JyXHUwMDNlIiwiZW51bSI6WyJQYWNrZXREcm9wIiwiRE5TVHJhY2tpbmciLCJGbG93UlRUIiwiTmV0d29ya0V2ZW50cyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJmbG93RmlsdGVyIjp7ImRlc2NyaXB0aW9uIjoiYGZsb3dGaWx0ZXJgIGRlZmluZXMgdGhlIGVCUEYgYWdlbnQgY29uZmlndXJhdGlvbiByZWdhcmRpbmcgZmxvdyBmaWx0ZXJpbmciLCJwcm9wZXJ0aWVzIjp7ImFjdGlvbiI6eyJkZXNjcmlwdGlvbiI6IkFjdGlvbiBkZWZpbmVzIHRoZSBhY3Rpb24gdG8gcGVyZm9ybSBvbiB0aGUgZmxvd3MgdGhhdCBtYXRjaCB0aGUgZmlsdGVyLiIsImVudW0iOlsiQWNjZXB0IiwiUmVqZWN0Il0sInR5cGUiOiJzdHJpbmcifSwiY2lkciI6eyJkZXNjcmlwdGlvbiI6IkNJRFIgZGVmaW5lcyB0aGUgSVAgQ0lEUiB0byBmaWx0ZXIgZmxvd3MgYnkuXG5FeGFtcGxlOiAxMC4xMC4xMC4wLzI0IG9yIDEwMDoxMDA6MTAwOjEwMDo6LzY0IiwidHlwZSI6InN0cmluZyJ9LCJkZXN0UG9ydHMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IkRlc3RQb3J0cyBkZWZpbmVzIHRoZSBkZXN0aW5hdGlvbiBwb3J0cyB0byBmaWx0ZXIgZmxvd3MgYnkuXG5UbyBmaWx0ZXIgYSBzaW5nbGUgcG9ydCwgc2V0IGEgc2luZ2xlIHBvcnQgYXMgYW4gaW50ZWdlciB2YWx1ZS4gRm9yIGV4YW1wbGUsIGRlc3RQb3J0czogODAuXG5UbyBmaWx0ZXIgYSByYW5nZSBvZiBwb3J0cywgdXNlIGEgXCJzdGFydC1lbmRcIiByYW5nZSBpbiBzdHJpbmcgZm9ybWF0LiBGb3IgZXhhbXBsZSwgZGVzdFBvcnRzOiBcIjgwLTEwMFwiLlxuVG8gZmlsdGVyIHR3byBwb3J0cywgdXNlIGEgXCJwb3J0MSxwb3J0MlwiIGluIHN0cmluZyBmb3JtYXQuIEZvciBleGFtcGxlLCBgcG9ydHM6IFwiODAsMTAwXCJgLiIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGlyZWN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiRGlyZWN0aW9uIGRlZmluZXMgdGhlIGRpcmVjdGlvbiB0byBmaWx0ZXIgZmxvd3MgYnkuIiwiZW51bSI6WyJJbmdyZXNzIiwiRWdyZXNzIl0sInR5cGUiOiJzdHJpbmcifSwiZW5hYmxlIjp7ImRlc2NyaXB0aW9uIjoiU2V0IGBlbmFibGVgIHRvIGB0cnVlYCB0byBlbmFibGUgZUJQRiBmbG93IGZpbHRlcmluZyBmZWF0dXJlLiIsInR5cGUiOiJib29sZWFuIn0sImljbXBDb2RlIjp7ImRlc2NyaXB0aW9uIjoiSUNNUENvZGUgZGVmaW5lcyB0aGUgSUNNUCBjb2RlIHRvIGZpbHRlciBmbG93cyBieS4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJpY21wVHlwZSI6eyJkZXNjcmlwdGlvbiI6IklDTVBUeXBlIGRlZmluZXMgdGhlIElDTVAgdHlwZSB0byBmaWx0ZXIgZmxvd3MgYnkuIiwidHlwZSI6ImludGVnZXIifSwicGVlcklQIjp7ImRlc2NyaXB0aW9uIjoiUGVlcklQIGRlZmluZXMgdGhlIElQIGFkZHJlc3MgdG8gZmlsdGVyIGZsb3dzIGJ5LlxuRXhhbXBsZTogMTAuMTAuMTAuMTAiLCJ0eXBlIjoic3RyaW5nIn0sInBvcnRzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJQb3J0cyBkZWZpbmVzIHRoZSBwb3J0cyB0byBmaWx0ZXIgZmxvd3MgYnkuIGl0IGNhbiBiZSB1c2VyIGZvciBlaXRoZXIgc291cmNlIG9yIGRlc3RpbmF0aW9uIHBvcnRzLlxuVG8gZmlsdGVyIGEgc2luZ2xlIHBvcnQsIHNldCBhIHNpbmdsZSBwb3J0IGFzIGFuIGludGVnZXIgdmFsdWUuIEZvciBleGFtcGxlLCBwb3J0czogODAuXG5UbyBmaWx0ZXIgYSByYW5nZSBvZiBwb3J0cywgdXNlIGEgXCJzdGFydC1lbmRcIiByYW5nZSBpbiBzdHJpbmcgZm9ybWF0LiBGb3IgZXhhbXBsZSwgcG9ydHM6IFwiODAtMTAwXCIuXG5UbyBmaWx0ZXIgdHdvIHBvcnRzLCB1c2UgYSBcInBvcnQxLHBvcnQyXCIgaW4gc3RyaW5nIGZvcm1hdC4gRm9yIGV4YW1wbGUsIGBwb3J0czogXCI4MCwxMDBcImAuIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJwcm90b2NvbCI6eyJkZXNjcmlwdGlvbiI6IlByb3RvY29sIGRlZmluZXMgdGhlIHByb3RvY29sIHRvIGZpbHRlciBmbG93cyBieS4iLCJlbnVtIjpbIlRDUCIsIlVEUCIsIklDTVAiLCJJQ01QdjYiLCJTQ1RQIl0sInR5cGUiOiJzdHJpbmcifSwic291cmNlUG9ydHMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJkZXNjcmlwdGlvbiI6IlNvdXJjZVBvcnRzIGRlZmluZXMgdGhlIHNvdXJjZSBwb3J0cyB0byBmaWx0ZXIgZmxvd3MgYnkuXG5UbyBmaWx0ZXIgYSBzaW5nbGUgcG9ydCwgc2V0IGEgc2luZ2xlIHBvcnQgYXMgYW4gaW50ZWdlciB2YWx1ZS4gRm9yIGV4YW1wbGUsIHNvdXJjZVBvcnRzOiA4MC5cblRvIGZpbHRlciBhIHJhbmdlIG9mIHBvcnRzLCB1c2UgYSBcInN0YXJ0LWVuZFwiIHJhbmdlIGluIHN0cmluZyBmb3JtYXQuIEZvciBleGFtcGxlLCBzb3VyY2VQb3J0czogXCI4MC0xMDBcIi5cblRvIGZpbHRlciB0d28gcG9ydHMsIHVzZSBhIFwicG9ydDEscG9ydDJcIiBpbiBzdHJpbmcgZm9ybWF0LiBGb3IgZXhhbXBsZSwgYHBvcnRzOiBcIjgwLDEwMFwiYC4iLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInRjcEZsYWdzIjp7ImRlc2NyaXB0aW9uIjoiYHRjcEZsYWdzYCBkZWZpbmVzIHRoZSBUQ1AgZmxhZ3MgdG8gZmlsdGVyIGZsb3dzIGJ5LiIsImVudW0iOlsiU1lOIiwiU1lOLUFDSyIsIkFDSyIsIkZJTiIsIlJTVCIsIlVSRyIsIkVDRSIsIkNXUiIsIkZJTi1BQ0siLCJSU1QtQUNLIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiaW1hZ2VQdWxsUG9saWN5Ijp7ImRlZmF1bHQiOiJJZk5vdFByZXNlbnQiLCJkZXNjcmlwdGlvbiI6ImBpbWFnZVB1bGxQb2xpY3lgIGlzIHRoZSBLdWJlcm5ldGVzIHB1bGwgcG9saWN5IGZvciB0aGUgaW1hZ2UgZGVmaW5lZCBhYm92ZSIsImVudW0iOlsiSWZOb3RQcmVzZW50IiwiQWx3YXlzIiwiTmV2ZXIiXSwidHlwZSI6InN0cmluZyJ9LCJpbnRlcmZhY2VzIjp7ImRlc2NyaXB0aW9uIjoiYGludGVyZmFjZXNgIGNvbnRhaW5zIHRoZSBpbnRlcmZhY2UgbmFtZXMgZnJvbSB3aGVyZSBmbG93cyBhcmUgY29sbGVjdGVkLiBJZiBlbXB0eSwgdGhlIGFnZW50XG5mZXRjaGVzIGFsbCB0aGUgaW50ZXJmYWNlcyBpbiB0aGUgc3lzdGVtLCBleGNlcHRpbmcgdGhlIG9uZXMgbGlzdGVkIGluIEV4Y2x1ZGVJbnRlcmZhY2VzLlxuQW4gZW50cnkgZW5jbG9zZWQgYnkgc2xhc2hlcywgc3VjaCBhcyBgL2JyLS9gLCBpcyBtYXRjaGVkIGFzIGEgcmVndWxhciBleHByZXNzaW9uLlxuT3RoZXJ3aXNlIGl0IGlzIG1hdGNoZWQgYXMgYSBjYXNlLXNlbnNpdGl2ZSBzdHJpbmcuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwia2Fma2FCYXRjaFNpemUiOnsiZGVmYXVsdCI6MTA0ODU3NiwiZGVzY3JpcHRpb24iOiJga2Fma2FCYXRjaFNpemVgIGxpbWl0cyB0aGUgbWF4aW11bSBzaXplIG9mIGEgcmVxdWVzdCBpbiBieXRlcyBiZWZvcmUgYmVpbmcgc2VudCB0byBhIHBhcnRpdGlvbi4gSWdub3JlZCB3aGVuIG5vdCB1c2luZyBLYWZrYS4gRGVmYXVsdDogMU1CLiIsInR5cGUiOiJpbnRlZ2VyIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJpbmZvIiwiZGVzY3JpcHRpb24iOiJgbG9nTGV2ZWxgIGRlZmluZXMgdGhlIGxvZyBsZXZlbCBmb3IgdGhlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBlQlBGIEFnZW50IiwiZW51bSI6WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImZhdGFsIiwicGFuaWMiXSwidHlwZSI6InN0cmluZyJ9LCJtZXRyaWNzIjp7ImRlc2NyaXB0aW9uIjoiYG1ldHJpY3NgIGRlZmluZXMgdGhlIGVCUEYgYWdlbnQgY29uZmlndXJhdGlvbiByZWdhcmRpbmcgbWV0cmljcyIsInByb3BlcnRpZXMiOnsiZGlzYWJsZUFsZXJ0cyI6eyJkZXNjcmlwdGlvbiI6ImBkaXNhYmxlQWxlcnRzYCBpcyBhIGxpc3Qgb2YgYWxlcnRzIHRoYXQgc2hvdWxkIGJlIGRpc2FibGVkLlxuUG9zc2libGUgdmFsdWVzIGFyZTpcdTAwM2Niclx1MDAzZVxuYE5ldE9ic2VydkRyb3BwZWRGbG93c2AsIHdoaWNoIGlzIHRyaWdnZXJlZCB3aGVuIHRoZSBlQlBGIGFnZW50IGlzIG1pc3NpbmcgcGFja2V0cyBvciBmbG93cywgc3VjaCBhcyB3aGVuIHRoZSBCUEYgaGFzaG1hcCBpcyBidXN5IG9yIGZ1bGwsIG9yIHRoZSBjYXBhY2l0eSBsaW1pdGVyIGJlaW5nIHRyaWdnZXJlZC5cdTAwM2Niclx1MDAzZSIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiBhbiBlQlBGIGFnZW50IGFsZXJ0LlxuUG9zc2libGUgdmFsdWVzIGFyZTpcdTAwM2Niclx1MDAzZVxuYE5ldE9ic2VydkRyb3BwZWRGbG93c2AsIHdoaWNoIGlzIHRyaWdnZXJlZCB3aGVuIHRoZSBlQlBGIGFnZW50IGlzIG1pc3NpbmcgcGFja2V0cyBvciBmbG93cywgc3VjaCBhcyB3aGVuIHRoZSBCUEYgaGFzaG1hcCBpcyBidXN5IG9yIGZ1bGwsIG9yIHRoZSBjYXBhY2l0eSBsaW1pdGVyIGJlaW5nIHRyaWdnZXJlZC5cdTAwM2Niclx1MDAzZSIsImVudW0iOlsiTmV0T2JzZXJ2RHJvcHBlZEZsb3dzIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImVuYWJsZSI6eyJkZXNjcmlwdGlvbiI6IlNldCBgZW5hYmxlYCB0byBgZmFsc2VgIHRvIGRpc2FibGUgZUJQRiBhZ2VudCBtZXRyaWNzIGNvbGxlY3Rpb24sIGJ5IGRlZmF1bHQgaXQncyBgdHJ1ZWAuIiwidHlwZSI6ImJvb2xlYW4ifSwic2VydmVyIjp7ImRlc2NyaXB0aW9uIjoiTWV0cmljcyBzZXJ2ZXIgZW5kcG9pbnQgY29uZmlndXJhdGlvbiBmb3IgUHJvbWV0aGV1cyBzY3JhcGVyIiwicHJvcGVydGllcyI6eyJwb3J0Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIHByb21ldGhldXMgSFRUUCBwb3J0IiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2NTUzNSwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwidGxzIjp7ImRlc2NyaXB0aW9uIjoiVExTIGNvbmZpZ3VyYXRpb24uIiwicHJvcGVydGllcyI6eyJpbnNlY3VyZVNraXBWZXJpZnkiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiYGluc2VjdXJlU2tpcFZlcmlmeWAgYWxsb3dzIHNraXBwaW5nIGNsaWVudC1zaWRlIHZlcmlmaWNhdGlvbiBvZiB0aGUgcHJvdmlkZWQgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYHByb3ZpZGVkQ2FGaWxlYCBmaWVsZCBpcyBpZ25vcmVkLiIsInR5cGUiOiJib29sZWFuIn0sInByb3ZpZGVkIjp7ImRlc2NyaXB0aW9uIjoiVExTIGNvbmZpZ3VyYXRpb24gd2hlbiBgdHlwZWAgaXMgc2V0IHRvIGBQUk9WSURFRGAuIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGBjb25maWdtYXBgIG9yIGBzZWNyZXRgIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwcm92aWRlZENhRmlsZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byB0aGUgQ0EgZmlsZSB3aGVuIGB0eXBlYCBpcyBzZXQgdG8gYFBST1ZJREVEYC4iLCJwcm9wZXJ0aWVzIjp7ImZpbGUiOnsiZGVzY3JpcHRpb24iOiJGaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVmYXVsdCI6IkRJU0FCTEVEIiwiZGVzY3JpcHRpb24iOiJTZWxlY3QgdGhlIHR5cGUgb2YgVExTIGNvbmZpZ3VyYXRpb246XHUwMDNjYnJcdTAwM2Vcbi0gYERJU0FCTEVEYCAoZGVmYXVsdCkgdG8gbm90IGNvbmZpZ3VyZSBUTFMgZm9yIHRoZSBlbmRwb2ludC5cbi0gYFBST1ZJREVEYCB0byBtYW51YWxseSBwcm92aWRlIGNlcnQgZmlsZSBhbmQgYSBrZXkgZmlsZS4gW1Vuc3VwcG9ydGVkICgqKV0uXG4tIGBBVVRPYCB0byB1c2UgT3BlblNoaWZ0IGF1dG8gZ2VuZXJhdGVkIGNlcnRpZmljYXRlIHVzaW5nIGFubm90YXRpb25zLiIsImVudW0iOlsiRElTQUJMRUQiLCJQUk9WSURFRCIsIkFVVE8iXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInByaXZpbGVnZWQiOnsiZGVzY3JpcHRpb24iOiJQcml2aWxlZ2VkIG1vZGUgZm9yIHRoZSBlQlBGIEFnZW50IGNvbnRhaW5lci4gV2hlbiBpZ25vcmVkIG9yIHNldCB0byBgZmFsc2VgLCB0aGUgb3BlcmF0b3Igc2V0c1xuZ3JhbnVsYXIgY2FwYWJpbGl0aWVzIChCUEYsIFBFUkZNT04sIE5FVF9BRE1JTiwgU1lTX1JFU09VUkNFKSB0byB0aGUgY29udGFpbmVyLlxuSWYgZm9yIHNvbWUgcmVhc29uIHRoZXNlIGNhcGFiaWxpdGllcyBjYW5ub3QgYmUgc2V0LCBzdWNoIGFzIGlmIGFuIG9sZCBrZXJuZWwgdmVyc2lvbiBub3Qga25vd2luZyBDQVBfQlBGXG5pcyBpbiB1c2UsIHRoZW4geW91IGNhbiB0dXJuIG9uIHRoaXMgbW9kZSBmb3IgbW9yZSBnbG9iYWwgcHJpdmlsZWdlcy5cblNvbWUgYWdlbnQgZmVhdHVyZXMgcmVxdWlyZSB0aGUgcHJpdmlsZWdlZCBtb2RlLCBzdWNoIGFzIHBhY2tldCBkcm9wcyB0cmFja2luZyAoc2VlIGBmZWF0dXJlc2ApIGFuZCBTUi1JT1Ygc3VwcG9ydC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJyZXNvdXJjZXMiOnsiZGVmYXVsdCI6eyJsaW1pdHMiOnsibWVtb3J5IjoiODAwTWkifSwicmVxdWVzdHMiOnsiY3B1IjoiMTAwbSIsIm1lbW9yeSI6IjUwTWkifX0sImRlc2NyaXB0aW9uIjoiYHJlc291cmNlc2AgYXJlIHRoZSBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZCBieSB0aGlzIGNvbnRhaW5lci5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlXG5EeW5hbWljUmVzb3VyY2VBbGxvY2F0aW9uIGZlYXR1cmUgZ2F0ZS5cblxuVGhpcyBmaWVsZCBpcyBpbW11dGFibGUuIEl0IGNhbiBvbmx5IGJlIHNldCBmb3IgY29udGFpbmVycy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQ2xhaW0gcmVmZXJlbmNlcyBvbmUgZW50cnkgaW4gUG9kU3BlYy5SZXNvdXJjZUNsYWltcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgbWF0Y2ggdGhlIG5hbWUgb2Ygb25lIGVudHJ5IGluIHBvZC5zcGVjLnJlc291cmNlQ2xhaW1zIG9mXG50aGUgUG9kIHdoZXJlIHRoaXMgZmllbGQgaXMgdXNlZC4gSXQgbWFrZXMgdGhhdCByZXNvdXJjZSBhdmFpbGFibGVcbmluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3QiOnsiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGlzIHRoZSBuYW1lIGNob3NlbiBmb3IgYSByZXF1ZXN0IGluIHRoZSByZWZlcmVuY2VkIGNsYWltLlxuSWYgZW1wdHksIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2xhaW0gaXMgbWFkZSBhdmFpbGFibGUsIG90aGVyd2lzZVxub25seSB0aGUgcmVzdWx0IG9mIHRoaXMgcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic2FtcGxpbmciOnsiZGVmYXVsdCI6NTAsImRlc2NyaXB0aW9uIjoiU2FtcGxpbmcgcmF0ZSBvZiB0aGUgZmxvdyByZXBvcnRlci4gMTAwIG1lYW5zIG9uZSBmbG93IG9uIDEwMCBpcyBzZW50LiAwIG9yIDEgbWVhbnMgYWxsIGZsb3dzIGFyZSBzYW1wbGVkLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwiaXBmaXgiOnsiZGVzY3JpcHRpb24iOiJgaXBmaXhgIFtkZXByZWNhdGVkICgqKV0gLSBkZXNjcmliZXMgdGhlIHNldHRpbmdzIHJlbGF0ZWQgdG8gdGhlIElQRklYLWJhc2VkIGZsb3cgcmVwb3J0ZXIgd2hlbiBgc3BlYy5hZ2VudC50eXBlYFxuaXMgc2V0IHRvIGBJUEZJWGAuIiwicHJvcGVydGllcyI6eyJjYWNoZUFjdGl2ZVRpbWVvdXQiOnsiZGVmYXVsdCI6IjIwcyIsImRlc2NyaXB0aW9uIjoiYGNhY2hlQWN0aXZlVGltZW91dGAgaXMgdGhlIG1heCBwZXJpb2QgZHVyaW5nIHdoaWNoIHRoZSByZXBvcnRlciBhZ2dyZWdhdGVzIGZsb3dzIGJlZm9yZSBzZW5kaW5nLiIsInBhdHRlcm4iOiJeXFxkKyhuc3xtc3xzfG0pPyQiLCJ0eXBlIjoic3RyaW5nIn0sImNhY2hlTWF4Rmxvd3MiOnsiZGVmYXVsdCI6NDAwLCJkZXNjcmlwdGlvbiI6ImBjYWNoZU1heEZsb3dzYCBpcyB0aGUgbWF4IG51bWJlciBvZiBmbG93cyBpbiBhbiBhZ2dyZWdhdGU7IHdoZW4gcmVhY2hlZCwgdGhlIHJlcG9ydGVyIHNlbmRzIHRoZSBmbG93cy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sImNsdXN0ZXJOZXR3b3JrT3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJgY2x1c3Rlck5ldHdvcmtPcGVyYXRvcmAgZGVmaW5lcyB0aGUgc2V0dGluZ3MgcmVsYXRlZCB0byB0aGUgT3BlblNoaWZ0IENsdXN0ZXIgTmV0d29yayBPcGVyYXRvciwgd2hlbiBhdmFpbGFibGUuIiwicHJvcGVydGllcyI6eyJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6Im9wZW5zaGlmdC1uZXR3b3JrLW9wZXJhdG9yIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2UgIHdoZXJlIHRoZSBjb25maWcgbWFwIGlzIGdvaW5nIHRvIGJlIGRlcGxveWVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZm9yY2VTYW1wbGVBbGwiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiYGZvcmNlU2FtcGxlQWxsYCBhbGxvd3MgZGlzYWJsaW5nIHNhbXBsaW5nIGluIHRoZSBJUEZJWC1iYXNlZCBmbG93IHJlcG9ydGVyLlxuSXQgaXMgbm90IHJlY29tbWVuZGVkIHRvIHNhbXBsZSBhbGwgdGhlIHRyYWZmaWMgd2l0aCBJUEZJWCwgYXMgaXQgbWlnaHQgZ2VuZXJhdGUgY2x1c3RlciBpbnN0YWJpbGl0eS5cbklmIHlvdSBSRUFMTFkgd2FudCB0byBkbyB0aGF0LCBzZXQgdGhpcyBmbGFnIHRvIGB0cnVlYC4gVXNlIGF0IHlvdXIgb3duIHJpc2suXG5XaGVuIGl0IGlzIHNldCB0byBgdHJ1ZWAsIHRoZSB2YWx1ZSBvZiBgc2FtcGxpbmdgIGlzIGlnbm9yZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwib3ZuS3ViZXJuZXRlcyI6eyJkZXNjcmlwdGlvbiI6ImBvdm5LdWJlcm5ldGVzYCBkZWZpbmVzIHRoZSBzZXR0aW5ncyBvZiB0aGUgT1ZOLUt1YmVybmV0ZXMgQ05JLCB3aGVuIGF2YWlsYWJsZS4gVGhpcyBjb25maWd1cmF0aW9uIGlzIHVzZWQgd2hlbiB1c2luZyBPVk4ncyBJUEZJWCBleHBvcnRzLCB3aXRob3V0IE9wZW5TaGlmdC4gV2hlbiB1c2luZyBPcGVuU2hpZnQsIHJlZmVyIHRvIHRoZSBgY2x1c3Rlck5ldHdvcmtPcGVyYXRvcmAgcHJvcGVydHkgaW5zdGVhZC4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lck5hbWUiOnsiZGVmYXVsdCI6Im92bmt1YmUtbm9kZSIsImRlc2NyaXB0aW9uIjoiYGNvbnRhaW5lck5hbWVgIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIGNvbnRhaW5lciB0byBjb25maWd1cmUgZm9yIElQRklYLiIsInR5cGUiOiJzdHJpbmcifSwiZGFlbW9uU2V0TmFtZSI6eyJkZWZhdWx0Ijoib3Zua3ViZS1ub2RlIiwiZGVzY3JpcHRpb24iOiJgZGFlbW9uU2V0TmFtZWAgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgRGFlbW9uU2V0IGNvbnRyb2xsaW5nIHRoZSBPVk4tS3ViZXJuZXRlcyBwb2RzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiJvdm4ta3ViZXJuZXRlcyIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIHdoZXJlIE9WTi1LdWJlcm5ldGVzIHBvZHMgYXJlIGRlcGxveWVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic2FtcGxpbmciOnsiZGVmYXVsdCI6NDAwLCJkZXNjcmlwdGlvbiI6ImBzYW1wbGluZ2AgaXMgdGhlIHNhbXBsaW5nIHJhdGUgb24gdGhlIHJlcG9ydGVyLiAxMDAgbWVhbnMgb25lIGZsb3cgb24gMTAwIGlzIHNlbnQuXG5UbyBlbnN1cmUgY2x1c3RlciBzdGFiaWxpdHksIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBzZXQgYSB2YWx1ZSBiZWxvdyAyLlxuSWYgeW91IHJlYWxseSB3YW50IHRvIHNhbXBsZSBldmVyeSBwYWNrZXQsIHdoaWNoIG1pZ2h0IGltcGFjdCB0aGUgY2x1c3RlciBzdGFiaWxpdHksXG5yZWZlciB0byBgZm9yY2VTYW1wbGVBbGxgLiBBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHVzZSB0aGUgZUJQRiBBZ2VudCBpbnN0ZWFkIG9mIElQRklYLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZWZhdWx0IjoiRUJQRiIsImRlc2NyaXB0aW9uIjoiYHR5cGVgIFtkZXByZWNhdGVkICgqKV0gc2VsZWN0cyB0aGUgZmxvd3MgdHJhY2luZyBhZ2VudC4gVGhlIG9ubHkgcG9zc2libGUgdmFsdWUgaXMgYEVCUEZgIChkZWZhdWx0KSwgdG8gdXNlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBlQlBGIGFnZW50Llx1MDAzY2JyXHUwMDNlXG5QcmV2aW91c2x5LCB1c2luZyBhbiBJUEZJWCBjb2xsZWN0b3Igd2FzIGFsbG93ZWQsIGJ1dCB3YXMgZGVwcmVjYXRlZCBhbmQgaXQgaXMgbm93IHJlbW92ZWQuXHUwMDNjYnJcdTAwM2VcblNldHRpbmcgYElQRklYYCBpcyBpZ25vcmVkIGFuZCBzdGlsbCB1c2UgdGhlIGVCUEYgQWdlbnQuXG5TaW5jZSB0aGVyZSBpcyBvbmx5IGEgc2luZ2xlIG9wdGlvbiBoZXJlLCB0aGlzIGZpZWxkIHdpbGwgYmUgcmVtb3ZlIGluIGEgZnV0dXJlIEFQSSB2ZXJzaW9uLiIsImVudW0iOlsiRUJQRiIsIklQRklYIl0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY29uc29sZVBsdWdpbiI6eyJkZXNjcmlwdGlvbiI6ImBjb25zb2xlUGx1Z2luYCBkZWZpbmVzIHRoZSBzZXR0aW5ncyByZWxhdGVkIHRvIHRoZSBPcGVuU2hpZnQgQ29uc29sZSBwbHVnaW4sIHdoZW4gYXZhaWxhYmxlLiIsInByb3BlcnRpZXMiOnsiYXV0b3NjYWxlciI6eyJkZXNjcmlwdGlvbiI6ImBhdXRvc2NhbGVyYCBzcGVjIG9mIGEgaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlciB0byBzZXQgdXAgZm9yIHRoZSBwbHVnaW4gRGVwbG95bWVudC4iLCJwcm9wZXJ0aWVzIjp7Im1heFJlcGxpY2FzIjp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiYG1heFJlcGxpY2FzYCBpcyB0aGUgdXBwZXIgbGltaXQgZm9yIHRoZSBudW1iZXIgb2YgcG9kcyB0aGF0IGNhbiBiZSBzZXQgYnkgdGhlIGF1dG9zY2FsZXI7IGNhbm5vdCBiZSBzbWFsbGVyIHRoYW4gTWluUmVwbGljYXMuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtZXRyaWNzIjp7ImRlc2NyaXB0aW9uIjoiTWV0cmljcyB1c2VkIGJ5IHRoZSBwb2QgYXV0b3NjYWxlci4gRm9yIGRvY3VtZW50YXRpb24sIHJlZmVyIHRvIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL3JlZmVyZW5jZS9rdWJlcm5ldGVzLWFwaS93b3JrbG9hZC1yZXNvdXJjZXMvaG9yaXpvbnRhbC1wb2QtYXV0b3NjYWxlci12Mi8iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lclJlc291cmNlIjp7InByb3BlcnRpZXMiOnsiY29udGFpbmVyIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInRhcmdldCI6eyJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJjb250YWluZXIiLCJuYW1lIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwiZXh0ZXJuYWwiOnsicHJvcGVydGllcyI6eyJtZXRyaWMiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7Iml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2V5Ijp7InR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidGFyZ2V0Ijp7InByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm1ldHJpYyIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sIm9iamVjdCI6eyJwcm9wZXJ0aWVzIjp7ImRlc2NyaWJlZE9iamVjdCI6eyJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpYyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJrZXkiOnsidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiZGVzY3JpYmVkT2JqZWN0IiwibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwicG9kcyI6eyJwcm9wZXJ0aWVzIjp7Im1ldHJpYyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJrZXkiOnsidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2UiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7InByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWluUmVwbGljYXMiOnsiZGVzY3JpcHRpb24iOiJgbWluUmVwbGljYXNgIGlzIHRoZSBsb3dlciBsaW1pdCBmb3IgdGhlIG51bWJlciBvZiByZXBsaWNhcyB0byB3aGljaCB0aGUgYXV0b3NjYWxlclxuY2FuIHNjYWxlIGRvd24uIEl0IGRlZmF1bHRzIHRvIDEgcG9kLiBtaW5SZXBsaWNhcyBpcyBhbGxvd2VkIHRvIGJlIDAgaWYgdGhlXG5hbHBoYSBmZWF0dXJlIGdhdGUgSFBBU2NhbGVUb1plcm8gaXMgZW5hYmxlZCBhbmQgYXQgbGVhc3Qgb25lIE9iamVjdCBvciBFeHRlcm5hbFxubWV0cmljIGlzIGNvbmZpZ3VyZWQuIFNjYWxpbmcgaXMgYWN0aXZlIGFzIGxvbmcgYXMgYXQgbGVhc3Qgb25lIG1ldHJpYyB2YWx1ZSBpc1xuYXZhaWxhYmxlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwic3RhdHVzIjp7ImRlZmF1bHQiOiJESVNBQkxFRCIsImRlc2NyaXB0aW9uIjoiYHN0YXR1c2AgZGVzY3JpYmVzIHRoZSBkZXNpcmVkIHN0YXR1cyByZWdhcmRpbmcgZGVwbG95aW5nIGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIuXHUwMDNjYnJcdTAwM2Vcbi0gYERJU0FCTEVEYCBkb2VzIG5vdCBkZXBsb3kgYW4gaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlci5cdTAwM2Niclx1MDAzZVxuLSBgRU5BQkxFRGAgZGVwbG95cyBhbiBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyLlx1MDAzY2JyXHUwMDNlIiwiZW51bSI6WyJESVNBQkxFRCIsIkVOQUJMRUQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJFbmFibGVzIHRoZSBjb25zb2xlIHBsdWdpbiBkZXBsb3ltZW50LlxuYHNwZWMubG9raS5lbmFibGVgIG11c3QgYWxzbyBiZSBgdHJ1ZWAiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbWFnZVB1bGxQb2xpY3kiOnsiZGVmYXVsdCI6IklmTm90UHJlc2VudCIsImRlc2NyaXB0aW9uIjoiYGltYWdlUHVsbFBvbGljeWAgaXMgdGhlIEt1YmVybmV0ZXMgcHVsbCBwb2xpY3kgZm9yIHRoZSBpbWFnZSBkZWZpbmVkIGFib3ZlIiwiZW51bSI6WyJJZk5vdFByZXNlbnQiLCJBbHdheXMiLCJOZXZlciJdLCJ0eXBlIjoic3RyaW5nIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJpbmZvIiwiZGVzY3JpcHRpb24iOiJgbG9nTGV2ZWxgIGZvciB0aGUgY29uc29sZSBwbHVnaW4gYmFja2VuZCIsImVudW0iOlsidHJhY2UiLCJkZWJ1ZyIsImluZm8iLCJ3YXJuIiwiZXJyb3IiLCJmYXRhbCIsInBhbmljIl0sInR5cGUiOiJzdHJpbmcifSwicG9ydCI6eyJkZWZhdWx0Ijo5MDAxLCJkZXNjcmlwdGlvbiI6ImBwb3J0YCBpcyB0aGUgcGx1Z2luIHNlcnZpY2UgcG9ydC4gRG8gbm90IHVzZSA5MDAyLCB3aGljaCBpcyByZXNlcnZlZCBmb3IgbWV0cmljcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjY1NTM1LCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJwb3J0TmFtaW5nIjp7ImRlZmF1bHQiOnsiZW5hYmxlIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJgcG9ydE5hbWluZ2AgZGVmaW5lcyB0aGUgY29uZmlndXJhdGlvbiBvZiB0aGUgcG9ydC10by1zZXJ2aWNlIG5hbWUgdHJhbnNsYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSB0aGUgY29uc29sZSBwbHVnaW4gcG9ydC10by1zZXJ2aWNlIG5hbWUgdHJhbnNsYXRpb24iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwb3J0TmFtZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6ImBwb3J0TmFtZXNgIGRlZmluZXMgYWRkaXRpb25hbCBwb3J0IG5hbWVzIHRvIHVzZSBpbiB0aGUgY29uc29sZSxcbmZvciBleGFtcGxlLCBgcG9ydE5hbWVzOiB7XCIzMTAwXCI6IFwibG9raVwifWAuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJxdWlja0ZpbHRlcnMiOnsiZGVmYXVsdCI6W3siZGVmYXVsdCI6dHJ1ZSwiZmlsdGVyIjp7ImZsb3dfbGF5ZXIiOiJhcHAifSwibmFtZSI6IkFwcGxpY2F0aW9ucyJ9LHsiZmlsdGVyIjp7ImZsb3dfbGF5ZXIiOiJpbmZyYSJ9LCJuYW1lIjoiSW5mcmFzdHJ1Y3R1cmUifSx7ImRlZmF1bHQiOnRydWUsImZpbHRlciI6eyJkc3Rfa2luZCI6IlBvZCIsInNyY19raW5kIjoiUG9kIn0sIm5hbWUiOiJQb2RzIG5ldHdvcmsifSx7ImZpbHRlciI6eyJkc3Rfa2luZCI6IlNlcnZpY2UifSwibmFtZSI6IlNlcnZpY2VzIG5ldHdvcmsifV0sImRlc2NyaXB0aW9uIjoiYHF1aWNrRmlsdGVyc2AgY29uZmlndXJlcyBxdWljayBmaWx0ZXIgcHJlc2V0cyBmb3IgdGhlIENvbnNvbGUgcGx1Z2luIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJgUXVpY2tGaWx0ZXJgIGRlZmluZXMgcHJlc2V0IGNvbmZpZ3VyYXRpb24gZm9yIENvbnNvbGUncyBxdWljayBmaWx0ZXJzIiwicHJvcGVydGllcyI6eyJkZWZhdWx0Ijp7ImRlc2NyaXB0aW9uIjoiYGRlZmF1bHRgIGRlZmluZXMgd2hldGhlciB0aGlzIGZpbHRlciBzaG91bGQgYmUgYWN0aXZlIGJ5IGRlZmF1bHQgb3Igbm90IiwidHlwZSI6ImJvb2xlYW4ifSwiZmlsdGVyIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJgZmlsdGVyYCBpcyBhIHNldCBvZiBrZXlzIGFuZCB2YWx1ZXMgdG8gYmUgc2V0IHdoZW4gdGhpcyBmaWx0ZXIgaXMgc2VsZWN0ZWQuIEVhY2gga2V5IGNhbiByZWxhdGUgdG8gYSBsaXN0IG9mIHZhbHVlcyB1c2luZyBhIGNvbWEtc2VwYXJhdGVkIHN0cmluZyxcbmZvciBleGFtcGxlLCBgZmlsdGVyOiB7XCJzcmNfbmFtZXNwYWNlXCI6IFwibmFtZXNwYWNlMSxuYW1lc3BhY2UyXCJ9YC4iLCJ0eXBlIjoib2JqZWN0In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBmaWx0ZXIsIHRoYXQgaXMgZGlzcGxheWVkIGluIHRoZSBDb25zb2xlIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiZmlsdGVyIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJyZWdpc3RlciI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6ImByZWdpc3RlcmAgYWxsb3dzLCB3aGVuIHNldCB0byBgdHJ1ZWAsIHRvIGF1dG9tYXRpY2FsbHkgcmVnaXN0ZXIgdGhlIHByb3ZpZGVkIGNvbnNvbGUgcGx1Z2luIHdpdGggdGhlIE9wZW5TaGlmdCBDb25zb2xlIG9wZXJhdG9yLlxuV2hlbiBzZXQgdG8gYGZhbHNlYCwgeW91IGNhbiBzdGlsbCByZWdpc3RlciBpdCBtYW51YWxseSBieSBlZGl0aW5nIGNvbnNvbGUub3BlcmF0b3Iub3BlbnNoaWZ0LmlvL2NsdXN0ZXIgd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6XG5gb2MgcGF0Y2ggY29uc29sZS5vcGVyYXRvci5vcGVuc2hpZnQuaW8gY2x1c3RlciAtLXR5cGU9J2pzb24nIC1wICdbe1wib3BcIjogXCJhZGRcIiwgXCJwYXRoXCI6IFwiL3NwZWMvcGx1Z2lucy8tXCIsIFwidmFsdWVcIjogXCJuZXRvYnNlcnYtcGx1Z2luXCJ9XSdgIiwidHlwZSI6ImJvb2xlYW4ifSwicmVwbGljYXMiOnsiZGVmYXVsdCI6MSwiZGVzY3JpcHRpb24iOiJgcmVwbGljYXNgIGRlZmluZXMgdGhlIG51bWJlciBvZiByZXBsaWNhcyAocG9kcykgdG8gc3RhcnQuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZXNvdXJjZXMiOnsiZGVmYXVsdCI6eyJsaW1pdHMiOnsibWVtb3J5IjoiMTAwTWkifSwicmVxdWVzdHMiOnsiY3B1IjoiMTAwbSIsIm1lbW9yeSI6IjUwTWkifX0sImRlc2NyaXB0aW9uIjoiYHJlc291cmNlc2AsIGluIHRlcm1zIG9mIGNvbXB1dGUgcmVzb3VyY2VzLCByZXF1aXJlZCBieSB0aGlzIGNvbnRhaW5lci5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwicHJvcGVydGllcyI6eyJjbGFpbXMiOnsiZGVzY3JpcHRpb24iOiJDbGFpbXMgbGlzdHMgdGhlIG5hbWVzIG9mIHJlc291cmNlcywgZGVmaW5lZCBpbiBzcGVjLnJlc291cmNlQ2xhaW1zLFxudGhhdCBhcmUgdXNlZCBieSB0aGlzIGNvbnRhaW5lci5cblxuVGhpcyBpcyBhbiBhbHBoYSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgdGhlXG5EeW5hbWljUmVzb3VyY2VBbGxvY2F0aW9uIGZlYXR1cmUgZ2F0ZS5cblxuVGhpcyBmaWVsZCBpcyBpbW11dGFibGUuIEl0IGNhbiBvbmx5IGJlIHNldCBmb3IgY29udGFpbmVycy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlJlc291cmNlQ2xhaW0gcmVmZXJlbmNlcyBvbmUgZW50cnkgaW4gUG9kU3BlYy5SZXNvdXJjZUNsYWltcy4iLCJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG11c3QgbWF0Y2ggdGhlIG5hbWUgb2Ygb25lIGVudHJ5IGluIHBvZC5zcGVjLnJlc291cmNlQ2xhaW1zIG9mXG50aGUgUG9kIHdoZXJlIHRoaXMgZmllbGQgaXMgdXNlZC4gSXQgbWFrZXMgdGhhdCByZXNvdXJjZSBhdmFpbGFibGVcbmluc2lkZSBhIGNvbnRhaW5lci4iLCJ0eXBlIjoic3RyaW5nIn0sInJlcXVlc3QiOnsiZGVzY3JpcHRpb24iOiJSZXF1ZXN0IGlzIHRoZSBuYW1lIGNob3NlbiBmb3IgYSByZXF1ZXN0IGluIHRoZSByZWZlcmVuY2VkIGNsYWltLlxuSWYgZW1wdHksIGV2ZXJ5dGhpbmcgZnJvbSB0aGUgY2xhaW0gaXMgbWFkZSBhdmFpbGFibGUsIG90aGVyd2lzZVxub25seSB0aGUgcmVzdWx0IG9mIHRoaXMgcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtbWFwLWtleXMiOlsibmFtZSJdLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoibWFwIn0sImxpbWl0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJMaW1pdHMgZGVzY3JpYmVzIHRoZSBtYXhpbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyBhbGxvd2VkLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In0sInJlcXVlc3RzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IlJlcXVlc3RzIGRlc2NyaWJlcyB0aGUgbWluaW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQuXG5JZiBSZXF1ZXN0cyBpcyBvbWl0dGVkIGZvciBhIGNvbnRhaW5lciwgaXQgZGVmYXVsdHMgdG8gTGltaXRzIGlmIHRoYXQgaXMgZXhwbGljaXRseSBzcGVjaWZpZWQsXG5vdGhlcndpc2UgdG8gYW4gaW1wbGVtZW50YXRpb24tZGVmaW5lZCB2YWx1ZS4gUmVxdWVzdHMgY2Fubm90IGV4Y2VlZCBMaW1pdHMuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiZGVwbG95bWVudE1vZGVsIjp7ImRlZmF1bHQiOiJESVJFQ1QiLCJkZXNjcmlwdGlvbiI6ImBkZXBsb3ltZW50TW9kZWxgIGRlZmluZXMgdGhlIGRlc2lyZWQgdHlwZSBvZiBkZXBsb3ltZW50IGZvciBmbG93IHByb2Nlc3NpbmcuIFBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2Vcbi0gYERJUkVDVGAgKGRlZmF1bHQpIHRvIG1ha2UgdGhlIGZsb3cgcHJvY2Vzc29yIGxpc3RlbmluZyBkaXJlY3RseSBmcm9tIHRoZSBhZ2VudHMuXHUwMDNjYnJcdTAwM2Vcbi0gYEtBRktBYCB0byBtYWtlIGZsb3dzIHNlbnQgdG8gYSBLYWZrYSBwaXBlbGluZSBiZWZvcmUgY29uc3VtcHRpb24gYnkgdGhlIHByb2Nlc3Nvci5cdTAwM2Niclx1MDAzZVxuS2Fma2EgY2FuIHByb3ZpZGUgYmV0dGVyIHNjYWxhYmlsaXR5LCByZXNpbGllbmN5LCBhbmQgaGlnaCBhdmFpbGFiaWxpdHkgKGZvciBtb3JlIGRldGFpbHMsIHNlZSBodHRwczovL3d3dy5yZWRoYXQuY29tL2VuL3RvcGljcy9pbnRlZ3JhdGlvbi93aGF0LWlzLWFwYWNoZS1rYWZrYSkuIiwiZW51bSI6WyJESVJFQ1QiLCJLQUZLQSJdLCJ0eXBlIjoic3RyaW5nIn0sImV4cG9ydGVycyI6eyJkZXNjcmlwdGlvbiI6ImBleHBvcnRlcnNgIGRlZmluZSBhZGRpdGlvbmFsIG9wdGlvbmFsIGV4cG9ydGVycyBmb3IgY3VzdG9tIGNvbnN1bXB0aW9uIG9yIHN0b3JhZ2UuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJgRmxvd0NvbGxlY3RvckV4cG9ydGVyYCBkZWZpbmVzIGFuIGFkZGl0aW9uYWwgZXhwb3J0ZXIgdG8gc2VuZCBlbnJpY2hlZCBmbG93cyB0by4iLCJwcm9wZXJ0aWVzIjp7ImlwZml4Ijp7ImRlc2NyaXB0aW9uIjoiSVBGSVggY29uZmlndXJhdGlvbiwgc3VjaCBhcyB0aGUgSVAgYWRkcmVzcyBhbmQgcG9ydCB0byBzZW5kIGVucmljaGVkIElQRklYIGZsb3dzIHRvLiIsInByb3BlcnRpZXMiOnsidGFyZ2V0SG9zdCI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBJUEZJWCBleHRlcm5hbCByZWNlaXZlciIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0UG9ydCI6eyJkZXNjcmlwdGlvbiI6IlBvcnQgZm9yIHRoZSBJUEZJWCBleHRlcm5hbCByZWNlaXZlciIsInR5cGUiOiJpbnRlZ2VyIn0sInRyYW5zcG9ydCI6eyJkZXNjcmlwdGlvbiI6IlRyYW5zcG9ydCBwcm90b2NvbCAoYFRDUGAgb3IgYFVEUGApIHRvIGJlIHVzZWQgZm9yIHRoZSBJUEZJWCBjb25uZWN0aW9uLCBkZWZhdWx0cyB0byBgVENQYC4iLCJlbnVtIjpbIlRDUCIsIlVEUCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0YXJnZXRIb3N0IiwidGFyZ2V0UG9ydCJdLCJ0eXBlIjoib2JqZWN0In0sImthZmthIjp7ImRlc2NyaXB0aW9uIjoiS2Fma2EgY29uZmlndXJhdGlvbiwgc3VjaCBhcyB0aGUgYWRkcmVzcyBhbmQgdG9waWMsIHRvIHNlbmQgZW5yaWNoZWQgZmxvd3MgdG8uIiwicHJvcGVydGllcyI6eyJhZGRyZXNzIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6IkFkZHJlc3Mgb2YgdGhlIEthZmthIHNlcnZlciIsInR5cGUiOiJzdHJpbmcifSwic2FzbCI6eyJkZXNjcmlwdGlvbiI6IlNBU0wgYXV0aGVudGljYXRpb24gY29uZmlndXJhdGlvbi4gW1Vuc3VwcG9ydGVkICgqKV0uIiwicHJvcGVydGllcyI6eyJjbGllbnRJRFJlZmVyZW5jZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byB0aGUgc2VjcmV0IG9yIGNvbmZpZyBtYXAgY29udGFpbmluZyB0aGUgY2xpZW50IElEIiwicHJvcGVydGllcyI6eyJmaWxlIjp7ImRlc2NyaXB0aW9uIjoiRmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIHRoZSBmaWxlIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIHRoZSBmaWxlLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBmaWxlIHJlZmVyZW5jZTogXCJjb25maWdtYXBcIiBvciBcInNlY3JldFwiIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjbGllbnRTZWNyZXRSZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gdGhlIHNlY3JldCBvciBjb25maWcgbWFwIGNvbnRhaW5pbmcgdGhlIGNsaWVudCBzZWNyZXQiLCJwcm9wZXJ0aWVzIjp7ImZpbGUiOnsiZGVzY3JpcHRpb24iOiJGaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVmYXVsdCI6IkRJU0FCTEVEIiwiZGVzY3JpcHRpb24iOiJUeXBlIG9mIFNBU0wgYXV0aGVudGljYXRpb24gdG8gdXNlLCBvciBgRElTQUJMRURgIGlmIFNBU0wgaXMgbm90IHVzZWQiLCJlbnVtIjpbIkRJU0FCTEVEIiwiUExBSU4iLCJTQ1JBTS1TSEE1MTIiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0bHMiOnsiZGVzY3JpcHRpb24iOiJUTFMgY2xpZW50IGNvbmZpZ3VyYXRpb24uIFdoZW4gdXNpbmcgVExTLCB2ZXJpZnkgdGhhdCB0aGUgYWRkcmVzcyBtYXRjaGVzIHRoZSBLYWZrYSBwb3J0IHVzZWQgZm9yIFRMUywgZ2VuZXJhbGx5IDkwOTMuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGBjb25maWdtYXBgIG9yIGBzZWNyZXRgIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGBjb25maWdtYXBgIG9yIGBzZWNyZXRgIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b3BpYyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJLYWZrYSB0b3BpYyB0byB1c2UuIEl0IG11c3QgZXhpc3QuIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBkb2VzIG5vdCBjcmVhdGUgaXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRkcmVzcyIsInRvcGljIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6ImB0eXBlYCBzZWxlY3RzIHRoZSB0eXBlIG9mIGV4cG9ydGVycy4gVGhlIGF2YWlsYWJsZSBvcHRpb25zIGFyZSBgS0FGS0FgIGFuZCBgSVBGSVhgLiIsImVudW0iOlsiS0FGS0EiLCJJUEZJWCJdLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sImthZmthIjp7ImRlc2NyaXB0aW9uIjoiS2Fma2EgY29uZmlndXJhdGlvbiwgYWxsb3dpbmcgdG8gdXNlIEthZmthIGFzIGEgYnJva2VyIGFzIHBhcnQgb2YgdGhlIGZsb3cgY29sbGVjdGlvbiBwaXBlbGluZS4gQXZhaWxhYmxlIHdoZW4gdGhlIGBzcGVjLmRlcGxveW1lbnRNb2RlbGAgaXMgYEtBRktBYC4iLCJwcm9wZXJ0aWVzIjp7ImFkZHJlc3MiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiQWRkcmVzcyBvZiB0aGUgS2Fma2Egc2VydmVyIiwidHlwZSI6InN0cmluZyJ9LCJzYXNsIjp7ImRlc2NyaXB0aW9uIjoiU0FTTCBhdXRoZW50aWNhdGlvbiBjb25maWd1cmF0aW9uLiBbVW5zdXBwb3J0ZWQgKCopXS4iLCJwcm9wZXJ0aWVzIjp7ImNsaWVudElEUmVmZXJlbmNlIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIHRoZSBzZWNyZXQgb3IgY29uZmlnIG1hcCBjb250YWluaW5nIHRoZSBjbGllbnQgSUQiLCJwcm9wZXJ0aWVzIjp7ImZpbGUiOnsiZGVzY3JpcHRpb24iOiJGaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImNsaWVudFNlY3JldFJlZmVyZW5jZSI6eyJkZXNjcmlwdGlvbiI6IlJlZmVyZW5jZSB0byB0aGUgc2VjcmV0IG9yIGNvbmZpZyBtYXAgY29udGFpbmluZyB0aGUgY2xpZW50IHNlY3JldCIsInByb3BlcnRpZXMiOnsiZmlsZSI6eyJkZXNjcmlwdGlvbiI6IkZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyB0aGUgZmlsZSIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyB0aGUgZmlsZS4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgZmlsZSByZWZlcmVuY2U6IFwiY29uZmlnbWFwXCIgb3IgXCJzZWNyZXRcIiIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZWZhdWx0IjoiRElTQUJMRUQiLCJkZXNjcmlwdGlvbiI6IlR5cGUgb2YgU0FTTCBhdXRoZW50aWNhdGlvbiB0byB1c2UsIG9yIGBESVNBQkxFRGAgaWYgU0FTTCBpcyBub3QgdXNlZCIsImVudW0iOlsiRElTQUJMRUQiLCJQTEFJTiIsIlNDUkFNLVNIQTUxMiJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjbGllbnQgY29uZmlndXJhdGlvbi4gV2hlbiB1c2luZyBUTFMsIHZlcmlmeSB0aGF0IHRoZSBhZGRyZXNzIG1hdGNoZXMgdGhlIEthZmthIHBvcnQgdXNlZCBmb3IgVExTLCBnZW5lcmFsbHkgOTA5My4iLCJwcm9wZXJ0aWVzIjp7ImNhQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImBjYUNlcnRgIGRlZmluZXMgdGhlIHJlZmVyZW5jZSBvZiB0aGUgY2VydGlmaWNhdGUgZm9yIHRoZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiYGNlcnRGaWxlYCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0S2V5YCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4gT21pdCB3aGVuIHRoZSBrZXkgaXMgbm90IG5lY2Vzc2FyeS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImVuYWJsZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJFbmFibGUgVExTIiwidHlwZSI6ImJvb2xlYW4ifSwiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBpbnNlY3VyZVNraXBWZXJpZnlgIGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHNlcnZlciBjZXJ0aWZpY2F0ZS5cbklmIHNldCB0byBgdHJ1ZWAsIHRoZSBgY2FDZXJ0YCBmaWVsZCBpcyBpZ25vcmVkLiIsInR5cGUiOiJib29sZWFuIn0sInVzZXJDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiYHVzZXJDZXJ0YCBkZWZpbmVzIHRoZSB1c2VyIGNlcnRpZmljYXRlIHJlZmVyZW5jZSBhbmQgaXMgdXNlZCBmb3IgbVRMUyAoeW91IGNhbiBpZ25vcmUgaXQgd2hlbiB1c2luZyBvbmUtd2F5IFRMUykiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiYGNlcnRGaWxlYCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0S2V5YCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4gT21pdCB3aGVuIHRoZSBrZXkgaXMgbm90IG5lY2Vzc2FyeS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcyIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAiLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInRvcGljIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6IkthZmthIHRvcGljIHRvIHVzZS4gSXQgbXVzdCBleGlzdC4gbmV0d29yayBvYnNlcnZhYmlsaXR5IGRvZXMgbm90IGNyZWF0ZSBpdC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJhZGRyZXNzIiwidG9waWMiXSwidHlwZSI6Im9iamVjdCJ9LCJsb2tpIjp7ImRlc2NyaXB0aW9uIjoiYGxva2lgLCB0aGUgZmxvdyBzdG9yZSwgY2xpZW50IHNldHRpbmdzLiIsInByb3BlcnRpZXMiOnsiYXV0aFRva2VuIjp7ImRlZmF1bHQiOiJESVNBQkxFRCIsImRlc2NyaXB0aW9uIjoiYGF1dGhUb2tlbmAgZGVzY3JpYmVzIHRoZSB3YXkgdG8gZ2V0IGEgdG9rZW4gdG8gYXV0aGVudGljYXRlIHRvIExva2kuXHUwMDNjYnJcdTAwM2Vcbi0gYERJU0FCTEVEYCBkb2VzIG5vdCBzZW5kIGFueSB0b2tlbiB3aXRoIHRoZSByZXF1ZXN0Llx1MDAzY2JyXHUwMDNlXG4tIGBGT1JXQVJEYCBmb3J3YXJkcyB0aGUgdXNlciB0b2tlbiBmb3IgYXV0aG9yaXphdGlvbi5cdTAwM2Niclx1MDAzZVxuLSBgSE9TVGAgW2RlcHJlY2F0ZWQgKCopXSAtIHVzZXMgdGhlIGxvY2FsIHBvZCBzZXJ2aWNlIGFjY291bnQgdG8gYXV0aGVudGljYXRlIHRvIExva2kuXHUwMDNjYnJcdTAwM2VcbldoZW4gdXNpbmcgdGhlIExva2kgT3BlcmF0b3IsIHRoaXMgbXVzdCBiZSBzZXQgdG8gYEZPUldBUkRgLiIsImVudW0iOlsiRElTQUJMRUQiLCJIT1NUIiwiRk9SV0FSRCJdLCJ0eXBlIjoic3RyaW5nIn0sImJhdGNoU2l6ZSI6eyJkZWZhdWx0IjoxMDI0MDAsImRlc2NyaXB0aW9uIjoiYGJhdGNoU2l6ZWAgaXMgdGhlIG1heGltdW0gYmF0Y2ggc2l6ZSAoaW4gYnl0ZXMpIG9mIGxvZ3MgdG8gYWNjdW11bGF0ZSBiZWZvcmUgc2VuZGluZy4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sImJhdGNoV2FpdCI6eyJkZWZhdWx0IjoiMXMiLCJkZXNjcmlwdGlvbiI6ImBiYXRjaFdhaXRgIGlzIHRoZSBtYXhpbXVtIHRpbWUgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhIGJhdGNoLiIsInR5cGUiOiJzdHJpbmcifSwiZW5hYmxlIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiU2V0IGBlbmFibGVgIHRvIGB0cnVlYCB0byBzdG9yZSBmbG93cyBpbiBMb2tpLlxuVGhlIENvbnNvbGUgcGx1Z2luIGNhbiB1c2UgZWl0aGVyIExva2kgb3IgUHJvbWV0aGV1cyBhcyBhIGRhdGEgc291cmNlIGZvciBtZXRyaWNzIChzZWUgYWxzbyBgc3BlYy5wcm9tZXRoZXVzLnF1ZXJpZXJgKSwgb3IgYm90aC5cbk5vdCBhbGwgcXVlcmllcyBhcmUgdHJhbnNwb3NhYmxlIGZyb20gTG9raSB0byBQcm9tZXRoZXVzLiBIZW5jZSwgaWYgTG9raSBpcyBkaXNhYmxlZCwgc29tZSBmZWF0dXJlcyBvZiB0aGUgcGx1Z2luIGFyZSBkaXNhYmxlZCBhcyB3ZWxsLFxuc3VjaCBhcyBnZXR0aW5nIHBlci1wb2QgaW5mb3JtYXRpb24gb3Igdmlld2luZyByYXcgZmxvd3MuXG5JZiBib3RoIFByb21ldGhldXMgYW5kIExva2kgYXJlIGVuYWJsZWQsIFByb21ldGhldXMgdGFrZXMgcHJlY2VkZW5jZSBhbmQgTG9raSBpcyB1c2VkIGFzIGEgZmFsbGJhY2sgZm9yIHF1ZXJpZXMgdGhhdCBQcm9tZXRoZXVzIGNhbm5vdCBoYW5kbGUuXG5JZiB0aGV5IGFyZSBib3RoIGRpc2FibGVkLCB0aGUgQ29uc29sZSBwbHVnaW4gaXMgbm90IGRlcGxveWVkLiIsInR5cGUiOiJib29sZWFuIn0sIm1heEJhY2tvZmYiOnsiZGVmYXVsdCI6IjVzIiwiZGVzY3JpcHRpb24iOiJgbWF4QmFja29mZmAgaXMgdGhlIG1heGltdW0gYmFja29mZiB0aW1lIGZvciBjbGllbnQgY29ubmVjdGlvbiBiZXR3ZWVuIHJldHJpZXMuIiwidHlwZSI6InN0cmluZyJ9LCJtYXhSZXRyaWVzIjp7ImRlZmF1bHQiOjIsImRlc2NyaXB0aW9uIjoiYG1heFJldHJpZXNgIGlzIHRoZSBtYXhpbXVtIG51bWJlciBvZiByZXRyaWVzIGZvciBjbGllbnQgY29ubmVjdGlvbnMuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJtaW5CYWNrb2ZmIjp7ImRlZmF1bHQiOiIxcyIsImRlc2NyaXB0aW9uIjoiYG1pbkJhY2tvZmZgIGlzIHRoZSBpbml0aWFsIGJhY2tvZmYgdGltZSBmb3IgY2xpZW50IGNvbm5lY3Rpb24gYmV0d2VlbiByZXRyaWVzLiIsInR5cGUiOiJzdHJpbmcifSwicXVlcmllclVybCI6eyJkZXNjcmlwdGlvbiI6ImBxdWVyaWVyVVJMYCBzcGVjaWZpZXMgdGhlIGFkZHJlc3Mgb2YgdGhlIExva2kgcXVlcmllciBzZXJ2aWNlLCBpbiBjYXNlIGl0IGlzIGRpZmZlcmVudCBmcm9tIHRoZVxuTG9raSBpbmdlc3RlciBVUkwuIElmIGVtcHR5LCB0aGUgVVJMIHZhbHVlIGlzIHVzZWQgKGFzc3VtaW5nIHRoYXQgdGhlIExva2kgaW5nZXN0ZXJcbmFuZCBxdWVyaWVyIGFyZSBpbiB0aGUgc2FtZSBzZXJ2ZXIpLiBXaGVuIHVzaW5nIHRoZSBMb2tpIE9wZXJhdG9yLCBkbyBub3Qgc2V0IGl0LCBzaW5jZVxuaW5nZXN0aW9uIGFuZCBxdWVyaWVzIHVzZSB0aGUgTG9raSBnYXRld2F5LiIsInR5cGUiOiJzdHJpbmcifSwicmVhZFRpbWVvdXQiOnsiZGVmYXVsdCI6IjMwcyIsImRlc2NyaXB0aW9uIjoiYHJlYWRUaW1lb3V0YCBpcyB0aGUgbWF4aW11bSBsb2tpIHF1ZXJ5IHRvdGFsIHRpbWUgbGltaXQuXG5BIHRpbWVvdXQgb2YgemVybyBtZWFucyBubyB0aW1lb3V0LiIsInR5cGUiOiJzdHJpbmcifSwic3RhdGljTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVmYXVsdCI6eyJhcHAiOiJuZXRvYnNlcnYtZmxvd2NvbGxlY3RvciJ9LCJkZXNjcmlwdGlvbiI6ImBzdGF0aWNMYWJlbHNgIGlzIGEgbWFwIG9mIGNvbW1vbiBsYWJlbHMgdG8gc2V0IG9uIGVhY2ggZmxvdy4iLCJ0eXBlIjoib2JqZWN0In0sInN0YXR1c1RscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjbGllbnQgY29uZmlndXJhdGlvbiBmb3IgTG9raSBzdGF0dXMgVVJMLiIsInByb3BlcnRpZXMiOnsiY2FDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiYGNhQ2VydGAgZGVmaW5lcyB0aGUgcmVmZXJlbmNlIG9mIHRoZSBjZXJ0aWZpY2F0ZSBmb3IgdGhlIENlcnRpZmljYXRlIEF1dGhvcml0eSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZW5hYmxlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSBUTFMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbnNlY3VyZVNraXBWZXJpZnkiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiYGluc2VjdXJlU2tpcFZlcmlmeWAgYWxsb3dzIHNraXBwaW5nIGNsaWVudC1zaWRlIHZlcmlmaWNhdGlvbiBvZiB0aGUgc2VydmVyIGNlcnRpZmljYXRlLlxuSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGBjYUNlcnRgIGZpZWxkIGlzIGlnbm9yZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwidXNlckNlcnQiOnsiZGVzY3JpcHRpb24iOiJgdXNlckNlcnRgIGRlZmluZXMgdGhlIHVzZXIgY2VydGlmaWNhdGUgcmVmZXJlbmNlIGFuZCBpcyB1c2VkIGZvciBtVExTICh5b3UgY2FuIGlnbm9yZSBpdCB3aGVuIHVzaW5nIG9uZS13YXkgVExTKSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzVXJsIjp7ImRlc2NyaXB0aW9uIjoiYHN0YXR1c1VSTGAgc3BlY2lmaWVzIHRoZSBhZGRyZXNzIG9mIHRoZSBMb2tpIGAvcmVhZHlgLCBgL21ldHJpY3NgIGFuZCBgL2NvbmZpZ2AgZW5kcG9pbnRzLCBpbiBjYXNlIGl0IGlzIGRpZmZlcmVudCBmcm9tIHRoZVxuTG9raSBxdWVyaWVyIFVSTC4gSWYgZW1wdHksIHRoZSBgcXVlcmllclVSTGAgdmFsdWUgaXMgdXNlZC5cblRoaXMgaXMgdXNlZnVsIHRvIHNob3cgZXJyb3IgbWVzc2FnZXMgYW5kIHNvbWUgY29udGV4dCBpbiB0aGUgZnJvbnRlbmQuXG5XaGVuIHVzaW5nIHRoZSBMb2tpIE9wZXJhdG9yLCBzZXQgaXQgdG8gdGhlIExva2kgSFRUUCBxdWVyeSBmcm9udGVuZCBzZXJ2aWNlLCBmb3IgZXhhbXBsZVxuaHR0cHM6Ly9sb2tpLXF1ZXJ5LWZyb250ZW5kLWh0dHAubmV0b2JzZXJ2LnN2YzozMTAwLy5cbmBzdGF0dXNUTFNgIGNvbmZpZ3VyYXRpb24gaXMgdXNlZCB3aGVuIGBzdGF0dXNVcmxgIGlzIHNldC4iLCJ0eXBlIjoic3RyaW5nIn0sInRlbmFudElEIjp7ImRlZmF1bHQiOiJuZXRvYnNlcnYiLCJkZXNjcmlwdGlvbiI6ImB0ZW5hbnRJRGAgaXMgdGhlIExva2kgYFgtU2NvcGUtT3JnSURgIHRoYXQgaWRlbnRpZmllcyB0aGUgdGVuYW50IGZvciBlYWNoIHJlcXVlc3QuXG5XaGVuIHVzaW5nIHRoZSBMb2tpIE9wZXJhdG9yLCBzZXQgaXQgdG8gYG5ldHdvcmtgLCB3aGljaCBjb3JyZXNwb25kcyB0byBhIHNwZWNpYWwgdGVuYW50IG1vZGUuIiwidHlwZSI6InN0cmluZyJ9LCJ0aW1lb3V0Ijp7ImRlZmF1bHQiOiIxMHMiLCJkZXNjcmlwdGlvbiI6ImB0aW1lb3V0YCBpcyB0aGUgbWF4aW11bSBwcm9jZXNzb3IgdGltZSBjb25uZWN0aW9uIC8gcmVxdWVzdCBsaW1pdC5cbkEgdGltZW91dCBvZiB6ZXJvIG1lYW5zIG5vIHRpbWVvdXQuIiwidHlwZSI6InN0cmluZyJ9LCJ0bHMiOnsiZGVzY3JpcHRpb24iOiJUTFMgY2xpZW50IGNvbmZpZ3VyYXRpb24gZm9yIExva2kgVVJMLiIsInByb3BlcnRpZXMiOnsiY2FDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiYGNhQ2VydGAgZGVmaW5lcyB0aGUgcmVmZXJlbmNlIG9mIHRoZSBjZXJ0aWZpY2F0ZSBmb3IgdGhlIENlcnRpZmljYXRlIEF1dGhvcml0eSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZW5hYmxlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSBUTFMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbnNlY3VyZVNraXBWZXJpZnkiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiYGluc2VjdXJlU2tpcFZlcmlmeWAgYWxsb3dzIHNraXBwaW5nIGNsaWVudC1zaWRlIHZlcmlmaWNhdGlvbiBvZiB0aGUgc2VydmVyIGNlcnRpZmljYXRlLlxuSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGBjYUNlcnRgIGZpZWxkIGlzIGlnbm9yZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwidXNlckNlcnQiOnsiZGVzY3JpcHRpb24iOiJgdXNlckNlcnRgIGRlZmluZXMgdGhlIHVzZXIgY2VydGlmaWNhdGUgcmVmZXJlbmNlIGFuZCBpcyB1c2VkIGZvciBtVExTICh5b3UgY2FuIGlnbm9yZSBpdCB3aGVuIHVzaW5nIG9uZS13YXkgVExTKSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidXJsIjp7ImRlZmF1bHQiOiJodHRwOi8vbG9raTozMTAwLyIsImRlc2NyaXB0aW9uIjoiYHVybGAgaXMgdGhlIGFkZHJlc3Mgb2YgYW4gZXhpc3RpbmcgTG9raSBzZXJ2aWNlIHRvIHB1c2ggdGhlIGZsb3dzIHRvLiBXaGVuIHVzaW5nIHRoZSBMb2tpIE9wZXJhdG9yLFxuc2V0IGl0IHRvIHRoZSBMb2tpIGdhdGV3YXkgc2VydmljZSB3aXRoIHRoZSBgbmV0d29ya2AgdGVuYW50IHNldCBpbiBwYXRoLCBmb3IgZXhhbXBsZVxuaHR0cHM6Ly9sb2tpLWdhdGV3YXktaHR0cC5uZXRvYnNlcnYuc3ZjOjgwODAvYXBpL2xvZ3MvdjEvbmV0d29yay4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoibmV0b2JzZXJ2IiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IHBvZHMgYXJlIGRlcGxveWVkLiIsInR5cGUiOiJzdHJpbmcifSwicHJvY2Vzc29yIjp7ImRlc2NyaXB0aW9uIjoiYHByb2Nlc3NvcmAgZGVmaW5lcyB0aGUgc2V0dGluZ3Mgb2YgdGhlIGNvbXBvbmVudCB0aGF0IHJlY2VpdmVzIHRoZSBmbG93cyBmcm9tIHRoZSBhZ2VudCxcbmVucmljaGVzIHRoZW0sIGdlbmVyYXRlcyBtZXRyaWNzLCBhbmQgZm9yd2FyZHMgdGhlbSB0byB0aGUgTG9raSBwZXJzaXN0ZW5jZSBsYXllciBhbmQvb3IgYW55IGF2YWlsYWJsZSBleHBvcnRlci4iLCJwcm9wZXJ0aWVzIjp7ImFkZFpvbmUiOnsiZGVzY3JpcHRpb24iOiJgYWRkWm9uZWAgYWxsb3dzIGF2YWlsYWJpbGl0eSB6b25lIGF3YXJlbmVzcyBieSBsYWJlbGxpbmcgZmxvd3Mgd2l0aCB0aGVpciBzb3VyY2UgYW5kIGRlc3RpbmF0aW9uIHpvbmVzLlxuVGhpcyBmZWF0dXJlIHJlcXVpcmVzIHRoZSBcInRvcG9sb2d5Lmt1YmVybmV0ZXMuaW8vem9uZVwiIGxhYmVsIHRvIGJlIHNldCBvbiBub2Rlcy4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJjbHVzdGVyTmFtZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJgY2x1c3Rlck5hbWVgIGlzIHRoZSBuYW1lIG9mIHRoZSBjbHVzdGVyIHRvIGFwcGVhciBpbiB0aGUgZmxvd3MgZGF0YS4gVGhpcyBpcyB1c2VmdWwgaW4gYSBtdWx0aS1jbHVzdGVyIGNvbnRleHQuIFdoZW4gdXNpbmcgT3BlblNoaWZ0LCBsZWF2ZSBlbXB0eSB0byBtYWtlIGl0IGF1dG9tYXRpY2FsbHkgZGV0ZXJtaW5lZC4iLCJ0eXBlIjoic3RyaW5nIn0sImNvbnZlcnNhdGlvbkVuZFRpbWVvdXQiOnsiZGVmYXVsdCI6IjEwcyIsImRlc2NyaXB0aW9uIjoiYGNvbnZlcnNhdGlvbkVuZFRpbWVvdXRgIGlzIHRoZSB0aW1lIHRvIHdhaXQgYWZ0ZXIgYSBuZXR3b3JrIGZsb3cgaXMgcmVjZWl2ZWQsIHRvIGNvbnNpZGVyIHRoZSBjb252ZXJzYXRpb24gZW5kZWQuXG5UaGlzIGRlbGF5IGlzIGlnbm9yZWQgd2hlbiBhIEZJTiBwYWNrZXQgaXMgY29sbGVjdGVkIGZvciBUQ1AgZmxvd3MgKHNlZSBgY29udmVyc2F0aW9uVGVybWluYXRpbmdUaW1lb3V0YCBpbnN0ZWFkKS4iLCJ0eXBlIjoic3RyaW5nIn0sImNvbnZlcnNhdGlvbkhlYXJ0YmVhdEludGVydmFsIjp7ImRlZmF1bHQiOiIzMHMiLCJkZXNjcmlwdGlvbiI6ImBjb252ZXJzYXRpb25IZWFydGJlYXRJbnRlcnZhbGAgaXMgdGhlIHRpbWUgdG8gd2FpdCBiZXR3ZWVuIFwidGlja1wiIGV2ZW50cyBvZiBhIGNvbnZlcnNhdGlvbiIsInR5cGUiOiJzdHJpbmcifSwiY29udmVyc2F0aW9uVGVybWluYXRpbmdUaW1lb3V0Ijp7ImRlZmF1bHQiOiI1cyIsImRlc2NyaXB0aW9uIjoiYGNvbnZlcnNhdGlvblRlcm1pbmF0aW5nVGltZW91dGAgaXMgdGhlIHRpbWUgdG8gd2FpdCBmcm9tIGRldGVjdGVkIEZJTiBmbGFnIHRvIGVuZCBhIGNvbnZlcnNhdGlvbi4gT25seSByZWxldmFudCBmb3IgVENQIGZsb3dzLiIsInR5cGUiOiJzdHJpbmcifSwiZGVidWciOnsiZGVzY3JpcHRpb24iOiJgZGVidWdgIGFsbG93cyBzZXR0aW5nIHNvbWUgYXNwZWN0cyBvZiB0aGUgaW50ZXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgZmxvdyBwcm9jZXNzb3IuXG5UaGlzIHNlY3Rpb24gaXMgYWltZWQgZXhjbHVzaXZlbHkgZm9yIGRlYnVnZ2luZyBhbmQgZmluZS1ncmFpbmVkIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbnMsXG5zdWNoIGFzIGBHT0dDYCBhbmQgYEdPTUFYUFJPQ1NgIGVudiB2YXJzLiBTZXQgdGhlc2UgdmFsdWVzIGF0IHlvdXIgb3duIHJpc2suIiwicHJvcGVydGllcyI6eyJlbnYiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6ImBlbnZgIGFsbG93cyBwYXNzaW5nIGN1c3RvbSBlbnZpcm9ubWVudCB2YXJpYWJsZXMgdG8gdW5kZXJseWluZyBjb21wb25lbnRzLiBVc2VmdWwgZm9yIHBhc3NpbmdcbnNvbWUgdmVyeSBjb25jcmV0ZSBwZXJmb3JtYW5jZS10dW5pbmcgb3B0aW9ucywgc3VjaCBhcyBgR09HQ2AgYW5kIGBHT01BWFBST0NTYCwgdGhhdCBzaG91bGQgbm90IGJlXG5wdWJsaWNseSBleHBvc2VkIGFzIHBhcnQgb2YgdGhlIEZsb3dDb2xsZWN0b3IgZGVzY3JpcHRvciwgYXMgdGhleSBhcmUgb25seSB1c2VmdWxcbmluIGVkZ2UgZGVidWcgb3Igc3VwcG9ydCBzY2VuYXJpb3MuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJkcm9wVW51c2VkRmllbGRzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiYGRyb3BVbnVzZWRGaWVsZHNgIFtkZXByZWNhdGVkICgqKV0gdGhpcyBzZXR0aW5nIGlzIG5vdCB1c2VkIGFueW1vcmUuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlS3ViZVByb2JlcyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6ImBlbmFibGVLdWJlUHJvYmVzYCBpcyBhIGZsYWcgdG8gZW5hYmxlIG9yIGRpc2FibGUgS3ViZXJuZXRlcyBsaXZlbmVzcyBhbmQgcmVhZGluZXNzIHByb2JlcyIsInR5cGUiOiJib29sZWFuIn0sImhlYWx0aFBvcnQiOnsiZGVmYXVsdCI6ODA4MCwiZGVzY3JpcHRpb24iOiJgaGVhbHRoUG9ydGAgaXMgYSBjb2xsZWN0b3IgSFRUUCBwb3J0IGluIHRoZSBQb2QgdGhhdCBleHBvc2VzIHRoZSBoZWFsdGggY2hlY2sgQVBJIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2NTUzNSwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwiaW1hZ2VQdWxsUG9saWN5Ijp7ImRlZmF1bHQiOiJJZk5vdFByZXNlbnQiLCJkZXNjcmlwdGlvbiI6ImBpbWFnZVB1bGxQb2xpY3lgIGlzIHRoZSBLdWJlcm5ldGVzIHB1bGwgcG9saWN5IGZvciB0aGUgaW1hZ2UgZGVmaW5lZCBhYm92ZSIsImVudW0iOlsiSWZOb3RQcmVzZW50IiwiQWx3YXlzIiwiTmV2ZXIiXSwidHlwZSI6InN0cmluZyJ9LCJrYWZrYUNvbnN1bWVyQXV0b3NjYWxlciI6eyJkZXNjcmlwdGlvbiI6ImBrYWZrYUNvbnN1bWVyQXV0b3NjYWxlcmAgaXMgdGhlIHNwZWMgb2YgYSBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyIHRvIHNldCB1cCBmb3IgYGZsb3dsb2dzLXBpcGVsaW5lLXRyYW5zZm9ybWVyYCwgd2hpY2ggY29uc3VtZXMgS2Fma2EgbWVzc2FnZXMuXG5UaGlzIHNldHRpbmcgaXMgaWdub3JlZCB3aGVuIEthZmthIGlzIGRpc2FibGVkLiIsInByb3BlcnRpZXMiOnsibWF4UmVwbGljYXMiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJgbWF4UmVwbGljYXNgIGlzIHRoZSB1cHBlciBsaW1pdCBmb3IgdGhlIG51bWJlciBvZiBwb2RzIHRoYXQgY2FuIGJlIHNldCBieSB0aGUgYXV0b3NjYWxlcjsgY2Fubm90IGJlIHNtYWxsZXIgdGhhbiBNaW5SZXBsaWNhcy4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sIm1ldHJpY3MiOnsiZGVzY3JpcHRpb24iOiJNZXRyaWNzIHVzZWQgYnkgdGhlIHBvZCBhdXRvc2NhbGVyLiBGb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2t1YmVybmV0ZXMtYXBpL3dvcmtsb2FkLXJlc291cmNlcy9ob3Jpem9udGFsLXBvZC1hdXRvc2NhbGVyLXYyLyIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiY29udGFpbmVyUmVzb3VyY2UiOnsicHJvcGVydGllcyI6eyJjb250YWluZXIiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7InByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNvbnRhaW5lciIsIm5hbWUiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJleHRlcm5hbCI6eyJwcm9wZXJ0aWVzIjp7Im1ldHJpYyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJrZXkiOnsidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwib2JqZWN0Ijp7InByb3BlcnRpZXMiOnsiZGVzY3JpYmVkT2JqZWN0Ijp7InByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwibWV0cmljIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7InByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImtleSI6eyJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInRhcmdldCI6eyJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJkZXNjcmliZWRPYmplY3QiLCJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJwb2RzIjp7InByb3BlcnRpZXMiOnsibWV0cmljIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7InByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImtleSI6eyJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInRhcmdldCI6eyJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZSI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtaW5SZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6ImBtaW5SZXBsaWNhc2AgaXMgdGhlIGxvd2VyIGxpbWl0IGZvciB0aGUgbnVtYmVyIG9mIHJlcGxpY2FzIHRvIHdoaWNoIHRoZSBhdXRvc2NhbGVyXG5jYW4gc2NhbGUgZG93bi4gSXQgZGVmYXVsdHMgdG8gMSBwb2QuIG1pblJlcGxpY2FzIGlzIGFsbG93ZWQgdG8gYmUgMCBpZiB0aGVcbmFscGhhIGZlYXR1cmUgZ2F0ZSBIUEFTY2FsZVRvWmVybyBpcyBlbmFibGVkIGFuZCBhdCBsZWFzdCBvbmUgT2JqZWN0IG9yIEV4dGVybmFsXG5tZXRyaWMgaXMgY29uZmlndXJlZC4gU2NhbGluZyBpcyBhY3RpdmUgYXMgbG9uZyBhcyBhdCBsZWFzdCBvbmUgbWV0cmljIHZhbHVlIGlzXG5hdmFpbGFibGUuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6IkRJU0FCTEVEIiwiZGVzY3JpcHRpb24iOiJgc3RhdHVzYCBkZXNjcmliZXMgdGhlIGRlc2lyZWQgc3RhdHVzIHJlZ2FyZGluZyBkZXBsb3lpbmcgYW4gaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlci5cdTAwM2Niclx1MDAzZVxuLSBgRElTQUJMRURgIGRvZXMgbm90IGRlcGxveSBhbiBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyLlx1MDAzY2JyXHUwMDNlXG4tIGBFTkFCTEVEYCBkZXBsb3lzIGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIuXHUwMDNjYnJcdTAwM2UiLCJlbnVtIjpbIkRJU0FCTEVEIiwiRU5BQkxFRCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImthZmthQ29uc3VtZXJCYXRjaFNpemUiOnsiZGVmYXVsdCI6MTA0ODU3NjAsImRlc2NyaXB0aW9uIjoiYGthZmthQ29uc3VtZXJCYXRjaFNpemVgIGluZGljYXRlcyB0byB0aGUgYnJva2VyIHRoZSBtYXhpbXVtIGJhdGNoIHNpemUsIGluIGJ5dGVzLCB0aGF0IHRoZSBjb25zdW1lciBhY2NlcHRzLiBJZ25vcmVkIHdoZW4gbm90IHVzaW5nIEthZmthLiBEZWZhdWx0OiAxME1CLiIsInR5cGUiOiJpbnRlZ2VyIn0sImthZmthQ29uc3VtZXJRdWV1ZUNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAsImRlc2NyaXB0aW9uIjoiYGthZmthQ29uc3VtZXJRdWV1ZUNhcGFjaXR5YCBkZWZpbmVzIHRoZSBjYXBhY2l0eSBvZiB0aGUgaW50ZXJuYWwgbWVzc2FnZSBxdWV1ZSB1c2VkIGluIHRoZSBLYWZrYSBjb25zdW1lciBjbGllbnQuIElnbm9yZWQgd2hlbiBub3QgdXNpbmcgS2Fma2EuIiwidHlwZSI6ImludGVnZXIifSwia2Fma2FDb25zdW1lclJlcGxpY2FzIjp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiYGthZmthQ29uc3VtZXJSZXBsaWNhc2AgZGVmaW5lcyB0aGUgbnVtYmVyIG9mIHJlcGxpY2FzIChwb2RzKSB0byBzdGFydCBmb3IgYGZsb3dsb2dzLXBpcGVsaW5lLXRyYW5zZm9ybWVyYCwgd2hpY2ggY29uc3VtZXMgS2Fma2EgbWVzc2FnZXMuXG5UaGlzIHNldHRpbmcgaXMgaWdub3JlZCB3aGVuIEthZmthIGlzIGRpc2FibGVkLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6ImluZm8iLCJkZXNjcmlwdGlvbiI6ImBsb2dMZXZlbGAgb2YgdGhlIHByb2Nlc3NvciBydW50aW1lIiwiZW51bSI6WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImZhdGFsIiwicGFuaWMiXSwidHlwZSI6InN0cmluZyJ9LCJsb2dUeXBlcyI6eyJkZWZhdWx0IjoiRkxPV1MiLCJkZXNjcmlwdGlvbiI6ImBsb2dUeXBlc2AgZGVmaW5lcyB0aGUgZGVzaXJlZCByZWNvcmQgdHlwZXMgdG8gZ2VuZXJhdGUuIFBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2Vcbi0gYEZMT1dTYCAoZGVmYXVsdCkgdG8gZXhwb3J0IHJlZ3VsYXIgbmV0d29yayBmbG93c1x1MDAzY2JyXHUwMDNlXG4tIGBDT05WRVJTQVRJT05TYCB0byBnZW5lcmF0ZSBldmVudHMgZm9yIHN0YXJ0ZWQgY29udmVyc2F0aW9ucywgZW5kZWQgY29udmVyc2F0aW9ucyBhcyB3ZWxsIGFzIHBlcmlvZGljIFwidGlja1wiIHVwZGF0ZXNcdTAwM2Niclx1MDAzZVxuLSBgRU5ERURfQ09OVkVSU0FUSU9OU2AgdG8gZ2VuZXJhdGUgb25seSBlbmRlZCBjb252ZXJzYXRpb25zIGV2ZW50c1x1MDAzY2JyXHUwMDNlXG4tIGBBTExgIHRvIGdlbmVyYXRlIGJvdGggbmV0d29yayBmbG93cyBhbmQgYWxsIGNvbnZlcnNhdGlvbnMgZXZlbnRzXHUwMDNjYnJcdTAwM2UiLCJlbnVtIjpbIkZMT1dTIiwiQ09OVkVSU0FUSU9OUyIsIkVOREVEX0NPTlZFUlNBVElPTlMiLCJBTEwiXSwidHlwZSI6InN0cmluZyJ9LCJtZXRyaWNzIjp7ImRlc2NyaXB0aW9uIjoiYE1ldHJpY3NgIGRlZmluZSB0aGUgcHJvY2Vzc29yIGNvbmZpZ3VyYXRpb24gcmVnYXJkaW5nIG1ldHJpY3MiLCJwcm9wZXJ0aWVzIjp7ImRpc2FibGVBbGVydHMiOnsiZGVzY3JpcHRpb24iOiJgZGlzYWJsZUFsZXJ0c2AgaXMgYSBsaXN0IG9mIGFsZXJ0cyB0aGF0IHNob3VsZCBiZSBkaXNhYmxlZC5cblBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2VcbmBOZXRPYnNlcnZOb0Zsb3dzYCwgd2hpY2ggaXMgdHJpZ2dlcmVkIHdoZW4gbm8gZmxvd3MgYXJlIGJlaW5nIG9ic2VydmVkIGZvciBhIGNlcnRhaW4gcGVyaW9kLlx1MDAzY2JyXHUwMDNlXG5gTmV0T2JzZXJ2TG9raUVycm9yYCwgd2hpY2ggaXMgdHJpZ2dlcmVkIHdoZW4gZmxvd3MgYXJlIGJlaW5nIGRyb3BwZWQgZHVlIHRvIExva2kgZXJyb3JzLlx1MDAzY2JyXHUwMDNlIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIGEgcHJvY2Vzc29yIGFsZXJ0LlxuUG9zc2libGUgdmFsdWVzIGFyZTpcdTAwM2Niclx1MDAzZVxuLSBgTmV0T2JzZXJ2Tm9GbG93c2AsIHdoaWNoIGlzIHRyaWdnZXJlZCB3aGVuIG5vIGZsb3dzIGFyZSBiZWluZyBvYnNlcnZlZCBmb3IgYSBjZXJ0YWluIHBlcmlvZC5cdTAwM2Niclx1MDAzZVxuLSBgTmV0T2JzZXJ2TG9raUVycm9yYCwgd2hpY2ggaXMgdHJpZ2dlcmVkIHdoZW4gZmxvd3MgYXJlIGJlaW5nIGRyb3BwZWQgZHVlIHRvIExva2kgZXJyb3JzLlx1MDAzY2JyXHUwMDNlIiwiZW51bSI6WyJOZXRPYnNlcnZOb0Zsb3dzIiwiTmV0T2JzZXJ2TG9raUVycm9yIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sImlnbm9yZVRhZ3MiOnsiZGVmYXVsdCI6WyJlZ3Jlc3MiLCJwYWNrZXRzIiwibm9kZXMtZmxvd3MiLCJuYW1lc3BhY2VzLWZsb3dzIiwid29ya2xvYWRzLWZsb3dzIiwibmFtZXNwYWNlcyJdLCJkZXNjcmlwdGlvbiI6ImBpZ25vcmVUYWdzYCBbZGVwcmVjYXRlZCAoKildIGlzIGEgbGlzdCBvZiB0YWdzIHRvIHNwZWNpZnkgd2hpY2ggbWV0cmljcyB0byBpZ25vcmUuIEVhY2ggbWV0cmljIGlzIGFzc29jaWF0ZWQgd2l0aCBhIGxpc3Qgb2YgdGFncy4gTW9yZSBkZXRhaWxzIGluIGh0dHBzOi8vZ2l0aHViLmNvbS9uZXRvYnNlcnYvbmV0d29yay1vYnNlcnZhYmlsaXR5LW9wZXJhdG9yL3RyZWUvbWFpbi9jb250cm9sbGVycy9mbG93bG9nc3BpcGVsaW5lL21ldHJpY3NfZGVmaW5pdGlvbnMgLlxuQXZhaWxhYmxlIHRhZ3MgYXJlOiBgZWdyZXNzYCwgYGluZ3Jlc3NgLCBgZmxvd3NgLCBgYnl0ZXNgLCBgcGFja2V0c2AsIGBuYW1lc3BhY2VzYCwgYG5vZGVzYCwgYHdvcmtsb2Fkc2AsIGBub2Rlcy1mbG93c2AsIGBuYW1lc3BhY2VzLWZsb3dzYCwgYHdvcmtsb2Fkcy1mbG93c2AuXG5OYW1lc3BhY2UtYmFzZWQgbWV0cmljcyBhcmUgY292ZXJlZCBieSBib3RoIGB3b3JrbG9hZHNgIGFuZCBgbmFtZXNwYWNlc2AgdGFncywgaGVuY2UgaXQgaXMgcmVjb21tZW5kZWQgdG8gYWx3YXlzIGlnbm9yZSBvbmUgb2YgdGhlbSAoYHdvcmtsb2Fkc2Agb2ZmZXJpbmcgYSBmaW5lciBncmFudWxhcml0eSkuXHUwMDNjYnJcdTAwM2VcbkRlcHJlY2F0aW9uIG5vdGljZTogdXNlIGBpbmNsdWRlTGlzdGAgaW5zdGVhZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlTGlzdCI6eyJkZXNjcmlwdGlvbiI6ImBpbmNsdWRlTGlzdGAgaXMgYSBsaXN0IG9mIG1ldHJpYyBuYW1lcyB0byBzcGVjaWZ5IHdoaWNoIG9uZXMgdG8gZ2VuZXJhdGUuXG5UaGUgbmFtZXMgY29ycmVzcG9uZCB0byB0aGUgbmFtZXMgaW4gUHJvbWV0aGV1cyB3aXRob3V0IHRoZSBwcmVmaXguIEZvciBleGFtcGxlLFxuYG5hbWVzcGFjZV9lZ3Jlc3NfcGFja2V0c190b3RhbGAgd2lsbCBzaG93IHVwIGFzIGBuZXRvYnNlcnZfbmFtZXNwYWNlX2VncmVzc19wYWNrZXRzX3RvdGFsYCBpbiBQcm9tZXRoZXVzLlxuTm90ZSB0aGF0IHRoZSBtb3JlIG1ldHJpY3MgeW91IGFkZCwgdGhlIGJpZ2dlciBpcyB0aGUgaW1wYWN0IG9uIFByb21ldGhldXMgd29ya2xvYWQgcmVzb3VyY2VzLlxuTWV0cmljcyBlbmFibGVkIGJ5IGRlZmF1bHQgYXJlOlxuYG5hbWVzcGFjZV9mbG93c190b3RhbGAsIGBub2RlX2luZ3Jlc3NfYnl0ZXNfdG90YWxgLCBgd29ya2xvYWRfaW5ncmVzc19ieXRlc190b3RhbGAsIGBuYW1lc3BhY2VfZHJvcF9wYWNrZXRzX3RvdGFsYCAod2hlbiBgUGFja2V0RHJvcGAgZmVhdHVyZSBpcyBlbmFibGVkKSxcbmBuYW1lc3BhY2VfcnR0X3NlY29uZHNgICh3aGVuIGBGbG93UlRUYCBmZWF0dXJlIGlzIGVuYWJsZWQpLCBgbmFtZXNwYWNlX2Ruc19sYXRlbmN5X3NlY29uZHNgICh3aGVuIGBETlNUcmFja2luZ2AgZmVhdHVyZSBpcyBlbmFibGVkKS5cbk1vcmUgaW5mb3JtYXRpb24sIHdpdGggZnVsbCBsaXN0IG9mIGF2YWlsYWJsZSBtZXRyaWNzOiBodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9ibG9iL21haW4vZG9jcy9NZXRyaWNzLm1kIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJNZXRyaWMgbmFtZS4gTW9yZSBpbmZvcm1hdGlvbiBpbiBodHRwczovL2dpdGh1Yi5jb20vbmV0b2JzZXJ2L25ldHdvcmstb2JzZXJ2YWJpbGl0eS1vcGVyYXRvci9ibG9iL21haW4vZG9jcy9NZXRyaWNzLm1kLiIsImVudW0iOlsibmFtZXNwYWNlX2VncmVzc19ieXRlc190b3RhbCIsIm5hbWVzcGFjZV9lZ3Jlc3NfcGFja2V0c190b3RhbCIsIm5hbWVzcGFjZV9pbmdyZXNzX2J5dGVzX3RvdGFsIiwibmFtZXNwYWNlX2luZ3Jlc3NfcGFja2V0c190b3RhbCIsIm5hbWVzcGFjZV9mbG93c190b3RhbCIsIm5vZGVfZWdyZXNzX2J5dGVzX3RvdGFsIiwibm9kZV9lZ3Jlc3NfcGFja2V0c190b3RhbCIsIm5vZGVfaW5ncmVzc19ieXRlc190b3RhbCIsIm5vZGVfaW5ncmVzc19wYWNrZXRzX3RvdGFsIiwibm9kZV9mbG93c190b3RhbCIsIndvcmtsb2FkX2VncmVzc19ieXRlc190b3RhbCIsIndvcmtsb2FkX2VncmVzc19wYWNrZXRzX3RvdGFsIiwid29ya2xvYWRfaW5ncmVzc19ieXRlc190b3RhbCIsIndvcmtsb2FkX2luZ3Jlc3NfcGFja2V0c190b3RhbCIsIndvcmtsb2FkX2Zsb3dzX3RvdGFsIiwibmFtZXNwYWNlX2Ryb3BfYnl0ZXNfdG90YWwiLCJuYW1lc3BhY2VfZHJvcF9wYWNrZXRzX3RvdGFsIiwibm9kZV9kcm9wX2J5dGVzX3RvdGFsIiwibm9kZV9kcm9wX3BhY2tldHNfdG90YWwiLCJ3b3JrbG9hZF9kcm9wX2J5dGVzX3RvdGFsIiwid29ya2xvYWRfZHJvcF9wYWNrZXRzX3RvdGFsIiwibmFtZXNwYWNlX3J0dF9zZWNvbmRzIiwibm9kZV9ydHRfc2Vjb25kcyIsIndvcmtsb2FkX3J0dF9zZWNvbmRzIiwibmFtZXNwYWNlX2Ruc19sYXRlbmN5X3NlY29uZHMiLCJub2RlX2Ruc19sYXRlbmN5X3NlY29uZHMiLCJ3b3JrbG9hZF9kbnNfbGF0ZW5jeV9zZWNvbmRzIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sInNlcnZlciI6eyJkZXNjcmlwdGlvbiI6Ik1ldHJpY3Mgc2VydmVyIGVuZHBvaW50IGNvbmZpZ3VyYXRpb24gZm9yIFByb21ldGhldXMgc2NyYXBlciIsInByb3BlcnRpZXMiOnsicG9ydCI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwcm9tZXRoZXVzIEhUVFAgcG9ydCIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NjU1MzUsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBpbnNlY3VyZVNraXBWZXJpZnlgIGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHByb3ZpZGVkIGNlcnRpZmljYXRlLlxuSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGBwcm92aWRlZENhRmlsZWAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwcm92aWRlZCI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uIHdoZW4gYHR5cGVgIGlzIHNldCB0byBgUFJPVklERURgLiIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvdmlkZWRDYUZpbGUiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gdGhlIENBIGZpbGUgd2hlbiBgdHlwZWAgaXMgc2V0IHRvIGBQUk9WSURFRGAuIiwicHJvcGVydGllcyI6eyJmaWxlIjp7ImRlc2NyaXB0aW9uIjoiRmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQiLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIHRoZSBmaWxlIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIHRoZSBmaWxlLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBmaWxlIHJlZmVyZW5jZTogXCJjb25maWdtYXBcIiBvciBcInNlY3JldFwiIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJESVNBQkxFRCIsImRlc2NyaXB0aW9uIjoiU2VsZWN0IHRoZSB0eXBlIG9mIFRMUyBjb25maWd1cmF0aW9uOlx1MDAzY2JyXHUwMDNlXG4tIGBESVNBQkxFRGAgKGRlZmF1bHQpIHRvIG5vdCBjb25maWd1cmUgVExTIGZvciB0aGUgZW5kcG9pbnQuXG4tIGBQUk9WSURFRGAgdG8gbWFudWFsbHkgcHJvdmlkZSBjZXJ0IGZpbGUgYW5kIGEga2V5IGZpbGUuIFtVbnN1cHBvcnRlZCAoKildLlxuLSBgQVVUT2AgdG8gdXNlIE9wZW5TaGlmdCBhdXRvIGdlbmVyYXRlZCBjZXJ0aWZpY2F0ZSB1c2luZyBhbm5vdGF0aW9ucy4iLCJlbnVtIjpbIkRJU0FCTEVEIiwiUFJPVklERUQiLCJBVVRPIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtdWx0aUNsdXN0ZXJEZXBsb3ltZW50Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNldCBgbXVsdGlDbHVzdGVyRGVwbG95bWVudGAgdG8gYHRydWVgIHRvIGVuYWJsZSBtdWx0aSBjbHVzdGVycyBmZWF0dXJlLiBUaGlzIGFkZHMgY2x1c3Rlck5hbWUgbGFiZWwgdG8gZmxvd3MgZGF0YSIsInR5cGUiOiJib29sZWFuIn0sInBvcnQiOnsiZGVmYXVsdCI6MjA1NSwiZGVzY3JpcHRpb24iOiJQb3J0IG9mIHRoZSBmbG93IGNvbGxlY3RvciAoaG9zdCBwb3J0KS5cbkJ5IGNvbnZlbnRpb24sIHNvbWUgdmFsdWVzIGFyZSBmb3JiaWRkZW4uIEl0IG11c3QgYmUgZ3JlYXRlciB0aGFuIDEwMjQgYW5kIGRpZmZlcmVudCBmcm9tXG40NTAwLCA0Nzg5IGFuZCA2MDgxLiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NjU1MzUsIm1pbmltdW0iOjEwMjUsInR5cGUiOiJpbnRlZ2VyIn0sInByb2ZpbGVQb3J0Ijp7ImRlc2NyaXB0aW9uIjoiYHByb2ZpbGVQb3J0YCBhbGxvd3Mgc2V0dGluZyB1cCBhIEdvIHBwcm9mIHByb2ZpbGVyIGxpc3RlbmluZyB0byB0aGlzIHBvcnQiLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjY1NTM1LCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZXNvdXJjZXMiOnsiZGVmYXVsdCI6eyJsaW1pdHMiOnsibWVtb3J5IjoiODAwTWkifSwicmVxdWVzdHMiOnsiY3B1IjoiMTAwbSIsIm1lbW9yeSI6IjEwME1pIn19LCJkZXNjcmlwdGlvbiI6ImByZXNvdXJjZXNgIGFyZSB0aGUgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQgYnkgdGhpcyBjb250YWluZXIuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInByb3BlcnRpZXMiOnsiY2xhaW1zIjp7ImRlc2NyaXB0aW9uIjoiQ2xhaW1zIGxpc3RzIHRoZSBuYW1lcyBvZiByZXNvdXJjZXMsIGRlZmluZWQgaW4gc3BlYy5yZXNvdXJjZUNsYWltcyxcbnRoYXQgYXJlIHVzZWQgYnkgdGhpcyBjb250YWluZXIuXG5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIHRoZVxuRHluYW1pY1Jlc291cmNlQWxsb2NhdGlvbiBmZWF0dXJlIGdhdGUuXG5cblRoaXMgZmllbGQgaXMgaW1tdXRhYmxlLiBJdCBjYW4gb25seSBiZSBzZXQgZm9yIGNvbnRhaW5lcnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZUNsYWltIHJlZmVyZW5jZXMgb25lIGVudHJ5IGluIFBvZFNwZWMuUmVzb3VyY2VDbGFpbXMuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBtdXN0IG1hdGNoIHRoZSBuYW1lIG9mIG9uZSBlbnRyeSBpbiBwb2Quc3BlYy5yZXNvdXJjZUNsYWltcyBvZlxudGhlIFBvZCB3aGVyZSB0aGlzIGZpZWxkIGlzIHVzZWQuIEl0IG1ha2VzIHRoYXQgcmVzb3VyY2UgYXZhaWxhYmxlXG5pbnNpZGUgYSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0Ijp7ImRlc2NyaXB0aW9uIjoiUmVxdWVzdCBpcyB0aGUgbmFtZSBjaG9zZW4gZm9yIGEgcmVxdWVzdCBpbiB0aGUgcmVmZXJlbmNlZCBjbGFpbS5cbklmIGVtcHR5LCBldmVyeXRoaW5nIGZyb20gdGhlIGNsYWltIGlzIG1hZGUgYXZhaWxhYmxlLCBvdGhlcndpc2Vcbm9ubHkgdGhlIHJlc3VsdCBvZiB0aGlzIHJlcXVlc3QuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbIm5hbWUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9LCJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN1Ym5ldExhYmVscyI6eyJkZXNjcmlwdGlvbiI6ImBzdWJuZXRMYWJlbHNgIGFsbG93cyB0byBkZWZpbmUgY3VzdG9tIGxhYmVscyBvbiBzdWJuZXRzIGFuZCBJUHMgb3IgdG8gZW5hYmxlIGF1dG9tYXRpYyBsYWJlbGxpbmcgb2YgcmVjb2duaXplZCBzdWJuZXRzIGluIE9wZW5TaGlmdC5cbldoZW4gYSBzdWJuZXQgbWF0Y2hlcyB0aGUgc291cmNlIG9yIGRlc3RpbmF0aW9uIElQIG9mIGEgZmxvdywgYSBjb3JyZXNwb25kaW5nIGZpZWxkIGlzIGFkZGVkOiBgU3JjU3VibmV0TGFiZWxgIG9yIGBEc3RTdWJuZXRMYWJlbGAuIiwicHJvcGVydGllcyI6eyJjdXN0b21MYWJlbHMiOnsiZGVzY3JpcHRpb24iOiJgY3VzdG9tTGFiZWxzYCBhbGxvd3MgdG8gY3VzdG9taXplIHN1Ym5ldHMgYW5kIElQcyBsYWJlbGxpbmcsIHN1Y2ggYXMgdG8gaWRlbnRpZnkgY2x1c3Rlci1leHRlcm5hbCB3b3JrbG9hZHMgb3Igd2ViIHNlcnZpY2VzLlxuSWYgeW91IGVuYWJsZSBgb3BlblNoaWZ0QXV0b0RldGVjdGAsIGBjdXN0b21MYWJlbHNgIGNhbiBvdmVycmlkZSB0aGUgZGV0ZWN0ZWQgc3VibmV0cyBpbiBjYXNlIHRoZXkgb3ZlcmxhcC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlN1Ym5ldExhYmVsIGFsbG93cyB0byBsYWJlbCBzdWJuZXRzIGFuZCBJUHMsIHN1Y2ggYXMgdG8gaWRlbnRpZnkgY2x1c3Rlci1leHRlcm5hbCB3b3JrbG9hZHMgb3Igd2ViIHNlcnZpY2VzLiIsInByb3BlcnRpZXMiOnsiY2lkcnMiOnsiZGVzY3JpcHRpb24iOiJMaXN0IG9mIENJRFJzLCBzdWNoIGFzIGBbXCIxLjIuMy40LzMyXCJdYC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTGFiZWwgbmFtZSwgdXNlZCB0byBmbGFnIG1hdGNoaW5nIGZsb3dzLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNpZHJzIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJvcGVuU2hpZnRBdXRvRGV0ZWN0Ijp7ImRlc2NyaXB0aW9uIjoiYG9wZW5TaGlmdEF1dG9EZXRlY3RgIGFsbG93cywgd2hlbiBzZXQgdG8gYHRydWVgLCB0byBkZXRlY3QgYXV0b21hdGljYWxseSB0aGUgbWFjaGluZXMsIHBvZHMgYW5kIHNlcnZpY2VzIHN1Ym5ldHMgYmFzZWQgb24gdGhlXG5PcGVuU2hpZnQgaW5zdGFsbCBjb25maWd1cmF0aW9uIGFuZCB0aGUgQ2x1c3RlciBOZXR3b3JrIE9wZXJhdG9yIGNvbmZpZ3VyYXRpb24uIEluZGlyZWN0bHksIHRoaXMgaXMgYSB3YXkgdG8gYWNjdXJhdGVseSBkZXRlY3RcbmV4dGVybmFsIHRyYWZmaWM6IGZsb3dzIHRoYXQgYXJlIG5vdCBsYWJlbGVkIGZvciB0aG9zZSBzdWJuZXRzIGFyZSBleHRlcm5hbCB0byB0aGUgY2x1c3Rlci4gRW5hYmxlZCBieSBkZWZhdWx0IG9uIE9wZW5TaGlmdC4iLCJ0eXBlIjoiYm9vbGVhbiJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwcm9tZXRoZXVzIjp7ImRlc2NyaXB0aW9uIjoiYHByb21ldGhldXNgIGRlZmluZXMgUHJvbWV0aGV1cyBzZXR0aW5ncywgc3VjaCBhcyBxdWVyaWVyIGNvbmZpZ3VyYXRpb24gdXNlZCB0byBmZXRjaCBtZXRyaWNzIGZyb20gdGhlIENvbnNvbGUgcGx1Z2luLiIsInByb3BlcnRpZXMiOnsicXVlcmllciI6eyJkZXNjcmlwdGlvbiI6IlByb21ldGhldXMgcXVlcnlpbmcgY29uZmlndXJhdGlvbiwgc3VjaCBhcyBjbGllbnQgc2V0dGluZ3MsIHVzZWQgaW4gdGhlIENvbnNvbGUgcGx1Z2luLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiU2V0IGBlbmFibGVgIHRvIGB0cnVlYCB0byBtYWtlIHRoZSBDb25zb2xlIHBsdWdpbiBxdWVyeWluZyBmbG93IG1ldHJpY3MgZnJvbSBQcm9tZXRoZXVzIGluc3RlYWQgb2YgTG9raSB3aGVuZXZlciBwb3NzaWJsZS5cblRoZSBDb25zb2xlIHBsdWdpbiBjYW4gdXNlIGVpdGhlciBMb2tpIG9yIFByb21ldGhldXMgYXMgYSBkYXRhIHNvdXJjZSBmb3IgbWV0cmljcyAoc2VlIGFsc28gYHNwZWMubG9raWApLCBvciBib3RoLlxuTm90IGFsbCBxdWVyaWVzIGFyZSB0cmFuc3Bvc2FibGUgZnJvbSBMb2tpIHRvIFByb21ldGhldXMuIEhlbmNlLCBpZiBMb2tpIGlzIGRpc2FibGVkLCBzb21lIGZlYXR1cmVzIG9mIHRoZSBwbHVnaW4gYXJlIGRpc2FibGVkIGFzIHdlbGwsXG5zdWNoIGFzIGdldHRpbmcgcGVyLXBvZCBpbmZvcm1hdGlvbiBvciB2aWV3aW5nIHJhdyBmbG93cy5cbklmIGJvdGggUHJvbWV0aGV1cyBhbmQgTG9raSBhcmUgZW5hYmxlZCwgUHJvbWV0aGV1cyB0YWtlcyBwcmVjZWRlbmNlIGFuZCBMb2tpIGlzIHVzZWQgYXMgYSBmYWxsYmFjayBmb3IgcXVlcmllcyB0aGF0IFByb21ldGhldXMgY2Fubm90IGhhbmRsZS5cbklmIHRoZXkgYXJlIGJvdGggZGlzYWJsZWQsIHRoZSBDb25zb2xlIHBsdWdpbiBpcyBub3QgZGVwbG95ZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwibWFudWFsIjp7ImRlc2NyaXB0aW9uIjoiUHJvbWV0aGV1cyBjb25maWd1cmF0aW9uIGZvciBgTWFudWFsYCBtb2RlLiIsInByb3BlcnRpZXMiOnsiZm9yd2FyZFVzZXJUb2tlbiI6eyJkZXNjcmlwdGlvbiI6IlNldCBgdHJ1ZWAgdG8gZm9yd2FyZCBsb2dnZWQgaW4gdXNlciB0b2tlbiBpbiBxdWVyaWVzIHRvIFByb21ldGhldXMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ0bHMiOnsiZGVzY3JpcHRpb24iOiJUTFMgY2xpZW50IGNvbmZpZ3VyYXRpb24gZm9yIFByb21ldGhldXMgVVJMLiIsInByb3BlcnRpZXMiOnsiY2FDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiYGNhQ2VydGAgZGVmaW5lcyB0aGUgcmVmZXJlbmNlIG9mIHRoZSBjZXJ0aWZpY2F0ZSBmb3IgdGhlIENlcnRpZmljYXRlIEF1dGhvcml0eSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZW5hYmxlIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSBUTFMiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJpbnNlY3VyZVNraXBWZXJpZnkiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiYGluc2VjdXJlU2tpcFZlcmlmeWAgYWxsb3dzIHNraXBwaW5nIGNsaWVudC1zaWRlIHZlcmlmaWNhdGlvbiBvZiB0aGUgc2VydmVyIGNlcnRpZmljYXRlLlxuSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGBjYUNlcnRgIGZpZWxkIGlzIGlnbm9yZWQuIiwidHlwZSI6ImJvb2xlYW4ifSwidXNlckNlcnQiOnsiZGVzY3JpcHRpb24iOiJgdXNlckNlcnRgIGRlZmluZXMgdGhlIHVzZXIgY2VydGlmaWNhdGUgcmVmZXJlbmNlIGFuZCBpcyB1c2VkIGZvciBtVExTICh5b3UgY2FuIGlnbm9yZSBpdCB3aGVuIHVzaW5nIG9uZS13YXkgVExTKSIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YCIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwidXJsIjp7ImRlZmF1bHQiOiJodHRwOi8vcHJvbWV0aGV1czo5MDkwIiwiZGVzY3JpcHRpb24iOiJgdXJsYCBpcyB0aGUgYWRkcmVzcyBvZiBhbiBleGlzdGluZyBQcm9tZXRoZXVzIHNlcnZpY2UgdG8gdXNlIGZvciBxdWVyeWluZyBtZXRyaWNzLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwibW9kZSI6eyJkZWZhdWx0IjoiQXV0byIsImRlc2NyaXB0aW9uIjoiYG1vZGVgIG11c3QgYmUgc2V0IGFjY29yZGluZyB0byB0aGUgdHlwZSBvZiBQcm9tZXRoZXVzIGluc3RhbGxhdGlvbiB0aGF0IHN0b3JlcyBuZXR3b3JrIG9ic2VydmFiaWxpdHkgbWV0cmljczpcdTAwM2Niclx1MDAzZVxuLSBVc2UgYEF1dG9gIHRvIHRyeSBjb25maWd1cmluZyBhdXRvbWF0aWNhbGx5LiBJbiBPcGVuU2hpZnQsIGl0IHVzZXMgdGhlIFRoYW5vcyBxdWVyaWVyIGZyb20gT3BlblNoaWZ0IENsdXN0ZXIgTW9uaXRvcmluZ1x1MDAzY2JyXHUwMDNlXG4tIFVzZSBgTWFudWFsYCBmb3IgYSBtYW51YWwgc2V0dXBcdTAwM2Niclx1MDAzZSIsImVudW0iOlsiTWFudWFsIiwiQXV0byJdLCJ0eXBlIjoic3RyaW5nIn0sInRpbWVvdXQiOnsiZGVmYXVsdCI6IjMwcyIsImRlc2NyaXB0aW9uIjoiYHRpbWVvdXRgIGlzIHRoZSByZWFkIHRpbWVvdXQgZm9yIGNvbnNvbGUgcGx1Z2luIHF1ZXJpZXMgdG8gUHJvbWV0aGV1cy5cbkEgdGltZW91dCBvZiB6ZXJvIG1lYW5zIG5vIHRpbWVvdXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibW9kZSJdLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6ImBGbG93Q29sbGVjdG9yU3RhdHVzYCBkZWZpbmVzIHRoZSBvYnNlcnZlZCBzdGF0ZSBvZiBGbG93Q29sbGVjdG9yIiwicHJvcGVydGllcyI6eyJjb25kaXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiYGNvbmRpdGlvbnNgIHJlcHJlc2VudCB0aGUgbGF0ZXN0IGF2YWlsYWJsZSBvYnNlcnZhdGlvbnMgb2YgYW4gb2JqZWN0J3Mgc3RhdGUiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkNvbmRpdGlvbiBjb250YWlucyBkZXRhaWxzIGZvciBvbmUgYXNwZWN0IG9mIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoaXMgQVBJIFJlc291cmNlLiIsInByb3BlcnRpZXMiOnsibGFzdFRyYW5zaXRpb25UaW1lIjp7ImRlc2NyaXB0aW9uIjoibGFzdFRyYW5zaXRpb25UaW1lIGlzIHRoZSBsYXN0IHRpbWUgdGhlIGNvbmRpdGlvbiB0cmFuc2l0aW9uZWQgZnJvbSBvbmUgc3RhdHVzIHRvIGFub3RoZXIuXG5UaGlzIHNob3VsZCBiZSB3aGVuIHRoZSB1bmRlcmx5aW5nIGNvbmRpdGlvbiBjaGFuZ2VkLiAgSWYgdGhhdCBpcyBub3Qga25vd24sIHRoZW4gdXNpbmcgdGhlIHRpbWUgd2hlbiB0aGUgQVBJIGZpZWxkIGNoYW5nZWQgaXMgYWNjZXB0YWJsZS4iLCJmb3JtYXQiOiJkYXRlLXRpbWUiLCJ0eXBlIjoic3RyaW5nIn0sIm1lc3NhZ2UiOnsiZGVzY3JpcHRpb24iOiJtZXNzYWdlIGlzIGEgaHVtYW4gcmVhZGFibGUgbWVzc2FnZSBpbmRpY2F0aW5nIGRldGFpbHMgYWJvdXQgdGhlIHRyYW5zaXRpb24uXG5UaGlzIG1heSBiZSBhbiBlbXB0eSBzdHJpbmcuIiwibWF4TGVuZ3RoIjozMjc2OCwidHlwZSI6InN0cmluZyJ9LCJvYnNlcnZlZEdlbmVyYXRpb24iOnsiZGVzY3JpcHRpb24iOiJvYnNlcnZlZEdlbmVyYXRpb24gcmVwcmVzZW50cyB0aGUgLm1ldGFkYXRhLmdlbmVyYXRpb24gdGhhdCB0aGUgY29uZGl0aW9uIHdhcyBzZXQgYmFzZWQgdXBvbi5cbkZvciBpbnN0YW5jZSwgaWYgLm1ldGFkYXRhLmdlbmVyYXRpb24gaXMgY3VycmVudGx5IDEyLCBidXQgdGhlIC5zdGF0dXMuY29uZGl0aW9uc1t4XS5vYnNlcnZlZEdlbmVyYXRpb24gaXMgOSwgdGhlIGNvbmRpdGlvbiBpcyBvdXQgb2YgZGF0ZVxud2l0aCByZXNwZWN0IHRvIHRoZSBjdXJyZW50IHN0YXRlIG9mIHRoZSBpbnN0YW5jZS4iLCJmb3JtYXQiOiJpbnQ2NCIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInJlYXNvbiI6eyJkZXNjcmlwdGlvbiI6InJlYXNvbiBjb250YWlucyBhIHByb2dyYW1tYXRpYyBpZGVudGlmaWVyIGluZGljYXRpbmcgdGhlIHJlYXNvbiBmb3IgdGhlIGNvbmRpdGlvbidzIGxhc3QgdHJhbnNpdGlvbi5cblByb2R1Y2VycyBvZiBzcGVjaWZpYyBjb25kaXRpb24gdHlwZXMgbWF5IGRlZmluZSBleHBlY3RlZCB2YWx1ZXMgYW5kIG1lYW5pbmdzIGZvciB0aGlzIGZpZWxkLFxuYW5kIHdoZXRoZXIgdGhlIHZhbHVlcyBhcmUgY29uc2lkZXJlZCBhIGd1YXJhbnRlZWQgQVBJLlxuVGhlIHZhbHVlIHNob3VsZCBiZSBhIENhbWVsQ2FzZSBzdHJpbmcuXG5UaGlzIGZpZWxkIG1heSBub3QgYmUgZW1wdHkuIiwibWF4TGVuZ3RoIjoxMDI0LCJtaW5MZW5ndGgiOjEsInBhdHRlcm4iOiJeW0EtWmEtel0oW0EtWmEtejAtOV8sOl0qW0EtWmEtejAtOV9dKT8kIiwidHlwZSI6InN0cmluZyJ9LCJzdGF0dXMiOnsiZGVzY3JpcHRpb24iOiJzdGF0dXMgb2YgdGhlIGNvbmRpdGlvbiwgb25lIG9mIFRydWUsIEZhbHNlLCBVbmtub3duLiIsImVudW0iOlsiVHJ1ZSIsIkZhbHNlIiwiVW5rbm93biJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJ0eXBlIG9mIGNvbmRpdGlvbiBpbiBDYW1lbENhc2Ugb3IgaW4gZm9vLmV4YW1wbGUuY29tL0NhbWVsQ2FzZS4iLCJtYXhMZW5ndGgiOjMxNiwicGF0dGVybiI6Il4oW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8oXFwuW2EtejAtOV0oWy1hLXowLTldKlthLXowLTldKT8pKi8pPygoW0EtWmEtejAtOV1bLUEtWmEtejAtOV8uXSopP1tBLVphLXowLTldKSQiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJsYXN0VHJhbnNpdGlvblRpbWUiLCJtZXNzYWdlIiwicmVhc29uIiwic3RhdHVzIiwidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugd2hlcmUgY29uc29sZSBwbHVnaW4gYW5kIGZsb3dsb2dzLXBpcGVsaW5lIGhhdmUgYmVlbiBkZXBsb3llZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJjb25kaXRpb25zIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInNlcnZlZCI6dHJ1ZSwic3RvcmFnZSI6ZmFsc2UsInN1YnJlc291cmNlcyI6eyJzdGF0dXMiOnt9fX0seyJhZGRpdGlvbmFsUHJpbnRlckNvbHVtbnMiOlt7Impzb25QYXRoIjoiLnNwZWMuYWdlbnQudHlwZSIsIm5hbWUiOiJBZ2VudCIsInR5cGUiOiJzdHJpbmcifSx7Impzb25QYXRoIjoiLnNwZWMuYWdlbnQuZWJwZi5zYW1wbGluZyIsIm5hbWUiOiJTYW1wbGluZyAoRUJQRikiLCJ0eXBlIjoic3RyaW5nIn0seyJqc29uUGF0aCI6Ii5zcGVjLmRlcGxveW1lbnRNb2RlbCIsIm5hbWUiOiJEZXBsb3ltZW50IE1vZGVsIiwidHlwZSI6InN0cmluZyJ9LHsianNvblBhdGgiOiIuc3RhdHVzLmNvbmRpdGlvbnNbPyhALnR5cGU9PVwiUmVhZHlcIildLnJlYXNvbiIsIm5hbWUiOiJTdGF0dXMiLCJ0eXBlIjoic3RyaW5nIn1dLCJuYW1lIjoidjFiZXRhMiIsInNjaGVtYSI6eyJvcGVuQVBJVjNTY2hlbWEiOnsiZGVzY3JpcHRpb24iOiJgRmxvd0NvbGxlY3RvcmAgaXMgdGhlIHNjaGVtYSBmb3IgdGhlIG5ldHdvcmsgZmxvd3MgY29sbGVjdGlvbiBBUEksIHdoaWNoIHBpbG90cyBhbmQgY29uZmlndXJlcyB0aGUgdW5kZXJseWluZyBkZXBsb3ltZW50cy4iLCJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsiZGVzY3JpcHRpb24iOiJBUElWZXJzaW9uIGRlZmluZXMgdGhlIHZlcnNpb25lZCBzY2hlbWEgb2YgdGhpcyByZXByZXNlbnRhdGlvbiBvZiBhbiBvYmplY3QuXG5TZXJ2ZXJzIHNob3VsZCBjb252ZXJ0IHJlY29nbml6ZWQgc2NoZW1hcyB0byB0aGUgbGF0ZXN0IGludGVybmFsIHZhbHVlLCBhbmRcbm1heSByZWplY3QgdW5yZWNvZ25pemVkIHZhbHVlcy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9naXQuazhzLmlvL2NvbW11bml0eS9jb250cmlidXRvcnMvZGV2ZWwvc2lnLWFyY2hpdGVjdHVyZS9hcGktY29udmVudGlvbnMubWQjcmVzb3VyY2VzIiwidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7ImRlc2NyaXB0aW9uIjoiS2luZCBpcyBhIHN0cmluZyB2YWx1ZSByZXByZXNlbnRpbmcgdGhlIFJFU1QgcmVzb3VyY2UgdGhpcyBvYmplY3QgcmVwcmVzZW50cy5cblNlcnZlcnMgbWF5IGluZmVyIHRoaXMgZnJvbSB0aGUgZW5kcG9pbnQgdGhlIGNsaWVudCBzdWJtaXRzIHJlcXVlc3RzIHRvLlxuQ2Fubm90IGJlIHVwZGF0ZWQuXG5JbiBDYW1lbENhc2UuXG5Nb3JlIGluZm86IGh0dHBzOi8vZ2l0Lms4cy5pby9jb21tdW5pdHkvY29udHJpYnV0b3JzL2RldmVsL3NpZy1hcmNoaXRlY3R1cmUvYXBpLWNvbnZlbnRpb25zLm1kI3R5cGVzLWtpbmRzIiwidHlwZSI6InN0cmluZyJ9LCJtZXRhZGF0YSI6eyJ0eXBlIjoib2JqZWN0In0sInNwZWMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIHRoZSBkZXNpcmVkIHN0YXRlIG9mIHRoZSBGbG93Q29sbGVjdG9yIHJlc291cmNlLlxuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVxuKjogdGhlIG1lbnRpb24gb2YgXCJ1bnN1cHBvcnRlZFwiIG9yIFwiZGVwcmVjYXRlZFwiIGZvciBhIGZlYXR1cmUgdGhyb3VnaG91dCB0aGlzIGRvY3VtZW50IG1lYW5zIHRoYXQgdGhpcyBmZWF0dXJlXG5pcyBub3Qgb2ZmaWNpYWxseSBzdXBwb3J0ZWQgYnkgUmVkIEhhdC4gSXQgbWlnaHQgaGF2ZSBiZWVuLCBmb3IgZXhhbXBsZSwgY29udHJpYnV0ZWQgYnkgdGhlIGNvbW11bml0eVxuYW5kIGFjY2VwdGVkIHdpdGhvdXQgYSBmb3JtYWwgYWdyZWVtZW50IGZvciBtYWludGVuYW5jZS4gVGhlIHByb2R1Y3QgbWFpbnRhaW5lcnMgbWlnaHQgcHJvdmlkZSBzb21lIHN1cHBvcnRcbmZvciB0aGVzZSBmZWF0dXJlcyBhcyBhIGJlc3QgZWZmb3J0IG9ubHkuIiwicHJvcGVydGllcyI6eyJhZ2VudCI6eyJkZXNjcmlwdGlvbiI6IkFnZW50IGNvbmZpZ3VyYXRpb24gZm9yIGZsb3dzIGV4dHJhY3Rpb24uIiwicHJvcGVydGllcyI6eyJlYnBmIjp7ImRlc2NyaXB0aW9uIjoiYGVicGZgIGRlc2NyaWJlcyB0aGUgc2V0dGluZ3MgcmVsYXRlZCB0byB0aGUgZUJQRi1iYXNlZCBmbG93IHJlcG9ydGVyIHdoZW4gYHNwZWMuYWdlbnQudHlwZWBcbmlzIHNldCB0byBgZUJQRmAuIiwicHJvcGVydGllcyI6eyJhZHZhbmNlZCI6eyJkZXNjcmlwdGlvbiI6ImBhZHZhbmNlZGAgYWxsb3dzIHNldHRpbmcgc29tZSBhc3BlY3RzIG9mIHRoZSBpbnRlcm5hbCBjb25maWd1cmF0aW9uIG9mIHRoZSBlQlBGIGFnZW50LlxuVGhpcyBzZWN0aW9uIGlzIGFpbWVkIG1vc3RseSBmb3IgZGVidWdnaW5nIGFuZCBmaW5lLWdyYWluZWQgcGVyZm9ybWFuY2Ugb3B0aW1pemF0aW9ucyxcbnN1Y2ggYXMgYEdPR0NgIGFuZCBgR09NQVhQUk9DU2AgZW52IHZhcnMuIFNldCB0aGVzZSB2YWx1ZXMgYXQgeW91ciBvd24gcmlzay4iLCJwcm9wZXJ0aWVzIjp7ImVudiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiYGVudmAgYWxsb3dzIHBhc3NpbmcgY3VzdG9tIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byB1bmRlcmx5aW5nIGNvbXBvbmVudHMuIFVzZWZ1bCBmb3IgcGFzc2luZ1xuc29tZSB2ZXJ5IGNvbmNyZXRlIHBlcmZvcm1hbmNlLXR1bmluZyBvcHRpb25zLCBzdWNoIGFzIGBHT0dDYCBhbmQgYEdPTUFYUFJPQ1NgLCB0aGF0IHNob3VsZCBub3QgYmVcbnB1YmxpY2x5IGV4cG9zZWQgYXMgcGFydCBvZiB0aGUgRmxvd0NvbGxlY3RvciBkZXNjcmlwdG9yLCBhcyB0aGV5IGFyZSBvbmx5IHVzZWZ1bFxuaW4gZWRnZSBkZWJ1ZyBvciBzdXBwb3J0IHNjZW5hcmlvcy4iLCJ0eXBlIjoib2JqZWN0In0sInNjaGVkdWxpbmciOnsiZGVzY3JpcHRpb24iOiJzY2hlZHVsaW5nIGNvbnRyb2xzIGhvdyB0aGUgcG9kcyBhcmUgc2NoZWR1bGVkIG9uIG5vZGVzLiIsInByb3BlcnRpZXMiOnsiYWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyBzY2hlZHVsaW5nIGNvbnN0cmFpbnRzLiBGb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2t1YmVybmV0ZXMtYXBpL3dvcmtsb2FkLXJlc291cmNlcy9wb2QtdjEvI3NjaGVkdWxpbmcuIiwicHJvcGVydGllcyI6eyJub2RlQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgbm9kZSBhZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIGZvciB0aGUgcG9kLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlXG5hIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXNcbm1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS5cbmZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZVxucmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgbWF0Y2hFeHByZXNzaW9uczsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBbiBlbXB0eSBwcmVmZXJyZWQgc2NoZWR1bGluZyB0ZXJtIG1hdGNoZXMgYWxsIG9iamVjdHMgd2l0aCBpbXBsaWNpdCB3ZWlnaHQgMFxuKGkuZS4gaXQncyBhIG5vLW9wKS4gQSBudWxsIHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzIChpLmUuIGlzIGFsc28gYSBuby1vcCkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJlbmNlIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBsYWJlbHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJXZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIG5vZGVTZWxlY3RvclRlcm0sIGluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwcmVmZXJlbmNlIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGFuIHVwZGF0ZSksIHRoZSBzeXN0ZW1cbm1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvclRlcm1zIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHRlcm1zLiBUaGUgdGVybXMgYXJlIE9SZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG51bGwgb3IgZW1wdHkgbm9kZSBzZWxlY3RvciB0ZXJtIG1hdGNoZXMgbm8gb2JqZWN0cy4gVGhlIHJlcXVpcmVtZW50cyBvZlxudGhlbSBhcmUgQU5EZWQuXG5UaGUgVG9wb2xvZ3lTZWxlY3RvclRlcm0gdHlwZSBpbXBsZW1lbnRzIGEgc3Vic2V0IG9mIHRoZSBOb2RlU2VsZWN0b3JUZXJtLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgbGFiZWxzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoRmllbGRzIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBmaWVsZHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsibm9kZVNlbGVjdG9yVGVybXMiXSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBwb2QgYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyAoZS5nLiBjby1sb2NhdGUgdGhpcyBwb2QgaW4gdGhlIHNhbWUgbm9kZSwgem9uZSwgZXRjLiBhcyBzb21lIG90aGVyIHBvZChzKSkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgaGFzIHBvZHMgd2hpY2ggbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm07IHRoZVxubm9kZShzKSB3aXRoIHRoZSBoaWdoZXN0IHN1bSBhcmUgdGhlIG1vc3QgcHJlZmVycmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHdlaWdodHMgb2YgYWxsIG9mIHRoZSBtYXRjaGVkIFdlaWdodGVkUG9kQWZmaW5pdHlUZXJtIGZpZWxkcyBhcmUgYWRkZWQgcGVyLW5vZGUgdG8gZmluZCB0aGUgbW9zdCBwcmVmZXJyZWQgbm9kZShzKSIsInByb3BlcnRpZXMiOnsicG9kQWZmaW5pdHlUZXJtIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgcG9kIGFmZmluaXR5IHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWlzbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IndlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtLFxuaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXRcbnNjaGVkdWxpbmcgdGltZSwgdGhlIHBvZCB3aWxsIG5vdCBiZSBzY2hlZHVsZWQgb250byB0aGUgbm9kZS5cbklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0XG5hdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhIHBvZCBsYWJlbCB1cGRhdGUpLCB0aGVcbnN5c3RlbSBtYXkgb3IgbWF5IG5vdCB0cnkgdG8gZXZlbnR1YWxseSBldmljdCB0aGUgcG9kIGZyb20gaXRzIG5vZGUuXG5XaGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBlbGVtZW50cywgdGhlIGxpc3RzIG9mIG5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gZWFjaFxucG9kQWZmaW5pdHlUZXJtIGFyZSBpbnRlcnNlY3RlZCwgaS5lLiBhbGwgdGVybXMgbXVzdCBiZSBzYXRpc2ZpZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIGEgc2V0IG9mIHBvZHMgKG5hbWVseSB0aG9zZSBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvclxucmVsYXRpdmUgdG8gdGhlIGdpdmVuIG5hbWVzcGFjZShzKSkgdGhhdCB0aGlzIHBvZCBzaG91bGQgYmVcbmNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCxcbndoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZlxudGhlIGxhYmVsIHdpdGgga2V5IFx1MDAzY3RvcG9sb2d5S2V5XHUwMDNlIG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaFxuYSBwb2Qgb2YgdGhlIHNldCBvZiBwb2RzIGlzIHJ1bm5pbmciLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RBbnRpQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFudGktYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyAoZS5nLiBhdm9pZCBwdXR0aW5nIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoid2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm0sXG5pbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicG9kQWZmaW5pdHlUZXJtIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0XG5zY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuXG5JZiB0aGUgYW50aS1hZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0XG5hdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhIHBvZCBsYWJlbCB1cGRhdGUpLCB0aGVcbnN5c3RlbSBtYXkgb3IgbWF5IG5vdCB0cnkgdG8gZXZlbnR1YWxseSBldmljdCB0aGUgcG9kIGZyb20gaXRzIG5vZGUuXG5XaGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBlbGVtZW50cywgdGhlIGxpc3RzIG9mIG5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gZWFjaFxucG9kQWZmaW5pdHlUZXJtIGFyZSBpbnRlcnNlY3RlZCwgaS5lLiBhbGwgdGVybXMgbXVzdCBiZSBzYXRpc2ZpZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIGEgc2V0IG9mIHBvZHMgKG5hbWVseSB0aG9zZSBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvclxucmVsYXRpdmUgdG8gdGhlIGdpdmVuIG5hbWVzcGFjZShzKSkgdGhhdCB0aGlzIHBvZCBzaG91bGQgYmVcbmNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCxcbndoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZlxudGhlIGxhYmVsIHdpdGgga2V5IFx1MDAzY3RvcG9sb2d5S2V5XHUwMDNlIG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaFxuYSBwb2Qgb2YgdGhlIHNldCBvZiBwb2RzIGlzIHJ1bm5pbmciLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJub2RlU2VsZWN0b3IiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6ImBub2RlU2VsZWN0b3JgIGFsbG93cyBzY2hlZHVsaW5nIG9mIHBvZHMgb25seSBvbnRvIG5vZGVzIHRoYXQgaGF2ZSBlYWNoIG9mIHRoZSBzcGVjaWZpZWQgbGFiZWxzLlxuRm9yIGRvY3VtZW50YXRpb24sIHJlZmVyIHRvIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vYXNzaWduLXBvZC1ub2RlLy4iLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sInByaW9yaXR5Q2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSWYgc3BlY2lmaWVkLCBpbmRpY2F0ZXMgdGhlIHBvZCdzIHByaW9yaXR5LiBGb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvc2NoZWR1bGluZy1ldmljdGlvbi9wb2QtcHJpb3JpdHktcHJlZW1wdGlvbi8jaG93LXRvLXVzZS1wcmlvcml0eS1hbmQtcHJlZW1wdGlvbi5cbklmIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgcHJpb3JpdHkgaXMgdXNlZCwgb3IgemVybyBpZiB0aGVyZSBpcyBubyBkZWZhdWx0LiIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJgdG9sZXJhdGlvbnNgIGlzIGEgbGlzdCBvZiB0b2xlcmF0aW9ucyB0aGF0IGFsbG93IHRoZSBwb2QgdG8gc2NoZWR1bGUgb250byBub2RlcyB3aXRoIG1hdGNoaW5nIHRhaW50cy5cbkZvciBkb2N1bWVudGF0aW9uLCByZWZlciB0byBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9yZWZlcmVuY2Uva3ViZXJuZXRlcy1hcGkvd29ya2xvYWQtcmVzb3VyY2VzL3BvZC12MS8jc2NoZWR1bGluZy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjYWNoZUFjdGl2ZVRpbWVvdXQiOnsiZGVmYXVsdCI6IjVzIiwiZGVzY3JpcHRpb24iOiJgY2FjaGVBY3RpdmVUaW1lb3V0YCBpcyB0aGUgbWF4IHBlcmlvZCBkdXJpbmcgd2hpY2ggdGhlIHJlcG9ydGVyIGFnZ3JlZ2F0ZXMgZmxvd3MgYmVmb3JlIHNlbmRpbmcuXG5JbmNyZWFzaW5nIGBjYWNoZU1heEZsb3dzYCBhbmQgYGNhY2hlQWN0aXZlVGltZW91dGAgY2FuIGRlY3JlYXNlIHRoZSBuZXR3b3JrIHRyYWZmaWMgb3ZlcmhlYWQgYW5kIHRoZSBDUFUgbG9hZCxcbmhvd2V2ZXIgeW91IGNhbiBleHBlY3QgaGlnaGVyIG1lbW9yeSBjb25zdW1wdGlvbiBhbmQgYW4gaW5jcmVhc2VkIGxhdGVuY3kgaW4gdGhlIGZsb3cgY29sbGVjdGlvbi4iLCJwYXR0ZXJuIjoiXlxcZCsobnN8bXN8c3xtKT8kIiwidHlwZSI6InN0cmluZyJ9LCJjYWNoZU1heEZsb3dzIjp7ImRlZmF1bHQiOjEwMDAwMCwiZGVzY3JpcHRpb24iOiJgY2FjaGVNYXhGbG93c2AgaXMgdGhlIG1heCBudW1iZXIgb2YgZmxvd3MgaW4gYW4gYWdncmVnYXRlOyB3aGVuIHJlYWNoZWQsIHRoZSByZXBvcnRlciBzZW5kcyB0aGUgZmxvd3MuXG5JbmNyZWFzaW5nIGBjYWNoZU1heEZsb3dzYCBhbmQgYGNhY2hlQWN0aXZlVGltZW91dGAgY2FuIGRlY3JlYXNlIHRoZSBuZXR3b3JrIHRyYWZmaWMgb3ZlcmhlYWQgYW5kIHRoZSBDUFUgbG9hZCxcbmhvd2V2ZXIgeW91IGNhbiBleHBlY3QgaGlnaGVyIG1lbW9yeSBjb25zdW1wdGlvbiBhbmQgYW4gaW5jcmVhc2VkIGxhdGVuY3kgaW4gdGhlIGZsb3cgY29sbGVjdGlvbi4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sImV4Y2x1ZGVJbnRlcmZhY2VzIjp7ImRlZmF1bHQiOlsibG8iXSwiZGVzY3JpcHRpb24iOiJgZXhjbHVkZUludGVyZmFjZXNgIGNvbnRhaW5zIHRoZSBpbnRlcmZhY2UgbmFtZXMgdGhhdCBhcmUgZXhjbHVkZWQgZnJvbSBmbG93IHRyYWNpbmcuXG5BbiBlbnRyeSBlbmNsb3NlZCBieSBzbGFzaGVzLCBzdWNoIGFzIGAvYnItL2AsIGlzIG1hdGNoZWQgYXMgYSByZWd1bGFyIGV4cHJlc3Npb24uXG5PdGhlcndpc2UgaXQgaXMgbWF0Y2hlZCBhcyBhIGNhc2Utc2Vuc2l0aXZlIHN0cmluZy4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJmZWF0dXJlcyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgYWRkaXRpb25hbCBmZWF0dXJlcyB0byBlbmFibGUuIFRoZXkgYXJlIGFsbCBkaXNhYmxlZCBieSBkZWZhdWx0LiBFbmFibGluZyBhZGRpdGlvbmFsIGZlYXR1cmVzIG1pZ2h0IGhhdmUgcGVyZm9ybWFuY2UgaW1wYWN0cy4gUG9zc2libGUgdmFsdWVzIGFyZTpcdTAwM2Niclx1MDAzZVxuLSBgUGFja2V0RHJvcGA6IGVuYWJsZSB0aGUgcGFja2V0cyBkcm9wIGZsb3dzIGxvZ2dpbmcgZmVhdHVyZS4gVGhpcyBmZWF0dXJlIHJlcXVpcmVzIG1vdW50aW5nXG50aGUga2VybmVsIGRlYnVnIGZpbGVzeXN0ZW0sIHNvIHRoZSBlQlBGIHBvZCBoYXMgdG8gcnVuIGFzIHByaXZpbGVnZWQuXG5JZiB0aGUgYHNwZWMuYWdlbnQuZWJwZi5wcml2aWxlZ2VkYCBwYXJhbWV0ZXIgaXMgbm90IHNldCwgYW4gZXJyb3IgaXMgcmVwb3J0ZWQuXHUwMDNjYnJcdTAwM2Vcbi0gYEROU1RyYWNraW5nYDogZW5hYmxlIHRoZSBETlMgdHJhY2tpbmcgZmVhdHVyZS5cdTAwM2Niclx1MDAzZVxuLSBgRmxvd1JUVGA6IGVuYWJsZSBmbG93IGxhdGVuY3kgKHNSVFQpIGV4dHJhY3Rpb24gaW4gdGhlIGVCUEYgYWdlbnQgZnJvbSBUQ1AgdHJhZmZpYy5cdTAwM2Niclx1MDAzZVxuLSBgTmV0d29ya0V2ZW50c2A6IGVuYWJsZSB0aGUgTmV0d29yayBldmVudHMgbW9uaXRvcmluZyBmZWF0dXJlLiBUaGlzIGZlYXR1cmUgcmVxdWlyZXMgbW91bnRpbmdcbnRoZSBrZXJuZWwgZGVidWcgZmlsZXN5c3RlbSwgc28gdGhlIGVCUEYgcG9kIGhhcyB0byBydW4gYXMgcHJpdmlsZWdlZC5cbkl0IHJlcXVpcmVzIHVzaW5nIHRoZSBPVk4tS3ViZXJuZXRlcyBuZXR3b3JrIHBsdWdpbiB3aXRoIHRoZSBPYnNlcnZhYmlsaXR5IGZlYXR1cmUuXG5JTVBPUlRBTlQ6IHRoaXMgZmVhdHVyZSBpcyBhdmFpbGFibGUgYXMgYSBEZXZlbG9wZXIgUHJldmlldy5cdTAwM2Niclx1MDAzZSIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQWdlbnQgZmVhdHVyZSwgY2FuIGJlIG9uZSBvZjpcdTAwM2Niclx1MDAzZVxuLSBgUGFja2V0RHJvcGAsIHRvIHRyYWNrIHBhY2tldCBkcm9wcy5cdTAwM2Niclx1MDAzZVxuLSBgRE5TVHJhY2tpbmdgLCB0byB0cmFjayBzcGVjaWZpYyBpbmZvcm1hdGlvbiBvbiBETlMgdHJhZmZpYy5cdTAwM2Niclx1MDAzZVxuLSBgRmxvd1JUVGAsIHRvIHRyYWNrIFRDUCBsYXRlbmN5Llx1MDAzY2JyXHUwMDNlXG4tIGBOZXR3b3JrRXZlbnRzYCwgdG8gdHJhY2sgTmV0d29yayBldmVudHMgW0RldmVsb3BlciBQcmV2aWV3XS5cdTAwM2Niclx1MDAzZSIsImVudW0iOlsiUGFja2V0RHJvcCIsIkROU1RyYWNraW5nIiwiRmxvd1JUVCIsIk5ldHdvcmtFdmVudHMiXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZmxvd0ZpbHRlciI6eyJkZXNjcmlwdGlvbiI6ImBmbG93RmlsdGVyYCBkZWZpbmVzIHRoZSBlQlBGIGFnZW50IGNvbmZpZ3VyYXRpb24gcmVnYXJkaW5nIGZsb3cgZmlsdGVyaW5nLiIsInByb3BlcnRpZXMiOnsiYWN0aW9uIjp7ImRlc2NyaXB0aW9uIjoiYGFjdGlvbmAgZGVmaW5lcyB0aGUgYWN0aW9uIHRvIHBlcmZvcm0gb24gdGhlIGZsb3dzIHRoYXQgbWF0Y2ggdGhlIGZpbHRlci4iLCJlbnVtIjpbIkFjY2VwdCIsIlJlamVjdCJdLCJ0eXBlIjoic3RyaW5nIn0sImNpZHIiOnsiZGVzY3JpcHRpb24iOiJgY2lkcmAgZGVmaW5lcyB0aGUgSVAgQ0lEUiB0byBmaWx0ZXIgZmxvd3MgYnkuXG5FeGFtcGxlczogYDEwLjEwLjEwLjAvMjRgIG9yIGAxMDA6MTAwOjEwMDoxMDA6Oi82NGAiLCJ0eXBlIjoic3RyaW5nIn0sImRlc3RQb3J0cyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiYGRlc3RQb3J0c2AgZGVmaW5lcyB0aGUgZGVzdGluYXRpb24gcG9ydHMgdG8gZmlsdGVyIGZsb3dzIGJ5LlxuVG8gZmlsdGVyIGEgc2luZ2xlIHBvcnQsIHNldCBhIHNpbmdsZSBwb3J0IGFzIGFuIGludGVnZXIgdmFsdWUuIEZvciBleGFtcGxlLCBgZGVzdFBvcnRzOiA4MGAuXG5UbyBmaWx0ZXIgYSByYW5nZSBvZiBwb3J0cywgdXNlIGEgXCJzdGFydC1lbmRcIiByYW5nZSBpbiBzdHJpbmcgZm9ybWF0LiBGb3IgZXhhbXBsZSwgYGRlc3RQb3J0czogXCI4MC0xMDBcImAuXG5UbyBmaWx0ZXIgdHdvIHBvcnRzLCB1c2UgYSBcInBvcnQxLHBvcnQyXCIgaW4gc3RyaW5nIGZvcm1hdC4gRm9yIGV4YW1wbGUsIGBwb3J0czogXCI4MCwxMDBcImAuIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkaXJlY3Rpb24iOnsiZGVzY3JpcHRpb24iOiJgZGlyZWN0aW9uYCBkZWZpbmVzIHRoZSBkaXJlY3Rpb24gdG8gZmlsdGVyIGZsb3dzIGJ5LiIsImVudW0iOlsiSW5ncmVzcyIsIkVncmVzcyJdLCJ0eXBlIjoic3RyaW5nIn0sImVuYWJsZSI6eyJkZXNjcmlwdGlvbiI6IlNldCBgZW5hYmxlYCB0byBgdHJ1ZWAgdG8gZW5hYmxlIHRoZSBlQlBGIGZsb3cgZmlsdGVyaW5nIGZlYXR1cmUuIiwidHlwZSI6ImJvb2xlYW4ifSwiaWNtcENvZGUiOnsiZGVzY3JpcHRpb24iOiJgaWNtcENvZGVgLCBmb3IgSW50ZXJuZXQgQ29udHJvbCBNZXNzYWdlIFByb3RvY29sIChJQ01QKSB0cmFmZmljLCBkZWZpbmVzIHRoZSBJQ01QIGNvZGUgdG8gZmlsdGVyIGZsb3dzIGJ5LiIsInR5cGUiOiJpbnRlZ2VyIn0sImljbXBUeXBlIjp7ImRlc2NyaXB0aW9uIjoiYGljbXBUeXBlYCwgZm9yIElDTVAgdHJhZmZpYywgZGVmaW5lcyB0aGUgSUNNUCB0eXBlIHRvIGZpbHRlciBmbG93cyBieS4iLCJ0eXBlIjoiaW50ZWdlciJ9LCJwZWVySVAiOnsiZGVzY3JpcHRpb24iOiJgcGVlcklQYCBkZWZpbmVzIHRoZSBJUCBhZGRyZXNzIHRvIGZpbHRlciBmbG93cyBieS5cbkV4YW1wbGU6IGAxMC4xMC4xMC4xMGAuIiwidHlwZSI6InN0cmluZyJ9LCJwb3J0cyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sImRlc2NyaXB0aW9uIjoiYHBvcnRzYCBkZWZpbmVzIHRoZSBwb3J0cyB0byBmaWx0ZXIgZmxvd3MgYnkuIEl0IGlzIHVzZWQgYm90aCBmb3Igc291cmNlIGFuZCBkZXN0aW5hdGlvbiBwb3J0cy5cblRvIGZpbHRlciBhIHNpbmdsZSBwb3J0LCBzZXQgYSBzaW5nbGUgcG9ydCBhcyBhbiBpbnRlZ2VyIHZhbHVlLiBGb3IgZXhhbXBsZSwgYHBvcnRzOiA4MGAuXG5UbyBmaWx0ZXIgYSByYW5nZSBvZiBwb3J0cywgdXNlIGEgXCJzdGFydC1lbmRcIiByYW5nZSBpbiBzdHJpbmcgZm9ybWF0LiBGb3IgZXhhbXBsZSwgYHBvcnRzOiBcIjgwLTEwMFwiYC5cblRvIGZpbHRlciB0d28gcG9ydHMsIHVzZSBhIFwicG9ydDEscG9ydDJcIiBpbiBzdHJpbmcgZm9ybWF0LiBGb3IgZXhhbXBsZSwgYHBvcnRzOiBcIjgwLDEwMFwiYC4iLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInByb3RvY29sIjp7ImRlc2NyaXB0aW9uIjoiYHByb3RvY29sYCBkZWZpbmVzIHRoZSBwcm90b2NvbCB0byBmaWx0ZXIgZmxvd3MgYnkuIiwiZW51bSI6WyJUQ1AiLCJVRFAiLCJJQ01QIiwiSUNNUHY2IiwiU0NUUCJdLCJ0eXBlIjoic3RyaW5nIn0sInNvdXJjZVBvcnRzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwiZGVzY3JpcHRpb24iOiJgc291cmNlUG9ydHNgIGRlZmluZXMgdGhlIHNvdXJjZSBwb3J0cyB0byBmaWx0ZXIgZmxvd3MgYnkuXG5UbyBmaWx0ZXIgYSBzaW5nbGUgcG9ydCwgc2V0IGEgc2luZ2xlIHBvcnQgYXMgYW4gaW50ZWdlciB2YWx1ZS4gRm9yIGV4YW1wbGUsIGBzb3VyY2VQb3J0czogODBgLlxuVG8gZmlsdGVyIGEgcmFuZ2Ugb2YgcG9ydHMsIHVzZSBhIFwic3RhcnQtZW5kXCIgcmFuZ2UgaW4gc3RyaW5nIGZvcm1hdC4gRm9yIGV4YW1wbGUsIGBzb3VyY2VQb3J0czogXCI4MC0xMDBcImAuXG5UbyBmaWx0ZXIgdHdvIHBvcnRzLCB1c2UgYSBcInBvcnQxLHBvcnQyXCIgaW4gc3RyaW5nIGZvcm1hdC4gRm9yIGV4YW1wbGUsIGBwb3J0czogXCI4MCwxMDBcImAuIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0Y3BGbGFncyI6eyJkZXNjcmlwdGlvbiI6ImB0Y3BGbGFnc2AgZGVmaW5lcyB0aGUgVENQIGZsYWdzIHRvIGZpbHRlciBmbG93cyBieS4iLCJlbnVtIjpbIlNZTiIsIlNZTi1BQ0siLCJBQ0siLCJGSU4iLCJSU1QiLCJVUkciLCJFQ0UiLCJDV1IiLCJGSU4tQUNLIiwiUlNULUFDSyJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImltYWdlUHVsbFBvbGljeSI6eyJkZWZhdWx0IjoiSWZOb3RQcmVzZW50IiwiZGVzY3JpcHRpb24iOiJgaW1hZ2VQdWxsUG9saWN5YCBpcyB0aGUgS3ViZXJuZXRlcyBwdWxsIHBvbGljeSBmb3IgdGhlIGltYWdlIGRlZmluZWQgYWJvdmUiLCJlbnVtIjpbIklmTm90UHJlc2VudCIsIkFsd2F5cyIsIk5ldmVyIl0sInR5cGUiOiJzdHJpbmcifSwiaW50ZXJmYWNlcyI6eyJkZXNjcmlwdGlvbiI6ImBpbnRlcmZhY2VzYCBjb250YWlucyB0aGUgaW50ZXJmYWNlIG5hbWVzIGZyb20gd2hlcmUgZmxvd3MgYXJlIGNvbGxlY3RlZC4gSWYgZW1wdHksIHRoZSBhZ2VudFxuZmV0Y2hlcyBhbGwgdGhlIGludGVyZmFjZXMgaW4gdGhlIHN5c3RlbSwgZXhjZXB0aW5nIHRoZSBvbmVzIGxpc3RlZCBpbiBgZXhjbHVkZUludGVyZmFjZXNgLlxuQW4gZW50cnkgZW5jbG9zZWQgYnkgc2xhc2hlcywgc3VjaCBhcyBgL2JyLS9gLCBpcyBtYXRjaGVkIGFzIGEgcmVndWxhciBleHByZXNzaW9uLlxuT3RoZXJ3aXNlIGl0IGlzIG1hdGNoZWQgYXMgYSBjYXNlLXNlbnNpdGl2ZSBzdHJpbmcuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwia2Fma2FCYXRjaFNpemUiOnsiZGVmYXVsdCI6MTA0ODU3NiwiZGVzY3JpcHRpb24iOiJga2Fma2FCYXRjaFNpemVgIGxpbWl0cyB0aGUgbWF4aW11bSBzaXplIG9mIGEgcmVxdWVzdCBpbiBieXRlcyBiZWZvcmUgYmVpbmcgc2VudCB0byBhIHBhcnRpdGlvbi4gSWdub3JlZCB3aGVuIG5vdCB1c2luZyBLYWZrYS4gRGVmYXVsdDogMU1CLiIsInR5cGUiOiJpbnRlZ2VyIn0sImxvZ0xldmVsIjp7ImRlZmF1bHQiOiJpbmZvIiwiZGVzY3JpcHRpb24iOiJgbG9nTGV2ZWxgIGRlZmluZXMgdGhlIGxvZyBsZXZlbCBmb3IgdGhlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBlQlBGIEFnZW50IiwiZW51bSI6WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImZhdGFsIiwicGFuaWMiXSwidHlwZSI6InN0cmluZyJ9LCJtZXRyaWNzIjp7ImRlc2NyaXB0aW9uIjoiYG1ldHJpY3NgIGRlZmluZXMgdGhlIGVCUEYgYWdlbnQgY29uZmlndXJhdGlvbiByZWdhcmRpbmcgbWV0cmljcy4iLCJwcm9wZXJ0aWVzIjp7ImRpc2FibGVBbGVydHMiOnsiZGVzY3JpcHRpb24iOiJgZGlzYWJsZUFsZXJ0c2AgaXMgYSBsaXN0IG9mIGFsZXJ0cyB0aGF0IHNob3VsZCBiZSBkaXNhYmxlZC5cblBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2VcbmBOZXRPYnNlcnZEcm9wcGVkRmxvd3NgLCB3aGljaCBpcyB0cmlnZ2VyZWQgd2hlbiB0aGUgZUJQRiBhZ2VudCBpcyBtaXNzaW5nIHBhY2tldHMgb3IgZmxvd3MsIHN1Y2ggYXMgd2hlbiB0aGUgQlBGIGhhc2htYXAgaXMgYnVzeSBvciBmdWxsLCBvciB0aGUgY2FwYWNpdHkgbGltaXRlciBpcyBiZWluZyB0cmlnZ2VyZWQuXHUwMDNjYnJcdTAwM2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgYW4gZUJQRiBhZ2VudCBhbGVydC5cblBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2VcbmBOZXRPYnNlcnZEcm9wcGVkRmxvd3NgLCB3aGljaCBpcyB0cmlnZ2VyZWQgd2hlbiB0aGUgZUJQRiBhZ2VudCBpcyBtaXNzaW5nIHBhY2tldHMgb3IgZmxvd3MsIHN1Y2ggYXMgd2hlbiB0aGUgQlBGIGhhc2htYXAgaXMgYnVzeSBvciBmdWxsLCBvciB0aGUgY2FwYWNpdHkgbGltaXRlciBpcyBiZWluZyB0cmlnZ2VyZWQuXHUwMDNjYnJcdTAwM2UiLCJlbnVtIjpbIk5ldE9ic2VydkRyb3BwZWRGbG93cyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJlbmFibGUiOnsiZGVzY3JpcHRpb24iOiJTZXQgYGVuYWJsZWAgdG8gYGZhbHNlYCB0byBkaXNhYmxlIGVCUEYgYWdlbnQgbWV0cmljcyBjb2xsZWN0aW9uLiBJdCBpcyBlbmFibGVkIGJ5IGRlZmF1bHQuIiwidHlwZSI6ImJvb2xlYW4ifSwic2VydmVyIjp7ImRlc2NyaXB0aW9uIjoiTWV0cmljcyBzZXJ2ZXIgZW5kcG9pbnQgY29uZmlndXJhdGlvbiBmb3IgdGhlIFByb21ldGhldXMgc2NyYXBlci4iLCJwcm9wZXJ0aWVzIjp7InBvcnQiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWV0cmljcyBzZXJ2ZXIgSFRUUCBwb3J0LiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NjU1MzUsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBpbnNlY3VyZVNraXBWZXJpZnlgIGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHByb3ZpZGVkIGNlcnRpZmljYXRlLlxuSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGBwcm92aWRlZENhRmlsZWAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwcm92aWRlZCI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uIHdoZW4gYHR5cGVgIGlzIHNldCB0byBgUHJvdmlkZWRgLiIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0S2V5YCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4gT21pdCB3aGVuIHRoZSBrZXkgaXMgbm90IG5lY2Vzc2FyeS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGBjb25maWdtYXBgIG9yIGBzZWNyZXRgLiIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvdmlkZWRDYUZpbGUiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gdGhlIENBIGZpbGUgd2hlbiBgdHlwZWAgaXMgc2V0IHRvIGBQcm92aWRlZGAuIiwicHJvcGVydGllcyI6eyJmaWxlIjp7ImRlc2NyaXB0aW9uIjoiRmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyB0aGUgZmlsZS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJEaXNhYmxlZCIsImRlc2NyaXB0aW9uIjoiU2VsZWN0IHRoZSB0eXBlIG9mIFRMUyBjb25maWd1cmF0aW9uOlx1MDAzY2JyXHUwMDNlXG4tIGBEaXNhYmxlZGAgKGRlZmF1bHQpIHRvIG5vdCBjb25maWd1cmUgVExTIGZvciB0aGUgZW5kcG9pbnQuXG4tIGBQcm92aWRlZGAgdG8gbWFudWFsbHkgcHJvdmlkZSBjZXJ0IGZpbGUgYW5kIGEga2V5IGZpbGUuIFtVbnN1cHBvcnRlZCAoKildLlxuLSBgQXV0b2AgdG8gdXNlIE9wZW5TaGlmdCBhdXRvIGdlbmVyYXRlZCBjZXJ0aWZpY2F0ZSB1c2luZyBhbm5vdGF0aW9ucy4iLCJlbnVtIjpbIkRpc2FibGVkIiwiUHJvdmlkZWQiLCJBdXRvIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwcml2aWxlZ2VkIjp7ImRlc2NyaXB0aW9uIjoiUHJpdmlsZWdlZCBtb2RlIGZvciB0aGUgZUJQRiBBZ2VudCBjb250YWluZXIuIFdoZW4gaWdub3JlZCBvciBzZXQgdG8gYGZhbHNlYCwgdGhlIG9wZXJhdG9yIHNldHNcbmdyYW51bGFyIGNhcGFiaWxpdGllcyAoQlBGLCBQRVJGTU9OLCBORVRfQURNSU4sIFNZU19SRVNPVVJDRSkgdG8gdGhlIGNvbnRhaW5lci5cbklmIGZvciBzb21lIHJlYXNvbiB0aGVzZSBjYXBhYmlsaXRpZXMgY2Fubm90IGJlIHNldCwgc3VjaCBhcyBpZiBhbiBvbGQga2VybmVsIHZlcnNpb24gbm90IGtub3dpbmcgQ0FQX0JQRlxuaXMgaW4gdXNlLCB0aGVuIHlvdSBjYW4gdHVybiBvbiB0aGlzIG1vZGUgZm9yIG1vcmUgZ2xvYmFsIHByaXZpbGVnZXMuXG5Tb21lIGFnZW50IGZlYXR1cmVzIHJlcXVpcmUgdGhlIHByaXZpbGVnZWQgbW9kZSwgc3VjaCBhcyBwYWNrZXQgZHJvcHMgdHJhY2tpbmcgKHNlZSBgZmVhdHVyZXNgKSBhbmQgU1ItSU9WIHN1cHBvcnQuIiwidHlwZSI6ImJvb2xlYW4ifSwicmVzb3VyY2VzIjp7ImRlZmF1bHQiOnsibGltaXRzIjp7Im1lbW9yeSI6IjgwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiI1ME1pIn19LCJkZXNjcmlwdGlvbiI6ImByZXNvdXJjZXNgIGFyZSB0aGUgY29tcHV0ZSByZXNvdXJjZXMgcmVxdWlyZWQgYnkgdGhpcyBjb250YWluZXIuXG5Gb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInByb3BlcnRpZXMiOnsiY2xhaW1zIjp7ImRlc2NyaXB0aW9uIjoiQ2xhaW1zIGxpc3RzIHRoZSBuYW1lcyBvZiByZXNvdXJjZXMsIGRlZmluZWQgaW4gc3BlYy5yZXNvdXJjZUNsYWltcyxcbnRoYXQgYXJlIHVzZWQgYnkgdGhpcyBjb250YWluZXIuXG5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIHRoZVxuRHluYW1pY1Jlc291cmNlQWxsb2NhdGlvbiBmZWF0dXJlIGdhdGUuXG5cblRoaXMgZmllbGQgaXMgaW1tdXRhYmxlLiBJdCBjYW4gb25seSBiZSBzZXQgZm9yIGNvbnRhaW5lcnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZUNsYWltIHJlZmVyZW5jZXMgb25lIGVudHJ5IGluIFBvZFNwZWMuUmVzb3VyY2VDbGFpbXMuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBtdXN0IG1hdGNoIHRoZSBuYW1lIG9mIG9uZSBlbnRyeSBpbiBwb2Quc3BlYy5yZXNvdXJjZUNsYWltcyBvZlxudGhlIFBvZCB3aGVyZSB0aGlzIGZpZWxkIGlzIHVzZWQuIEl0IG1ha2VzIHRoYXQgcmVzb3VyY2UgYXZhaWxhYmxlXG5pbnNpZGUgYSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0Ijp7ImRlc2NyaXB0aW9uIjoiUmVxdWVzdCBpcyB0aGUgbmFtZSBjaG9zZW4gZm9yIGEgcmVxdWVzdCBpbiB0aGUgcmVmZXJlbmNlZCBjbGFpbS5cbklmIGVtcHR5LCBldmVyeXRoaW5nIGZyb20gdGhlIGNsYWltIGlzIG1hZGUgYXZhaWxhYmxlLCBvdGhlcndpc2Vcbm9ubHkgdGhlIHJlc3VsdCBvZiB0aGlzIHJlcXVlc3QuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbIm5hbWUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9LCJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInNhbXBsaW5nIjp7ImRlZmF1bHQiOjUwLCJkZXNjcmlwdGlvbiI6IlNhbXBsaW5nIHJhdGUgb2YgdGhlIGZsb3cgcmVwb3J0ZXIuIDEwMCBtZWFucyBvbmUgZmxvdyBvbiAxMDAgaXMgc2VudC4gMCBvciAxIG1lYW5zIGFsbCBmbG93cyBhcmUgc2FtcGxlZC4iLCJmb3JtYXQiOiJpbnQzMiIsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn19LCJ0eXBlIjoib2JqZWN0In0sImlwZml4Ijp7ImRlc2NyaXB0aW9uIjoiYGlwZml4YCBbZGVwcmVjYXRlZCAoKildIC0gZGVzY3JpYmVzIHRoZSBzZXR0aW5ncyByZWxhdGVkIHRvIHRoZSBJUEZJWC1iYXNlZCBmbG93IHJlcG9ydGVyIHdoZW4gYHNwZWMuYWdlbnQudHlwZWBcbmlzIHNldCB0byBgSVBGSVhgLiIsInByb3BlcnRpZXMiOnsiY2FjaGVBY3RpdmVUaW1lb3V0Ijp7ImRlZmF1bHQiOiIyMHMiLCJkZXNjcmlwdGlvbiI6ImBjYWNoZUFjdGl2ZVRpbWVvdXRgIGlzIHRoZSBtYXggcGVyaW9kIGR1cmluZyB3aGljaCB0aGUgcmVwb3J0ZXIgYWdncmVnYXRlcyBmbG93cyBiZWZvcmUgc2VuZGluZy4iLCJwYXR0ZXJuIjoiXlxcZCsobnN8bXN8c3xtKT8kIiwidHlwZSI6InN0cmluZyJ9LCJjYWNoZU1heEZsb3dzIjp7ImRlZmF1bHQiOjQwMCwiZGVzY3JpcHRpb24iOiJgY2FjaGVNYXhGbG93c2AgaXMgdGhlIG1heCBudW1iZXIgb2YgZmxvd3MgaW4gYW4gYWdncmVnYXRlOyB3aGVuIHJlYWNoZWQsIHRoZSByZXBvcnRlciBzZW5kcyB0aGUgZmxvd3MuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJjbHVzdGVyTmV0d29ya09wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiYGNsdXN0ZXJOZXR3b3JrT3BlcmF0b3JgIGRlZmluZXMgdGhlIHNldHRpbmdzIHJlbGF0ZWQgdG8gdGhlIE9wZW5TaGlmdCBDbHVzdGVyIE5ldHdvcmsgT3BlcmF0b3IsIHdoZW4gYXZhaWxhYmxlLiIsInByb3BlcnRpZXMiOnsibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiJvcGVuc2hpZnQtbmV0d29yay1vcGVyYXRvciIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlICB3aGVyZSB0aGUgY29uZmlnIG1hcCBpcyBnb2luZyB0byBiZSBkZXBsb3llZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImZvcmNlU2FtcGxlQWxsIjp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBmb3JjZVNhbXBsZUFsbGAgYWxsb3dzIGRpc2FibGluZyBzYW1wbGluZyBpbiB0aGUgSVBGSVgtYmFzZWQgZmxvdyByZXBvcnRlci5cbkl0IGlzIG5vdCByZWNvbW1lbmRlZCB0byBzYW1wbGUgYWxsIHRoZSB0cmFmZmljIHdpdGggSVBGSVgsIGFzIGl0IG1pZ2h0IGdlbmVyYXRlIGNsdXN0ZXIgaW5zdGFiaWxpdHkuXG5JZiB5b3UgUkVBTExZIHdhbnQgdG8gZG8gdGhhdCwgc2V0IHRoaXMgZmxhZyB0byBgdHJ1ZWAuIFVzZSBhdCB5b3VyIG93biByaXNrLlxuV2hlbiBpdCBpcyBzZXQgdG8gYHRydWVgLCB0aGUgdmFsdWUgb2YgYHNhbXBsaW5nYCBpcyBpZ25vcmVkLiIsInR5cGUiOiJib29sZWFuIn0sIm92bkt1YmVybmV0ZXMiOnsiZGVzY3JpcHRpb24iOiJgb3ZuS3ViZXJuZXRlc2AgZGVmaW5lcyB0aGUgc2V0dGluZ3Mgb2YgdGhlIE9WTi1LdWJlcm5ldGVzIG5ldHdvcmsgcGx1Z2luLCB3aGVuIGF2YWlsYWJsZS4gVGhpcyBjb25maWd1cmF0aW9uIGlzIHVzZWQgd2hlbiB1c2luZyBPVk4ncyBJUEZJWCBleHBvcnRzLCB3aXRob3V0IE9wZW5TaGlmdC4gV2hlbiB1c2luZyBPcGVuU2hpZnQsIHJlZmVyIHRvIHRoZSBgY2x1c3Rlck5ldHdvcmtPcGVyYXRvcmAgcHJvcGVydHkgaW5zdGVhZC4iLCJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lck5hbWUiOnsiZGVmYXVsdCI6Im92bmt1YmUtbm9kZSIsImRlc2NyaXB0aW9uIjoiYGNvbnRhaW5lck5hbWVgIGRlZmluZXMgdGhlIG5hbWUgb2YgdGhlIGNvbnRhaW5lciB0byBjb25maWd1cmUgZm9yIElQRklYLiIsInR5cGUiOiJzdHJpbmcifSwiZGFlbW9uU2V0TmFtZSI6eyJkZWZhdWx0Ijoib3Zua3ViZS1ub2RlIiwiZGVzY3JpcHRpb24iOiJgZGFlbW9uU2V0TmFtZWAgZGVmaW5lcyB0aGUgbmFtZSBvZiB0aGUgRGFlbW9uU2V0IGNvbnRyb2xsaW5nIHRoZSBPVk4tS3ViZXJuZXRlcyBwb2RzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiJvdm4ta3ViZXJuZXRlcyIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIHdoZXJlIE9WTi1LdWJlcm5ldGVzIHBvZHMgYXJlIGRlcGxveWVkLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwic2FtcGxpbmciOnsiZGVmYXVsdCI6NDAwLCJkZXNjcmlwdGlvbiI6ImBzYW1wbGluZ2AgaXMgdGhlIHNhbXBsaW5nIHJhdGUgb24gdGhlIHJlcG9ydGVyLiAxMDAgbWVhbnMgb25lIGZsb3cgb24gMTAwIGlzIHNlbnQuXG5UbyBlbnN1cmUgY2x1c3RlciBzdGFiaWxpdHksIGl0IGlzIG5vdCBwb3NzaWJsZSB0byBzZXQgYSB2YWx1ZSBiZWxvdyAyLlxuSWYgeW91IHJlYWxseSB3YW50IHRvIHNhbXBsZSBldmVyeSBwYWNrZXQsIHdoaWNoIG1pZ2h0IGltcGFjdCB0aGUgY2x1c3RlciBzdGFiaWxpdHksXG5yZWZlciB0byBgZm9yY2VTYW1wbGVBbGxgLiBBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHVzZSB0aGUgZUJQRiBBZ2VudCBpbnN0ZWFkIG9mIElQRklYLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MiwidHlwZSI6ImludGVnZXIifX0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6eyJkZWZhdWx0IjoiZUJQRiIsImRlc2NyaXB0aW9uIjoiYHR5cGVgIFtkZXByZWNhdGVkICgqKV0gc2VsZWN0cyB0aGUgZmxvd3MgdHJhY2luZyBhZ2VudC4gUHJldmlvdXNseSwgdGhpcyBmaWVsZCBhbGxvd2VkIHRvIHNlbGVjdCBiZXR3ZWVuIGBlQlBGYCBvciBgSVBGSVhgLlxuT25seSBgZUJQRmAgaXMgYWxsb3dlZCBub3csIHNvIHRoaXMgZmllbGQgaXMgZGVwcmVjYXRlZCBhbmQgaXMgcGxhbm5lZCBmb3IgcmVtb3ZhbCBpbiBhIGZ1dHVyZSB2ZXJzaW9uIG9mIHRoZSBBUEkuIiwiZW51bSI6WyJlQlBGIiwiSVBGSVgiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJjb25zb2xlUGx1Z2luIjp7ImRlc2NyaXB0aW9uIjoiYGNvbnNvbGVQbHVnaW5gIGRlZmluZXMgdGhlIHNldHRpbmdzIHJlbGF0ZWQgdG8gdGhlIE9wZW5TaGlmdCBDb25zb2xlIHBsdWdpbiwgd2hlbiBhdmFpbGFibGUuIiwicHJvcGVydGllcyI6eyJhZHZhbmNlZCI6eyJkZXNjcmlwdGlvbiI6ImBhZHZhbmNlZGAgYWxsb3dzIHNldHRpbmcgc29tZSBhc3BlY3RzIG9mIHRoZSBpbnRlcm5hbCBjb25maWd1cmF0aW9uIG9mIHRoZSBjb25zb2xlIHBsdWdpbi5cblRoaXMgc2VjdGlvbiBpcyBhaW1lZCBtb3N0bHkgZm9yIGRlYnVnZ2luZyBhbmQgZmluZS1ncmFpbmVkIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbnMsXG5zdWNoIGFzIGBHT0dDYCBhbmQgYEdPTUFYUFJPQ1NgIGVudiB2YXJzLiBTZXQgdGhlc2UgdmFsdWVzIGF0IHlvdXIgb3duIHJpc2suIiwicHJvcGVydGllcyI6eyJhcmdzIjp7ImRlc2NyaXB0aW9uIjoiYGFyZ3NgIGFsbG93cyBwYXNzaW5nIGN1c3RvbSBhcmd1bWVudHMgdG8gdW5kZXJseWluZyBjb21wb25lbnRzLiBVc2VmdWwgZm9yIG92ZXJyaWRpbmdcbnNvbWUgcGFyYW1ldGVycywgc3VjaCBhcyBhIFVSTCBvciBhIGNvbmZpZ3VyYXRpb24gcGF0aCwgdGhhdCBzaG91bGQgbm90IGJlXG5wdWJsaWNseSBleHBvc2VkIGFzIHBhcnQgb2YgdGhlIEZsb3dDb2xsZWN0b3IgZGVzY3JpcHRvciwgYXMgdGhleSBhcmUgb25seSB1c2VmdWxcbmluIGVkZ2UgZGVidWcgb3Igc3VwcG9ydCBzY2VuYXJpb3MuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwiZW52Ijp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJgZW52YCBhbGxvd3MgcGFzc2luZyBjdXN0b20gZW52aXJvbm1lbnQgdmFyaWFibGVzIHRvIHVuZGVybHlpbmcgY29tcG9uZW50cy4gVXNlZnVsIGZvciBwYXNzaW5nXG5zb21lIHZlcnkgY29uY3JldGUgcGVyZm9ybWFuY2UtdHVuaW5nIG9wdGlvbnMsIHN1Y2ggYXMgYEdPR0NgIGFuZCBgR09NQVhQUk9DU2AsIHRoYXQgc2hvdWxkIG5vdCBiZVxucHVibGljbHkgZXhwb3NlZCBhcyBwYXJ0IG9mIHRoZSBGbG93Q29sbGVjdG9yIGRlc2NyaXB0b3IsIGFzIHRoZXkgYXJlIG9ubHkgdXNlZnVsXG5pbiBlZGdlIGRlYnVnIG9yIHN1cHBvcnQgc2NlbmFyaW9zLiIsInR5cGUiOiJvYmplY3QifSwicG9ydCI6eyJkZWZhdWx0Ijo5MDAxLCJkZXNjcmlwdGlvbiI6ImBwb3J0YCBpcyB0aGUgcGx1Z2luIHNlcnZpY2UgcG9ydC4gRG8gbm90IHVzZSA5MDAyLCB3aGljaCBpcyByZXNlcnZlZCBmb3IgbWV0cmljcy4iLCJmb3JtYXQiOiJpbnQzMiIsIm1heGltdW0iOjY1NTM1LCJtaW5pbXVtIjoxLCJ0eXBlIjoiaW50ZWdlciJ9LCJyZWdpc3RlciI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6ImByZWdpc3RlcmAgYWxsb3dzLCB3aGVuIHNldCB0byBgdHJ1ZWAsIHRvIGF1dG9tYXRpY2FsbHkgcmVnaXN0ZXIgdGhlIHByb3ZpZGVkIGNvbnNvbGUgcGx1Z2luIHdpdGggdGhlIE9wZW5TaGlmdCBDb25zb2xlIG9wZXJhdG9yLlxuV2hlbiBzZXQgdG8gYGZhbHNlYCwgeW91IGNhbiBzdGlsbCByZWdpc3RlciBpdCBtYW51YWxseSBieSBlZGl0aW5nIGNvbnNvbGUub3BlcmF0b3Iub3BlbnNoaWZ0LmlvL2NsdXN0ZXIgd2l0aCB0aGUgZm9sbG93aW5nIGNvbW1hbmQ6XG5gb2MgcGF0Y2ggY29uc29sZS5vcGVyYXRvci5vcGVuc2hpZnQuaW8gY2x1c3RlciAtLXR5cGU9J2pzb24nIC1wICdbe1wib3BcIjogXCJhZGRcIiwgXCJwYXRoXCI6IFwiL3NwZWMvcGx1Z2lucy8tXCIsIFwidmFsdWVcIjogXCJuZXRvYnNlcnYtcGx1Z2luXCJ9XSdgIiwidHlwZSI6ImJvb2xlYW4ifSwic2NoZWR1bGluZyI6eyJkZXNjcmlwdGlvbiI6ImBzY2hlZHVsaW5nYCBjb250cm9scyBob3cgdGhlIHBvZHMgYXJlIHNjaGVkdWxlZCBvbiBub2Rlcy4iLCJwcm9wZXJ0aWVzIjp7ImFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiSWYgc3BlY2lmaWVkLCB0aGUgcG9kJ3Mgc2NoZWR1bGluZyBjb25zdHJhaW50cy4gRm9yIGRvY3VtZW50YXRpb24sIHJlZmVyIHRvIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL3JlZmVyZW5jZS9rdWJlcm5ldGVzLWFwaS93b3JrbG9hZC1yZXNvdXJjZXMvcG9kLXYxLyNzY2hlZHVsaW5nLiIsInByb3BlcnRpZXMiOnsibm9kZUFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiRGVzY3JpYmVzIG5vZGUgYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyBmb3IgdGhlIHBvZC4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNjaGVkdWxlciB3aWxsIHByZWZlciB0byBzY2hlZHVsZSBwb2RzIHRvIG5vZGVzIHRoYXQgc2F0aXNmeVxudGhlIGFmZmluaXR5IGV4cHJlc3Npb25zIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkLCBidXQgaXQgbWF5IGNob29zZVxuYSBub2RlIHRoYXQgdmlvbGF0ZXMgb25lIG9yIG1vcmUgb2YgdGhlIGV4cHJlc3Npb25zLiBUaGUgbm9kZSB0aGF0IGlzXG5tb3N0IHByZWZlcnJlZCBpcyB0aGUgb25lIHdpdGggdGhlIGdyZWF0ZXN0IHN1bSBvZiB3ZWlnaHRzLCBpLmUuXG5mb3IgZWFjaCBub2RlIHRoYXQgbWVldHMgYWxsIG9mIHRoZSBzY2hlZHVsaW5nIHJlcXVpcmVtZW50cyAocmVzb3VyY2VcbnJlcXVlc3QsIHJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZyBhZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIG1hdGNoRXhwcmVzc2lvbnM7IHRoZVxubm9kZShzKSB3aXRoIHRoZSBoaWdoZXN0IHN1bSBhcmUgdGhlIG1vc3QgcHJlZmVycmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQW4gZW1wdHkgcHJlZmVycmVkIHNjaGVkdWxpbmcgdGVybSBtYXRjaGVzIGFsbCBvYmplY3RzIHdpdGggaW1wbGljaXQgd2VpZ2h0IDBcbihpLmUuIGl0J3MgYSBuby1vcCkuIEEgbnVsbCBwcmVmZXJyZWQgc2NoZWR1bGluZyB0ZXJtIG1hdGNoZXMgbm8gb2JqZWN0cyAoaS5lLiBpcyBhbHNvIGEgbm8tb3ApLiIsInByb3BlcnRpZXMiOnsicHJlZmVyZW5jZSI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgbGFiZWxzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoRmllbGRzIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBmaWVsZHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoiV2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBub2RlU2VsZWN0b3JUZXJtLCBpbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicHJlZmVyZW5jZSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXRcbnNjaGVkdWxpbmcgdGltZSwgdGhlIHBvZCB3aWxsIG5vdCBiZSBzY2hlZHVsZWQgb250byB0aGUgbm9kZS5cbklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0XG5hdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhbiB1cGRhdGUpLCB0aGUgc3lzdGVtXG5tYXkgb3IgbWF5IG5vdCB0cnkgdG8gZXZlbnR1YWxseSBldmljdCB0aGUgcG9kIGZyb20gaXRzIG5vZGUuIiwicHJvcGVydGllcyI6eyJub2RlU2VsZWN0b3JUZXJtcyI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciB0ZXJtcy4gVGhlIHRlcm1zIGFyZSBPUmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBudWxsIG9yIGVtcHR5IG5vZGUgc2VsZWN0b3IgdGVybSBtYXRjaGVzIG5vIG9iamVjdHMuIFRoZSByZXF1aXJlbWVudHMgb2ZcbnRoZW0gYXJlIEFORGVkLlxuVGhlIFRvcG9sb2d5U2VsZWN0b3JUZXJtIHR5cGUgaW1wbGVtZW50cyBhIHN1YnNldCBvZiB0aGUgTm9kZVNlbGVjdG9yVGVybS4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGxhYmVscy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaEZpZWxkcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgZmllbGRzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5vZGVTZWxlY3RvclRlcm1zIl0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifSwicG9kQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgKGUuZy4gY28tbG9jYXRlIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlXG5hIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXNcbm1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS5cbmZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZVxucmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIGhhcyBwb2RzIHdoaWNoIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtOyB0aGVcbm5vZGUocykgd2l0aCB0aGUgaGlnaGVzdCBzdW0gYXJlIHRoZSBtb3N0IHByZWZlcnJlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSB3ZWlnaHRzIG9mIGFsbCBvZiB0aGUgbWF0Y2hlZCBXZWlnaHRlZFBvZEFmZmluaXR5VGVybSBmaWVsZHMgYXJlIGFkZGVkIHBlci1ub2RlIHRvIGZpbmQgdGhlIG1vc3QgcHJlZmVycmVkIG5vZGUocykiLCJwcm9wZXJ0aWVzIjp7InBvZEFmZmluaXR5VGVybSI6eyJkZXNjcmlwdGlvbiI6IlJlcXVpcmVkLiBBIHBvZCBhZmZpbml0eSB0ZXJtLCBhc3NvY2lhdGVkIHdpdGggdGhlIGNvcnJlc3BvbmRpbmcgd2VpZ2h0LiIsInByb3BlcnRpZXMiOnsibGFiZWxTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciBhIHNldCBvZiByZXNvdXJjZXMsIGluIHRoaXMgY2FzZSBwb2RzLlxuSWYgaXQncyBudWxsLCB0aGlzIFBvZEFmZmluaXR5VGVybSBtYXRjaGVzIHdpdGggbm8gUG9kcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1pc21hdGNoTGFiZWxLZXlzIjp7ImRlc2NyaXB0aW9uIjoiTWlzbWF0Y2hMYWJlbEtleXMgaXMgYSBzZXQgb2YgcG9kIGxhYmVsIGtleXMgdG8gc2VsZWN0IHdoaWNoIHBvZHMgd2lsbFxuYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uLiBUaGUga2V5cyBhcmUgdXNlZCB0byBsb29rdXAgdmFsdWVzIGZyb20gdGhlXG5pbmNvbWluZyBwb2QgbGFiZWxzLCB0aG9zZSBrZXktdmFsdWUgbGFiZWxzIGFyZSBtZXJnZWQgd2l0aCBgbGFiZWxTZWxlY3RvcmAgYXMgYGtleSBub3RpbiAodmFsdWUpYFxudG8gc2VsZWN0IHRoZSBncm91cCBvZiBleGlzdGluZyBwb2RzIHdoaWNoIHBvZHMgd2lsbCBiZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb25cbmZvciB0aGUgaW5jb21pbmcgcG9kJ3MgcG9kIChhbnRpKSBhZmZpbml0eS4gS2V5cyB0aGF0IGRvbid0IGV4aXN0IGluIHRoZSBpbmNvbWluZ1xucG9kIGxhYmVscyB3aWxsIGJlIGlnbm9yZWQuIFRoZSBkZWZhdWx0IHZhbHVlIGlzIGVtcHR5LlxuVGhlIHNhbWUga2V5IGlzIGZvcmJpZGRlbiB0byBleGlzdCBpbiBib3RoIG1pc21hdGNoTGFiZWxLZXlzIGFuZCBsYWJlbFNlbGVjdG9yLlxuQWxzbywgbWlzbWF0Y2hMYWJlbEtleXMgY2Fubm90IGJlIHNldCB3aGVuIGxhYmVsU2VsZWN0b3IgaXNuJ3Qgc2V0LlxuVGhpcyBpcyBhIGJldGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIE1hdGNoTGFiZWxLZXlzSW5Qb2RBZmZpbml0eSBmZWF0dXJlIGdhdGUgKGVuYWJsZWQgYnkgZGVmYXVsdCkuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZVNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIHRoZSBzZXQgb2YgbmFtZXNwYWNlcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBzZWxlY3RlZCBieSB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgbGlzdGVkIGluIHRoZSBuYW1lc3BhY2VzIGZpZWxkLlxubnVsbCBzZWxlY3RvciBhbmQgbnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLlxuQW4gZW1wdHkgc2VsZWN0b3IgKHt9KSBtYXRjaGVzIGFsbCBuYW1lc3BhY2VzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlcyI6eyJkZXNjcmlwdGlvbiI6Im5hbWVzcGFjZXMgc3BlY2lmaWVzIGEgc3RhdGljIGxpc3Qgb2YgbmFtZXNwYWNlIG5hbWVzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIGxpc3RlZCBpbiB0aGlzIGZpZWxkXG5hbmQgdGhlIG9uZXMgc2VsZWN0ZWQgYnkgbmFtZXNwYWNlU2VsZWN0b3IuXG5udWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBhbmQgbnVsbCBuYW1lc3BhY2VTZWxlY3RvciBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInRvcG9sb2d5S2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhpcyBwb2Qgc2hvdWxkIGJlIGNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCB0aGUgcG9kcyBtYXRjaGluZ1xudGhlIGxhYmVsU2VsZWN0b3IgaW4gdGhlIHNwZWNpZmllZCBuYW1lc3BhY2VzLCB3aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGVcbndob3NlIHZhbHVlIG9mIHRoZSBsYWJlbCB3aXRoIGtleSB0b3BvbG9neUtleSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2ggYW55IG9mIHRoZVxuc2VsZWN0ZWQgcG9kcyBpcyBydW5uaW5nLlxuRW1wdHkgdG9wb2xvZ3lLZXkgaXMgbm90IGFsbG93ZWQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidG9wb2xvZ3lLZXkiXSwidHlwZSI6Im9iamVjdCJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJ3ZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybSxcbmluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwb2RBZmZpbml0eVRlcm0iLCJ3ZWlnaHQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sInJlcXVpcmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJJZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0XG5zY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuXG5JZiB0aGUgYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYSBwb2QgbGFiZWwgdXBkYXRlKSwgdGhlXG5zeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLlxuV2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZWxlbWVudHMsIHRoZSBsaXN0cyBvZiBub2RlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2hcbnBvZEFmZmluaXR5VGVybSBhcmUgaW50ZXJzZWN0ZWQsIGkuZS4gYWxsIHRlcm1zIG11c3QgYmUgc2F0aXNmaWVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyBhIHNldCBvZiBwb2RzIChuYW1lbHkgdGhvc2UgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3JcbnJlbGF0aXZlIHRvIHRoZSBnaXZlbiBuYW1lc3BhY2UocykpIHRoYXQgdGhpcyBwb2Qgc2hvdWxkIGJlXG5jby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGgsXG53aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2ZcbnRoZSBsYWJlbCB3aXRoIGtleSBcdTAwM2N0b3BvbG9neUtleVx1MDAzZSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2hcbmEgcG9kIG9mIHRoZSBzZXQgb2YgcG9kcyBpcyBydW5uaW5nIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWlzbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifSwicG9kQW50aUFmZmluaXR5Ijp7ImRlc2NyaXB0aW9uIjoiRGVzY3JpYmVzIHBvZCBhbnRpLWFmZmluaXR5IHNjaGVkdWxpbmcgcnVsZXMgKGUuZy4gYXZvaWQgcHV0dGluZyB0aGlzIHBvZCBpbiB0aGUgc2FtZSBub2RlLCB6b25lLCBldGMuIGFzIHNvbWUgb3RoZXIgcG9kKHMpKS4iLCJwcm9wZXJ0aWVzIjp7InByZWZlcnJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHNjaGVkdWxlciB3aWxsIHByZWZlciB0byBzY2hlZHVsZSBwb2RzIHRvIG5vZGVzIHRoYXQgc2F0aXNmeVxudGhlIGFudGktYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlXG5hIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXNcbm1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS5cbmZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZVxucmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFudGktYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgaGFzIHBvZHMgd2hpY2ggbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm07IHRoZVxubm9kZShzKSB3aXRoIHRoZSBoaWdoZXN0IHN1bSBhcmUgdGhlIG1vc3QgcHJlZmVycmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHdlaWdodHMgb2YgYWxsIG9mIHRoZSBtYXRjaGVkIFdlaWdodGVkUG9kQWZmaW5pdHlUZXJtIGZpZWxkcyBhcmUgYWRkZWQgcGVyLW5vZGUgdG8gZmluZCB0aGUgbW9zdCBwcmVmZXJyZWQgbm9kZShzKSIsInByb3BlcnRpZXMiOnsicG9kQWZmaW5pdHlUZXJtIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgcG9kIGFmZmluaXR5IHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWlzbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IndlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtLFxuaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhbnRpLWFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGNlYXNlIHRvIGJlIG1ldFxuYXQgc29tZSBwb2ludCBkdXJpbmcgcG9kIGV4ZWN1dGlvbiAoZS5nLiBkdWUgdG8gYSBwb2QgbGFiZWwgdXBkYXRlKSwgdGhlXG5zeXN0ZW0gbWF5IG9yIG1heSBub3QgdHJ5IHRvIGV2ZW50dWFsbHkgZXZpY3QgdGhlIHBvZCBmcm9tIGl0cyBub2RlLlxuV2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgZWxlbWVudHMsIHRoZSBsaXN0cyBvZiBub2RlcyBjb3JyZXNwb25kaW5nIHRvIGVhY2hcbnBvZEFmZmluaXR5VGVybSBhcmUgaW50ZXJzZWN0ZWQsIGkuZS4gYWxsIHRlcm1zIG11c3QgYmUgc2F0aXNmaWVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiRGVmaW5lcyBhIHNldCBvZiBwb2RzIChuYW1lbHkgdGhvc2UgbWF0Y2hpbmcgdGhlIGxhYmVsU2VsZWN0b3JcbnJlbGF0aXZlIHRvIHRoZSBnaXZlbiBuYW1lc3BhY2UocykpIHRoYXQgdGhpcyBwb2Qgc2hvdWxkIGJlXG5jby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGgsXG53aGVyZSBjby1sb2NhdGVkIGlzIGRlZmluZWQgYXMgcnVubmluZyBvbiBhIG5vZGUgd2hvc2UgdmFsdWUgb2ZcbnRoZSBsYWJlbCB3aXRoIGtleSBcdTAwM2N0b3BvbG9neUtleVx1MDAzZSBtYXRjaGVzIHRoYXQgb2YgYW55IG5vZGUgb24gd2hpY2hcbmEgcG9kIG9mIHRoZSBzZXQgb2YgcG9kcyBpcyBydW5uaW5nIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWlzbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwibm9kZVNlbGVjdG9yIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJgbm9kZVNlbGVjdG9yYCBhbGxvd3Mgc2NoZWR1bGluZyBvZiBwb2RzIG9ubHkgb250byBub2RlcyB0aGF0IGhhdmUgZWFjaCBvZiB0aGUgc3BlY2lmaWVkIGxhYmVscy5cbkZvciBkb2N1bWVudGF0aW9uLCByZWZlciB0byBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL2Fzc2lnbi1wb2Qtbm9kZS8uIiwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJwcmlvcml0eUNsYXNzTmFtZSI6eyJkZXNjcmlwdGlvbiI6IklmIHNwZWNpZmllZCwgaW5kaWNhdGVzIHRoZSBwb2QncyBwcmlvcml0eS4gRm9yIGRvY3VtZW50YXRpb24sIHJlZmVyIHRvIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL3NjaGVkdWxpbmctZXZpY3Rpb24vcG9kLXByaW9yaXR5LXByZWVtcHRpb24vI2hvdy10by11c2UtcHJpb3JpdHktYW5kLXByZWVtcHRpb24uXG5JZiBub3Qgc3BlY2lmaWVkLCBkZWZhdWx0IHByaW9yaXR5IGlzIHVzZWQsIG9yIHplcm8gaWYgdGhlcmUgaXMgbm8gZGVmYXVsdC4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25zIjp7ImRlc2NyaXB0aW9uIjoiYHRvbGVyYXRpb25zYCBpcyBhIGxpc3Qgb2YgdG9sZXJhdGlvbnMgdGhhdCBhbGxvdyB0aGUgcG9kIHRvIHNjaGVkdWxlIG9udG8gbm9kZXMgd2l0aCBtYXRjaGluZyB0YWludHMuXG5Gb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2t1YmVybmV0ZXMtYXBpL3dvcmtsb2FkLXJlc291cmNlcy9wb2QtdjEvI3NjaGVkdWxpbmcuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgcG9kIHRoaXMgVG9sZXJhdGlvbiBpcyBhdHRhY2hlZCB0byB0b2xlcmF0ZXMgYW55IHRhaW50IHRoYXQgbWF0Y2hlc1xudGhlIHRyaXBsZSBcdTAwM2NrZXksdmFsdWUsZWZmZWN0XHUwMDNlIHVzaW5nIHRoZSBtYXRjaGluZyBvcGVyYXRvciBcdTAwM2NvcGVyYXRvclx1MDAzZS4iLCJwcm9wZXJ0aWVzIjp7ImVmZmVjdCI6eyJkZXNjcmlwdGlvbiI6IkVmZmVjdCBpbmRpY2F0ZXMgdGhlIHRhaW50IGVmZmVjdCB0byBtYXRjaC4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGVmZmVjdHMuXG5XaGVuIHNwZWNpZmllZCwgYWxsb3dlZCB2YWx1ZXMgYXJlIE5vU2NoZWR1bGUsIFByZWZlck5vU2NoZWR1bGUgYW5kIE5vRXhlY3V0ZS4iLCJ0eXBlIjoic3RyaW5nIn0sImtleSI6eyJkZXNjcmlwdGlvbiI6IktleSBpcyB0aGUgdGFpbnQga2V5IHRoYXQgdGhlIHRvbGVyYXRpb24gYXBwbGllcyB0by4gRW1wdHkgbWVhbnMgbWF0Y2ggYWxsIHRhaW50IGtleXMuXG5JZiB0aGUga2V5IGlzIGVtcHR5LCBvcGVyYXRvciBtdXN0IGJlIEV4aXN0czsgdGhpcyBjb21iaW5hdGlvbiBtZWFucyB0byBtYXRjaCBhbGwgdmFsdWVzIGFuZCBhbGwga2V5cy4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiT3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgdmFsdWUuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEV4aXN0cyBhbmQgRXF1YWwuIERlZmF1bHRzIHRvIEVxdWFsLlxuRXhpc3RzIGlzIGVxdWl2YWxlbnQgdG8gd2lsZGNhcmQgZm9yIHZhbHVlLCBzbyB0aGF0IGEgcG9kIGNhblxudG9sZXJhdGUgYWxsIHRhaW50cyBvZiBhIHBhcnRpY3VsYXIgY2F0ZWdvcnkuIiwidHlwZSI6InN0cmluZyJ9LCJ0b2xlcmF0aW9uU2Vjb25kcyI6eyJkZXNjcmlwdGlvbiI6IlRvbGVyYXRpb25TZWNvbmRzIHJlcHJlc2VudHMgdGhlIHBlcmlvZCBvZiB0aW1lIHRoZSB0b2xlcmF0aW9uICh3aGljaCBtdXN0IGJlXG5vZiBlZmZlY3QgTm9FeGVjdXRlLCBvdGhlcndpc2UgdGhpcyBmaWVsZCBpcyBpZ25vcmVkKSB0b2xlcmF0ZXMgdGhlIHRhaW50LiBCeSBkZWZhdWx0LFxuaXQgaXMgbm90IHNldCwgd2hpY2ggbWVhbnMgdG9sZXJhdGUgdGhlIHRhaW50IGZvcmV2ZXIgKGRvIG5vdCBldmljdCkuIFplcm8gYW5kXG5uZWdhdGl2ZSB2YWx1ZXMgd2lsbCBiZSB0cmVhdGVkIGFzIDAgKGV2aWN0IGltbWVkaWF0ZWx5KSBieSB0aGUgc3lzdGVtLiIsImZvcm1hdCI6ImludDY0IiwidHlwZSI6ImludGVnZXIifSwidmFsdWUiOnsiZGVzY3JpcHRpb24iOiJWYWx1ZSBpcyB0aGUgdGFpbnQgdmFsdWUgdGhlIHRvbGVyYXRpb24gbWF0Y2hlcyB0by5cbklmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMsIHRoZSB2YWx1ZSBzaG91bGQgYmUgZW1wdHksIG90aGVyd2lzZSBqdXN0IGEgcmVndWxhciBzdHJpbmcuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwiYXV0b3NjYWxlciI6eyJkZXNjcmlwdGlvbiI6ImBhdXRvc2NhbGVyYCBzcGVjIG9mIGEgaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlciB0byBzZXQgdXAgZm9yIHRoZSBwbHVnaW4gRGVwbG95bWVudC4iLCJwcm9wZXJ0aWVzIjp7Im1heFJlcGxpY2FzIjp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiYG1heFJlcGxpY2FzYCBpcyB0aGUgdXBwZXIgbGltaXQgZm9yIHRoZSBudW1iZXIgb2YgcG9kcyB0aGF0IGNhbiBiZSBzZXQgYnkgdGhlIGF1dG9zY2FsZXI7IGNhbm5vdCBiZSBzbWFsbGVyIHRoYW4gTWluUmVwbGljYXMuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJtZXRyaWNzIjp7ImRlc2NyaXB0aW9uIjoiTWV0cmljcyB1c2VkIGJ5IHRoZSBwb2QgYXV0b3NjYWxlci4gRm9yIGRvY3VtZW50YXRpb24sIHJlZmVyIHRvIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL3JlZmVyZW5jZS9rdWJlcm5ldGVzLWFwaS93b3JrbG9hZC1yZXNvdXJjZXMvaG9yaXpvbnRhbC1wb2QtYXV0b3NjYWxlci12Mi8iLCJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImNvbnRhaW5lclJlc291cmNlIjp7InByb3BlcnRpZXMiOnsiY29udGFpbmVyIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInRhcmdldCI6eyJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJjb250YWluZXIiLCJuYW1lIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwiZXh0ZXJuYWwiOnsicHJvcGVydGllcyI6eyJtZXRyaWMiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwic2VsZWN0b3IiOnsicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7Iml0ZW1zIjp7InByb3BlcnRpZXMiOnsia2V5Ijp7InR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidGFyZ2V0Ijp7InByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm1ldHJpYyIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sIm9iamVjdCI6eyJwcm9wZXJ0aWVzIjp7ImRlc2NyaWJlZE9iamVjdCI6eyJwcm9wZXJ0aWVzIjp7ImFwaVZlcnNpb24iOnsidHlwZSI6InN0cmluZyJ9LCJraW5kIjp7InR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJraW5kIiwibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpYyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJrZXkiOnsidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsiZGVzY3JpYmVkT2JqZWN0IiwibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwicG9kcyI6eyJwcm9wZXJ0aWVzIjp7Im1ldHJpYyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJrZXkiOnsidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwicmVzb3VyY2UiOnsicHJvcGVydGllcyI6eyJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7InByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbIm5hbWUiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwibWluUmVwbGljYXMiOnsiZGVzY3JpcHRpb24iOiJgbWluUmVwbGljYXNgIGlzIHRoZSBsb3dlciBsaW1pdCBmb3IgdGhlIG51bWJlciBvZiByZXBsaWNhcyB0byB3aGljaCB0aGUgYXV0b3NjYWxlclxuY2FuIHNjYWxlIGRvd24uIEl0IGRlZmF1bHRzIHRvIDEgcG9kLiBtaW5SZXBsaWNhcyBpcyBhbGxvd2VkIHRvIGJlIDAgaWYgdGhlXG5hbHBoYSBmZWF0dXJlIGdhdGUgSFBBU2NhbGVUb1plcm8gaXMgZW5hYmxlZCBhbmQgYXQgbGVhc3Qgb25lIE9iamVjdCBvciBFeHRlcm5hbFxubWV0cmljIGlzIGNvbmZpZ3VyZWQuIFNjYWxpbmcgaXMgYWN0aXZlIGFzIGxvbmcgYXMgYXQgbGVhc3Qgb25lIG1ldHJpYyB2YWx1ZSBpc1xuYXZhaWxhYmxlLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwic3RhdHVzIjp7ImRlZmF1bHQiOiJEaXNhYmxlZCIsImRlc2NyaXB0aW9uIjoiYHN0YXR1c2AgZGVzY3JpYmVzIHRoZSBkZXNpcmVkIHN0YXR1cyByZWdhcmRpbmcgZGVwbG95aW5nIGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIuXHUwMDNjYnJcdTAwM2Vcbi0gYERpc2FibGVkYCBkb2VzIG5vdCBkZXBsb3kgYW4gaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlci5cdTAwM2Niclx1MDAzZVxuLSBgRW5hYmxlZGAgZGVwbG95cyBhbiBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyLlx1MDAzY2JyXHUwMDNlIiwiZW51bSI6WyJEaXNhYmxlZCIsIkVuYWJsZWQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6dHJ1ZSwiZGVzY3JpcHRpb24iOiJFbmFibGVzIHRoZSBjb25zb2xlIHBsdWdpbiBkZXBsb3ltZW50LiIsInR5cGUiOiJib29sZWFuIn0sImltYWdlUHVsbFBvbGljeSI6eyJkZWZhdWx0IjoiSWZOb3RQcmVzZW50IiwiZGVzY3JpcHRpb24iOiJgaW1hZ2VQdWxsUG9saWN5YCBpcyB0aGUgS3ViZXJuZXRlcyBwdWxsIHBvbGljeSBmb3IgdGhlIGltYWdlIGRlZmluZWQgYWJvdmUiLCJlbnVtIjpbIklmTm90UHJlc2VudCIsIkFsd2F5cyIsIk5ldmVyIl0sInR5cGUiOiJzdHJpbmcifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6ImluZm8iLCJkZXNjcmlwdGlvbiI6ImBsb2dMZXZlbGAgZm9yIHRoZSBjb25zb2xlIHBsdWdpbiBiYWNrZW5kIiwiZW51bSI6WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImZhdGFsIiwicGFuaWMiXSwidHlwZSI6InN0cmluZyJ9LCJwb3J0TmFtaW5nIjp7ImRlZmF1bHQiOnsiZW5hYmxlIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJgcG9ydE5hbWluZ2AgZGVmaW5lcyB0aGUgY29uZmlndXJhdGlvbiBvZiB0aGUgcG9ydC10by1zZXJ2aWNlIG5hbWUgdHJhbnNsYXRpb24iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IkVuYWJsZSB0aGUgY29uc29sZSBwbHVnaW4gcG9ydC10by1zZXJ2aWNlIG5hbWUgdHJhbnNsYXRpb24iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwb3J0TmFtZXMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6ImBwb3J0TmFtZXNgIGRlZmluZXMgYWRkaXRpb25hbCBwb3J0IG5hbWVzIHRvIHVzZSBpbiB0aGUgY29uc29sZSxcbmZvciBleGFtcGxlLCBgcG9ydE5hbWVzOiB7XCIzMTAwXCI6IFwibG9raVwifWAuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJxdWlja0ZpbHRlcnMiOnsiZGVmYXVsdCI6W3siZGVmYXVsdCI6dHJ1ZSwiZmlsdGVyIjp7ImZsb3dfbGF5ZXIiOiJcImFwcFwiIn0sIm5hbWUiOiJBcHBsaWNhdGlvbnMifSx7ImZpbHRlciI6eyJmbG93X2xheWVyIjoiXCJpbmZyYVwiIn0sIm5hbWUiOiJJbmZyYXN0cnVjdHVyZSJ9LHsiZGVmYXVsdCI6dHJ1ZSwiZmlsdGVyIjp7ImRzdF9raW5kIjoiXCJQb2RcIiIsInNyY19raW5kIjoiXCJQb2RcIiJ9LCJuYW1lIjoiUG9kcyBuZXR3b3JrIn0seyJmaWx0ZXIiOnsiZHN0X2tpbmQiOiJcIlNlcnZpY2VcIiJ9LCJuYW1lIjoiU2VydmljZXMgbmV0d29yayJ9XSwiZGVzY3JpcHRpb24iOiJgcXVpY2tGaWx0ZXJzYCBjb25maWd1cmVzIHF1aWNrIGZpbHRlciBwcmVzZXRzIGZvciB0aGUgQ29uc29sZSBwbHVnaW4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6ImBRdWlja0ZpbHRlcmAgZGVmaW5lcyBwcmVzZXQgY29uZmlndXJhdGlvbiBmb3IgQ29uc29sZSdzIHF1aWNrIGZpbHRlcnMiLCJwcm9wZXJ0aWVzIjp7ImRlZmF1bHQiOnsiZGVzY3JpcHRpb24iOiJgZGVmYXVsdGAgZGVmaW5lcyB3aGV0aGVyIHRoaXMgZmlsdGVyIHNob3VsZCBiZSBhY3RpdmUgYnkgZGVmYXVsdCBvciBub3QiLCJ0eXBlIjoiYm9vbGVhbiJ9LCJmaWx0ZXIiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6ImBmaWx0ZXJgIGlzIGEgc2V0IG9mIGtleXMgYW5kIHZhbHVlcyB0byBiZSBzZXQgd2hlbiB0aGlzIGZpbHRlciBpcyBzZWxlY3RlZC4gRWFjaCBrZXkgY2FuIHJlbGF0ZSB0byBhIGxpc3Qgb2YgdmFsdWVzIHVzaW5nIGEgY29tYS1zZXBhcmF0ZWQgc3RyaW5nLFxuZm9yIGV4YW1wbGUsIGBmaWx0ZXI6IHtcInNyY19uYW1lc3BhY2VcIjogXCJuYW1lc3BhY2UxLG5hbWVzcGFjZTJcIn1gLiIsInR5cGUiOiJvYmplY3QifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGZpbHRlciwgdGhhdCBpcyBkaXNwbGF5ZWQgaW4gdGhlIENvbnNvbGUiLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJmaWx0ZXIiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sInJlcGxpY2FzIjp7ImRlZmF1bHQiOjEsImRlc2NyaXB0aW9uIjoiYHJlcGxpY2FzYCBkZWZpbmVzIHRoZSBudW1iZXIgb2YgcmVwbGljYXMgKHBvZHMpIHRvIHN0YXJ0LiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVzb3VyY2VzIjp7ImRlZmF1bHQiOnsibGltaXRzIjp7Im1lbW9yeSI6IjEwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiI1ME1pIn19LCJkZXNjcmlwdGlvbiI6ImByZXNvdXJjZXNgLCBpbiB0ZXJtcyBvZiBjb21wdXRlIHJlc291cmNlcywgcmVxdWlyZWQgYnkgdGhpcyBjb250YWluZXIuXG5Gb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInByb3BlcnRpZXMiOnsiY2xhaW1zIjp7ImRlc2NyaXB0aW9uIjoiQ2xhaW1zIGxpc3RzIHRoZSBuYW1lcyBvZiByZXNvdXJjZXMsIGRlZmluZWQgaW4gc3BlYy5yZXNvdXJjZUNsYWltcyxcbnRoYXQgYXJlIHVzZWQgYnkgdGhpcyBjb250YWluZXIuXG5cblRoaXMgaXMgYW4gYWxwaGEgZmllbGQgYW5kIHJlcXVpcmVzIGVuYWJsaW5nIHRoZVxuRHluYW1pY1Jlc291cmNlQWxsb2NhdGlvbiBmZWF0dXJlIGdhdGUuXG5cblRoaXMgZmllbGQgaXMgaW1tdXRhYmxlLiBJdCBjYW4gb25seSBiZSBzZXQgZm9yIGNvbnRhaW5lcnMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJSZXNvdXJjZUNsYWltIHJlZmVyZW5jZXMgb25lIGVudHJ5IGluIFBvZFNwZWMuUmVzb3VyY2VDbGFpbXMuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBtdXN0IG1hdGNoIHRoZSBuYW1lIG9mIG9uZSBlbnRyeSBpbiBwb2Quc3BlYy5yZXNvdXJjZUNsYWltcyBvZlxudGhlIFBvZCB3aGVyZSB0aGlzIGZpZWxkIGlzIHVzZWQuIEl0IG1ha2VzIHRoYXQgcmVzb3VyY2UgYXZhaWxhYmxlXG5pbnNpZGUgYSBjb250YWluZXIuIiwidHlwZSI6InN0cmluZyJ9LCJyZXF1ZXN0Ijp7ImRlc2NyaXB0aW9uIjoiUmVxdWVzdCBpcyB0aGUgbmFtZSBjaG9zZW4gZm9yIGEgcmVxdWVzdCBpbiB0aGUgcmVmZXJlbmNlZCBjbGFpbS5cbklmIGVtcHR5LCBldmVyeXRoaW5nIGZyb20gdGhlIGNsYWltIGlzIG1hZGUgYXZhaWxhYmxlLCBvdGhlcndpc2Vcbm9ubHkgdGhlIHJlc3VsdCBvZiB0aGlzIHJlcXVlc3QuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LW1hcC1rZXlzIjpbIm5hbWUiXSwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6Im1hcCJ9LCJsaW1pdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiTGltaXRzIGRlc2NyaWJlcyB0aGUgbWF4aW11bSBhbW91bnQgb2YgY29tcHV0ZSByZXNvdXJjZXMgYWxsb3dlZC5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9LCJyZXF1ZXN0cyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwiZGVzY3JpcHRpb24iOiJSZXF1ZXN0cyBkZXNjcmliZXMgdGhlIG1pbmltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkLlxuSWYgUmVxdWVzdHMgaXMgb21pdHRlZCBmb3IgYSBjb250YWluZXIsIGl0IGRlZmF1bHRzIHRvIExpbWl0cyBpZiB0aGF0IGlzIGV4cGxpY2l0bHkgc3BlY2lmaWVkLFxub3RoZXJ3aXNlIHRvIGFuIGltcGxlbWVudGF0aW9uLWRlZmluZWQgdmFsdWUuIFJlcXVlc3RzIGNhbm5vdCBleGNlZWQgTGltaXRzLlxuTW9yZSBpbmZvOiBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sImRlcGxveW1lbnRNb2RlbCI6eyJkZWZhdWx0IjoiRGlyZWN0IiwiZGVzY3JpcHRpb24iOiJgZGVwbG95bWVudE1vZGVsYCBkZWZpbmVzIHRoZSBkZXNpcmVkIHR5cGUgb2YgZGVwbG95bWVudCBmb3IgZmxvdyBwcm9jZXNzaW5nLiBQb3NzaWJsZSB2YWx1ZXMgYXJlOlx1MDAzY2JyXHUwMDNlXG4tIGBEaXJlY3RgIChkZWZhdWx0KSB0byBtYWtlIHRoZSBmbG93IHByb2Nlc3NvciBsaXN0ZW4gZGlyZWN0bHkgZnJvbSB0aGUgYWdlbnRzLlx1MDAzY2JyXHUwMDNlXG4tIGBLYWZrYWAgdG8gbWFrZSBmbG93cyBzZW50IHRvIGEgS2Fma2EgcGlwZWxpbmUgYmVmb3JlIGNvbnN1bXB0aW9uIGJ5IHRoZSBwcm9jZXNzb3IuXHUwMDNjYnJcdTAwM2VcbkthZmthIGNhbiBwcm92aWRlIGJldHRlciBzY2FsYWJpbGl0eSwgcmVzaWxpZW5jeSwgYW5kIGhpZ2ggYXZhaWxhYmlsaXR5IChmb3IgbW9yZSBkZXRhaWxzLCBzZWUgaHR0cHM6Ly93d3cucmVkaGF0LmNvbS9lbi90b3BpY3MvaW50ZWdyYXRpb24vd2hhdC1pcy1hcGFjaGUta2Fma2EpLiIsImVudW0iOlsiRGlyZWN0IiwiS2Fma2EiXSwidHlwZSI6InN0cmluZyJ9LCJleHBvcnRlcnMiOnsiZGVzY3JpcHRpb24iOiJgZXhwb3J0ZXJzYCBkZWZpbmUgYWRkaXRpb25hbCBvcHRpb25hbCBleHBvcnRlcnMgZm9yIGN1c3RvbSBjb25zdW1wdGlvbiBvciBzdG9yYWdlLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiYEZsb3dDb2xsZWN0b3JFeHBvcnRlcmAgZGVmaW5lcyBhbiBhZGRpdGlvbmFsIGV4cG9ydGVyIHRvIHNlbmQgZW5yaWNoZWQgZmxvd3MgdG8uIiwicHJvcGVydGllcyI6eyJpcGZpeCI6eyJkZXNjcmlwdGlvbiI6IklQRklYIGNvbmZpZ3VyYXRpb24sIHN1Y2ggYXMgdGhlIElQIGFkZHJlc3MgYW5kIHBvcnQgdG8gc2VuZCBlbnJpY2hlZCBJUEZJWCBmbG93cyB0by4iLCJwcm9wZXJ0aWVzIjp7InRhcmdldEhvc3QiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiQWRkcmVzcyBvZiB0aGUgSVBGSVggZXh0ZXJuYWwgcmVjZWl2ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInRhcmdldFBvcnQiOnsiZGVzY3JpcHRpb24iOiJQb3J0IGZvciB0aGUgSVBGSVggZXh0ZXJuYWwgcmVjZWl2ZXIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ0cmFuc3BvcnQiOnsiZGVzY3JpcHRpb24iOiJUcmFuc3BvcnQgcHJvdG9jb2wgKGBUQ1BgIG9yIGBVRFBgKSB0byBiZSB1c2VkIGZvciB0aGUgSVBGSVggY29ubmVjdGlvbiwgZGVmYXVsdHMgdG8gYFRDUGAuIiwiZW51bSI6WyJUQ1AiLCJVRFAiXSwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidGFyZ2V0SG9zdCIsInRhcmdldFBvcnQiXSwidHlwZSI6Im9iamVjdCJ9LCJrYWZrYSI6eyJkZXNjcmlwdGlvbiI6IkthZmthIGNvbmZpZ3VyYXRpb24sIHN1Y2ggYXMgdGhlIGFkZHJlc3MgYW5kIHRvcGljLCB0byBzZW5kIGVucmljaGVkIGZsb3dzIHRvLiIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBLYWZrYSBzZXJ2ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInNhc2wiOnsiZGVzY3JpcHRpb24iOiJTQVNMIGF1dGhlbnRpY2F0aW9uIGNvbmZpZ3VyYXRpb24uIFtVbnN1cHBvcnRlZCAoKildLiIsInByb3BlcnRpZXMiOnsiY2xpZW50SURSZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gdGhlIHNlY3JldCBvciBjb25maWcgbWFwIGNvbnRhaW5pbmcgdGhlIGNsaWVudCBJRCIsInByb3BlcnRpZXMiOnsiZmlsZSI6eyJkZXNjcmlwdGlvbiI6IkZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIHRoZSBmaWxlLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBmaWxlIHJlZmVyZW5jZTogXCJjb25maWdtYXBcIiBvciBcInNlY3JldFwiLiIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY2xpZW50U2VjcmV0UmVmZXJlbmNlIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIHRoZSBzZWNyZXQgb3IgY29uZmlnIG1hcCBjb250YWluaW5nIHRoZSBjbGllbnQgc2VjcmV0IiwicHJvcGVydGllcyI6eyJmaWxlIjp7ImRlc2NyaXB0aW9uIjoiRmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyB0aGUgZmlsZS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJEaXNhYmxlZCIsImRlc2NyaXB0aW9uIjoiVHlwZSBvZiBTQVNMIGF1dGhlbnRpY2F0aW9uIHRvIHVzZSwgb3IgYERpc2FibGVkYCBpZiBTQVNMIGlzIG5vdCB1c2VkIiwiZW51bSI6WyJEaXNhYmxlZCIsIlBsYWluIiwiU2NyYW1TSEE1MTIiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0bHMiOnsiZGVzY3JpcHRpb24iOiJUTFMgY2xpZW50IGNvbmZpZ3VyYXRpb24uIFdoZW4gdXNpbmcgVExTLCB2ZXJpZnkgdGhhdCB0aGUgYWRkcmVzcyBtYXRjaGVzIHRoZSBLYWZrYSBwb3J0IHVzZWQgZm9yIFRMUywgZ2VuZXJhbGx5IDkwOTMuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b3BpYyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJLYWZrYSB0b3BpYyB0byB1c2UuIEl0IG11c3QgZXhpc3QuIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBkb2VzIG5vdCBjcmVhdGUgaXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRkcmVzcyIsInRvcGljIl0sInR5cGUiOiJvYmplY3QifSwib3BlblRlbGVtZXRyeSI6eyJkZXNjcmlwdGlvbiI6Ik9wZW4gdGVsZW1ldHJ5IGNvbmZpZ3VyYXRpb24sIHN1Y2ggYXMgdGhlIElQIGFkZHJlc3MgYW5kIHBvcnQgdG8gc2VuZCBlbnJpY2hlZCBsb2dzLCBtZXRyaWNzIGFuZCBvciB0cmFjZXMgdG8uIiwicHJvcGVydGllcyI6eyJmaWVsZHNNYXBwaW5nIjp7ImRlc2NyaXB0aW9uIjoiQ3VzdG9tIGZpZWxkcyBtYXBwaW5nIHRvIGFuIE9wZW5UZWxlbWV0cnkgY29uZm9ybWFudCBmb3JtYXQuXG5CeSBkZWZhdWx0LCBuZXR3b3JrIG9ic2VydmFiaWxpdHkgZm9ybWF0IHByb3Bvc2FsIGlzIHVzZWQ6IGh0dHBzOi8vZ2l0aHViLmNvbS9yaG9icy9vYnNlcnZhYmlsaXR5LWRhdGEtbW9kZWwvYmxvYi9tYWluL25ldHdvcmstb2JzZXJ2YWJpbGl0eS5tZCNmb3JtYXQtcHJvcG9zYWwgLlxuQXMgdGhlcmUgaXMgY3VycmVudGx5IG5vIGFjY2VwdGVkIG90bHAgc3RhbmRhcmQgZm9yIEwzLzQgbmV0d29yayBsb2dzLCB5b3UgY2FuIGZyZWVseSBvdmVycmlkZSBpdCB3aXRoIHlvdXIgb3duLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiaW5wdXQiOnsidHlwZSI6InN0cmluZyJ9LCJtdWx0aXBsaWVyIjp7InR5cGUiOiJpbnRlZ2VyIn0sIm91dHB1dCI6eyJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJoZWFkZXJzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJIZWFkZXJzIHRvIGFkZCB0byBtZXNzYWdlcyAob3B0aW9uYWwpIiwidHlwZSI6Im9iamVjdCJ9LCJsb2dzIjp7ImRlc2NyaXB0aW9uIjoiT3BlbiB0ZWxlbWV0cnkgY29uZmlndXJhdGlvbiBmb3IgbG9ncy4iLCJwcm9wZXJ0aWVzIjp7ImVuYWJsZSI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6IlNldCBgZW5hYmxlYCB0byBgdHJ1ZWAgdG8gc2VuZCBsb2dzIHRvIE9wZW4gVGVsZW1ldHJ5IHJlY2VpdmVyLiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In0sIm1ldHJpY3MiOnsiZGVzY3JpcHRpb24iOiJPcGVuIHRlbGVtZXRyeSBjb25maWd1cmF0aW9uIGZvciBtZXRyaWNzLiIsInByb3BlcnRpZXMiOnsiZW5hYmxlIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiU2V0IGBlbmFibGVgIHRvIGB0cnVlYCB0byBzZW5kIG1ldHJpY3MgdG8gT3BlbiBUZWxlbWV0cnkgcmVjZWl2ZXIuIiwidHlwZSI6ImJvb2xlYW4ifSwicHVzaFRpbWVJbnRlcnZhbCI6eyJkZWZhdWx0IjoiMjBzIiwiZGVzY3JpcHRpb24iOiJIb3cgb2Z0ZW4gc2hvdWxkIG1ldHJpY3MgYmUgc2VudCB0byBjb2xsZWN0b3IiLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInByb3RvY29sIjp7ImRlc2NyaXB0aW9uIjoiUHJvdG9jb2wgb2YgT3BlbiBUZWxlbWV0cnkgY29ubmVjdGlvbi4gVGhlIGF2YWlsYWJsZSBvcHRpb25zIGFyZSBgaHR0cGAgYW5kIGBncnBjYC4iLCJlbnVtIjpbImh0dHAiLCJncnBjIl0sInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0SG9zdCI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBPcGVuIFRlbGVtZXRyeSByZWNlaXZlciIsInR5cGUiOiJzdHJpbmcifSwidGFyZ2V0UG9ydCI6eyJkZXNjcmlwdGlvbiI6IlBvcnQgZm9yIHRoZSBPcGVuIFRlbGVtZXRyeSByZWNlaXZlciIsInR5cGUiOiJpbnRlZ2VyIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjbGllbnQgY29uZmlndXJhdGlvbi4iLCJwcm9wZXJ0aWVzIjp7ImNhQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImBjYUNlcnRgIGRlZmluZXMgdGhlIHJlZmVyZW5jZSBvZiB0aGUgY2VydGlmaWNhdGUgZm9yIHRoZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiYGNlcnRGaWxlYCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4iLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YC4iLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImVuYWJsZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJFbmFibGUgVExTIiwidHlwZSI6ImJvb2xlYW4ifSwiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBpbnNlY3VyZVNraXBWZXJpZnlgIGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHNlcnZlciBjZXJ0aWZpY2F0ZS5cbklmIHNldCB0byBgdHJ1ZWAsIHRoZSBgY2FDZXJ0YCBmaWVsZCBpcyBpZ25vcmVkLiIsInR5cGUiOiJib29sZWFuIn0sInVzZXJDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiYHVzZXJDZXJ0YCBkZWZpbmVzIHRoZSB1c2VyIGNlcnRpZmljYXRlIHJlZmVyZW5jZSBhbmQgaXMgdXNlZCBmb3IgbVRMUyAoeW91IGNhbiBpZ25vcmUgaXQgd2hlbiB1c2luZyBvbmUtd2F5IFRMUykiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiYGNlcnRGaWxlYCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4iLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YC4iLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJ0YXJnZXRIb3N0IiwidGFyZ2V0UG9ydCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJgdHlwZWAgc2VsZWN0cyB0aGUgdHlwZSBvZiBleHBvcnRlcnMuIFRoZSBhdmFpbGFibGUgb3B0aW9ucyBhcmUgYEthZmthYCBhbmQgYElQRklYYC4iLCJlbnVtIjpbIkthZmthIiwiSVBGSVgiLCJPcGVuVGVsZW1ldHJ5Il0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkifSwia2Fma2EiOnsiZGVzY3JpcHRpb24iOiJLYWZrYSBjb25maWd1cmF0aW9uLCBhbGxvd2luZyB0byB1c2UgS2Fma2EgYXMgYSBicm9rZXIgYXMgcGFydCBvZiB0aGUgZmxvdyBjb2xsZWN0aW9uIHBpcGVsaW5lLiBBdmFpbGFibGUgd2hlbiB0aGUgYHNwZWMuZGVwbG95bWVudE1vZGVsYCBpcyBgS2Fma2FgLiIsInByb3BlcnRpZXMiOnsiYWRkcmVzcyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJBZGRyZXNzIG9mIHRoZSBLYWZrYSBzZXJ2ZXIiLCJ0eXBlIjoic3RyaW5nIn0sInNhc2wiOnsiZGVzY3JpcHRpb24iOiJTQVNMIGF1dGhlbnRpY2F0aW9uIGNvbmZpZ3VyYXRpb24uIFtVbnN1cHBvcnRlZCAoKildLiIsInByb3BlcnRpZXMiOnsiY2xpZW50SURSZWZlcmVuY2UiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gdGhlIHNlY3JldCBvciBjb25maWcgbWFwIGNvbnRhaW5pbmcgdGhlIGNsaWVudCBJRCIsInByb3BlcnRpZXMiOnsiZmlsZSI6eyJkZXNjcmlwdGlvbiI6IkZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIHRoZSBmaWxlLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBmaWxlIHJlZmVyZW5jZTogXCJjb25maWdtYXBcIiBvciBcInNlY3JldFwiLiIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiY2xpZW50U2VjcmV0UmVmZXJlbmNlIjp7ImRlc2NyaXB0aW9uIjoiUmVmZXJlbmNlIHRvIHRoZSBzZWNyZXQgb3IgY29uZmlnIG1hcCBjb250YWluaW5nIHRoZSBjbGllbnQgc2VjcmV0IiwicHJvcGVydGllcyI6eyJmaWxlIjp7ImRlc2NyaXB0aW9uIjoiRmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyB0aGUgZmlsZS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJEaXNhYmxlZCIsImRlc2NyaXB0aW9uIjoiVHlwZSBvZiBTQVNMIGF1dGhlbnRpY2F0aW9uIHRvIHVzZSwgb3IgYERpc2FibGVkYCBpZiBTQVNMIGlzIG5vdCB1c2VkIiwiZW51bSI6WyJEaXNhYmxlZCIsIlBsYWluIiwiU2NyYW1TSEE1MTIiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0bHMiOnsiZGVzY3JpcHRpb24iOiJUTFMgY2xpZW50IGNvbmZpZ3VyYXRpb24uIFdoZW4gdXNpbmcgVExTLCB2ZXJpZnkgdGhhdCB0aGUgYWRkcmVzcyBtYXRjaGVzIHRoZSBLYWZrYSBwb3J0IHVzZWQgZm9yIFRMUywgZ2VuZXJhbGx5IDkwOTMuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0b3BpYyI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJLYWZrYSB0b3BpYyB0byB1c2UuIEl0IG11c3QgZXhpc3QuIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBkb2VzIG5vdCBjcmVhdGUgaXQuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiYWRkcmVzcyIsInRvcGljIl0sInR5cGUiOiJvYmplY3QifSwibG9raSI6eyJkZXNjcmlwdGlvbiI6ImBsb2tpYCwgdGhlIGZsb3cgc3RvcmUsIGNsaWVudCBzZXR0aW5ncy4iLCJwcm9wZXJ0aWVzIjp7ImFkdmFuY2VkIjp7ImRlc2NyaXB0aW9uIjoiYGFkdmFuY2VkYCBhbGxvd3Mgc2V0dGluZyBzb21lIGFzcGVjdHMgb2YgdGhlIGludGVybmFsIGNvbmZpZ3VyYXRpb24gb2YgdGhlIExva2kgY2xpZW50cy5cblRoaXMgc2VjdGlvbiBpcyBhaW1lZCBtb3N0bHkgZm9yIGRlYnVnZ2luZyBhbmQgZmluZS1ncmFpbmVkIHBlcmZvcm1hbmNlIG9wdGltaXphdGlvbnMuIiwicHJvcGVydGllcyI6eyJzdGF0aWNMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZWZhdWx0Ijp7ImFwcCI6Im5ldG9ic2Vydi1mbG93Y29sbGVjdG9yIn0sImRlc2NyaXB0aW9uIjoiYHN0YXRpY0xhYmVsc2AgaXMgYSBtYXAgb2YgY29tbW9uIGxhYmVscyB0byBzZXQgb24gZWFjaCBmbG93IGluIExva2kgc3RvcmFnZS4iLCJ0eXBlIjoib2JqZWN0In0sIndyaXRlTWF4QmFja29mZiI6eyJkZWZhdWx0IjoiNXMiLCJkZXNjcmlwdGlvbiI6ImB3cml0ZU1heEJhY2tvZmZgIGlzIHRoZSBtYXhpbXVtIGJhY2tvZmYgdGltZSBmb3IgTG9raSBjbGllbnQgY29ubmVjdGlvbiBiZXR3ZWVuIHJldHJpZXMuIiwidHlwZSI6InN0cmluZyJ9LCJ3cml0ZU1heFJldHJpZXMiOnsiZGVmYXVsdCI6MiwiZGVzY3JpcHRpb24iOiJgd3JpdGVNYXhSZXRyaWVzYCBpcyB0aGUgbWF4aW11bSBudW1iZXIgb2YgcmV0cmllcyBmb3IgTG9raSBjbGllbnQgY29ubmVjdGlvbnMuIiwiZm9ybWF0IjoiaW50MzIiLCJtaW5pbXVtIjowLCJ0eXBlIjoiaW50ZWdlciJ9LCJ3cml0ZU1pbkJhY2tvZmYiOnsiZGVmYXVsdCI6IjFzIiwiZGVzY3JpcHRpb24iOiJgd3JpdGVNaW5CYWNrb2ZmYCBpcyB0aGUgaW5pdGlhbCBiYWNrb2ZmIHRpbWUgZm9yIExva2kgY2xpZW50IGNvbm5lY3Rpb24gYmV0d2VlbiByZXRyaWVzLiIsInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwiZW5hYmxlIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiU2V0IGBlbmFibGVgIHRvIGB0cnVlYCB0byBzdG9yZSBmbG93cyBpbiBMb2tpLlxuVGhlIENvbnNvbGUgcGx1Z2luIGNhbiB1c2UgZWl0aGVyIExva2kgb3IgUHJvbWV0aGV1cyBhcyBhIGRhdGEgc291cmNlIGZvciBtZXRyaWNzIChzZWUgYWxzbyBgc3BlYy5wcm9tZXRoZXVzLnF1ZXJpZXJgKSwgb3IgYm90aC5cbk5vdCBhbGwgcXVlcmllcyBhcmUgdHJhbnNwb3NhYmxlIGZyb20gTG9raSB0byBQcm9tZXRoZXVzLiBIZW5jZSwgaWYgTG9raSBpcyBkaXNhYmxlZCwgc29tZSBmZWF0dXJlcyBvZiB0aGUgcGx1Z2luIGFyZSBkaXNhYmxlZCBhcyB3ZWxsLFxuc3VjaCBhcyBnZXR0aW5nIHBlci1wb2QgaW5mb3JtYXRpb24gb3Igdmlld2luZyByYXcgZmxvd3MuXG5JZiBib3RoIFByb21ldGhldXMgYW5kIExva2kgYXJlIGVuYWJsZWQsIFByb21ldGhldXMgdGFrZXMgcHJlY2VkZW5jZSBhbmQgTG9raSBpcyB1c2VkIGFzIGEgZmFsbGJhY2sgZm9yIHF1ZXJpZXMgdGhhdCBQcm9tZXRoZXVzIGNhbm5vdCBoYW5kbGUuXG5JZiB0aGV5IGFyZSBib3RoIGRpc2FibGVkLCB0aGUgQ29uc29sZSBwbHVnaW4gaXMgbm90IGRlcGxveWVkLiIsInR5cGUiOiJib29sZWFuIn0sImxva2lTdGFjayI6eyJkZXNjcmlwdGlvbiI6Ikxva2kgY29uZmlndXJhdGlvbiBmb3IgYExva2lTdGFja2AgbW9kZS4gVGhpcyBpcyB1c2VmdWwgZm9yIGFuIGVhc3kgTG9raSBPcGVyYXRvciBjb25maWd1cmF0aW9uLlxuSXQgaXMgaWdub3JlZCBmb3Igb3RoZXIgbW9kZXMuIiwicHJvcGVydGllcyI6eyJuYW1lIjp7ImRlZmF1bHQiOiJsb2tpIiwiZGVzY3JpcHRpb24iOiJOYW1lIG9mIGFuIGV4aXN0aW5nIExva2lTdGFjayByZXNvdXJjZSB0byB1c2UuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugd2hlcmUgdGhpcyBgTG9raVN0YWNrYCByZXNvdXJjZSBpcyBsb2NhdGVkLiBJZiBvbWl0dGVkLCBpdCBpcyBhc3N1bWVkIHRvIGJlIHRoZSBzYW1lIGFzIGBzcGVjLm5hbWVzcGFjZWAuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sIm1hbnVhbCI6eyJkZXNjcmlwdGlvbiI6Ikxva2kgY29uZmlndXJhdGlvbiBmb3IgYE1hbnVhbGAgbW9kZS4gVGhpcyBpcyB0aGUgbW9zdCBmbGV4aWJsZSBjb25maWd1cmF0aW9uLlxuSXQgaXMgaWdub3JlZCBmb3Igb3RoZXIgbW9kZXMuIiwicHJvcGVydGllcyI6eyJhdXRoVG9rZW4iOnsiZGVmYXVsdCI6IkRpc2FibGVkIiwiZGVzY3JpcHRpb24iOiJgYXV0aFRva2VuYCBkZXNjcmliZXMgdGhlIHdheSB0byBnZXQgYSB0b2tlbiB0byBhdXRoZW50aWNhdGUgdG8gTG9raS5cdTAwM2Niclx1MDAzZVxuLSBgRGlzYWJsZWRgIGRvZXMgbm90IHNlbmQgYW55IHRva2VuIHdpdGggdGhlIHJlcXVlc3QuXHUwMDNjYnJcdTAwM2Vcbi0gYEZvcndhcmRgIGZvcndhcmRzIHRoZSB1c2VyIHRva2VuIGZvciBhdXRob3JpemF0aW9uLlx1MDAzY2JyXHUwMDNlXG4tIGBIb3N0YCBbZGVwcmVjYXRlZCAoKildIC0gdXNlcyB0aGUgbG9jYWwgcG9kIHNlcnZpY2UgYWNjb3VudCB0byBhdXRoZW50aWNhdGUgdG8gTG9raS5cdTAwM2Niclx1MDAzZVxuV2hlbiB1c2luZyB0aGUgTG9raSBPcGVyYXRvciwgdGhpcyBtdXN0IGJlIHNldCB0byBgRm9yd2FyZGAuIiwiZW51bSI6WyJEaXNhYmxlZCIsIkhvc3QiLCJGb3J3YXJkIl0sInR5cGUiOiJzdHJpbmcifSwiaW5nZXN0ZXJVcmwiOnsiZGVmYXVsdCI6Imh0dHA6Ly9sb2tpOjMxMDAvIiwiZGVzY3JpcHRpb24iOiJgaW5nZXN0ZXJVcmxgIGlzIHRoZSBhZGRyZXNzIG9mIGFuIGV4aXN0aW5nIExva2kgaW5nZXN0ZXIgc2VydmljZSB0byBwdXNoIHRoZSBmbG93cyB0by4gV2hlbiB1c2luZyB0aGUgTG9raSBPcGVyYXRvcixcbnNldCBpdCB0byB0aGUgTG9raSBnYXRld2F5IHNlcnZpY2Ugd2l0aCB0aGUgYG5ldHdvcmtgIHRlbmFudCBzZXQgaW4gcGF0aCwgZm9yIGV4YW1wbGVcbmh0dHBzOi8vbG9raS1nYXRld2F5LWh0dHAubmV0b2JzZXJ2LnN2Yzo4MDgwL2FwaS9sb2dzL3YxL25ldHdvcmsuIiwidHlwZSI6InN0cmluZyJ9LCJxdWVyaWVyVXJsIjp7ImRlZmF1bHQiOiJodHRwOi8vbG9raTozMTAwLyIsImRlc2NyaXB0aW9uIjoiYHF1ZXJpZXJVcmxgIHNwZWNpZmllcyB0aGUgYWRkcmVzcyBvZiB0aGUgTG9raSBxdWVyaWVyIHNlcnZpY2UuXG5XaGVuIHVzaW5nIHRoZSBMb2tpIE9wZXJhdG9yLCBzZXQgaXQgdG8gdGhlIExva2kgZ2F0ZXdheSBzZXJ2aWNlIHdpdGggdGhlIGBuZXR3b3JrYCB0ZW5hbnQgc2V0IGluIHBhdGgsIGZvciBleGFtcGxlXG5odHRwczovL2xva2ktZ2F0ZXdheS1odHRwLm5ldG9ic2Vydi5zdmM6ODA4MC9hcGkvbG9ncy92MS9uZXR3b3JrLiIsInR5cGUiOiJzdHJpbmcifSwic3RhdHVzVGxzIjp7ImRlc2NyaXB0aW9uIjoiVExTIGNsaWVudCBjb25maWd1cmF0aW9uIGZvciBMb2tpIHN0YXR1cyBVUkwuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdGF0dXNVcmwiOnsiZGVzY3JpcHRpb24iOiJgc3RhdHVzVXJsYCBzcGVjaWZpZXMgdGhlIGFkZHJlc3Mgb2YgdGhlIExva2kgYC9yZWFkeWAsIGAvbWV0cmljc2AgYW5kIGAvY29uZmlnYCBlbmRwb2ludHMsIGluIGNhc2UgaXQgaXMgZGlmZmVyZW50IGZyb20gdGhlXG5Mb2tpIHF1ZXJpZXIgVVJMLiBJZiBlbXB0eSwgdGhlIGBxdWVyaWVyVXJsYCB2YWx1ZSBpcyB1c2VkLlxuVGhpcyBpcyB1c2VmdWwgdG8gc2hvdyBlcnJvciBtZXNzYWdlcyBhbmQgc29tZSBjb250ZXh0IGluIHRoZSBmcm9udGVuZC5cbldoZW4gdXNpbmcgdGhlIExva2kgT3BlcmF0b3IsIHNldCBpdCB0byB0aGUgTG9raSBIVFRQIHF1ZXJ5IGZyb250ZW5kIHNlcnZpY2UsIGZvciBleGFtcGxlXG5odHRwczovL2xva2ktcXVlcnktZnJvbnRlbmQtaHR0cC5uZXRvYnNlcnYuc3ZjOjMxMDAvLlxuYHN0YXR1c1RMU2AgY29uZmlndXJhdGlvbiBpcyB1c2VkIHdoZW4gYHN0YXR1c1VybGAgaXMgc2V0LiIsInR5cGUiOiJzdHJpbmcifSwidGVuYW50SUQiOnsiZGVmYXVsdCI6Im5ldG9ic2VydiIsImRlc2NyaXB0aW9uIjoiYHRlbmFudElEYCBpcyB0aGUgTG9raSBgWC1TY29wZS1PcmdJRGAgdGhhdCBpZGVudGlmaWVzIHRoZSB0ZW5hbnQgZm9yIGVhY2ggcmVxdWVzdC5cbldoZW4gdXNpbmcgdGhlIExva2kgT3BlcmF0b3IsIHNldCBpdCB0byBgbmV0d29ya2AsIHdoaWNoIGNvcnJlc3BvbmRzIHRvIGEgc3BlY2lhbCB0ZW5hbnQgbW9kZS4iLCJ0eXBlIjoic3RyaW5nIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjbGllbnQgY29uZmlndXJhdGlvbiBmb3IgTG9raSBVUkwuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtaWNyb3NlcnZpY2VzIjp7ImRlc2NyaXB0aW9uIjoiTG9raSBjb25maWd1cmF0aW9uIGZvciBgTWljcm9zZXJ2aWNlc2AgbW9kZS5cblVzZSB0aGlzIG9wdGlvbiB3aGVuIExva2kgaXMgaW5zdGFsbGVkIHVzaW5nIHRoZSBtaWNyb3NlcnZpY2VzIGRlcGxveW1lbnQgbW9kZSAoaHR0cHM6Ly9ncmFmYW5hLmNvbS9kb2NzL2xva2kvbGF0ZXN0L2Z1bmRhbWVudGFscy9hcmNoaXRlY3R1cmUvZGVwbG95bWVudC1tb2Rlcy8jbWljcm9zZXJ2aWNlcy1tb2RlKS5cbkl0IGlzIGlnbm9yZWQgZm9yIG90aGVyIG1vZGVzLiIsInByb3BlcnRpZXMiOnsiaW5nZXN0ZXJVcmwiOnsiZGVmYXVsdCI6Imh0dHA6Ly9sb2tpLWRpc3RyaWJ1dG9yOjMxMDAvIiwiZGVzY3JpcHRpb24iOiJgaW5nZXN0ZXJVcmxgIGlzIHRoZSBhZGRyZXNzIG9mIGFuIGV4aXN0aW5nIExva2kgaW5nZXN0ZXIgc2VydmljZSB0byBwdXNoIHRoZSBmbG93cyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sInF1ZXJpZXJVcmwiOnsiZGVmYXVsdCI6Imh0dHA6Ly9sb2tpLXF1ZXJ5LWZyb250ZW5kOjMxMDAvIiwiZGVzY3JpcHRpb24iOiJgcXVlcmllclVSTGAgc3BlY2lmaWVzIHRoZSBhZGRyZXNzIG9mIHRoZSBMb2tpIHF1ZXJpZXIgc2VydmljZS4iLCJ0eXBlIjoic3RyaW5nIn0sInRlbmFudElEIjp7ImRlZmF1bHQiOiJuZXRvYnNlcnYiLCJkZXNjcmlwdGlvbiI6ImB0ZW5hbnRJRGAgaXMgdGhlIExva2kgYFgtU2NvcGUtT3JnSURgIGhlYWRlciB0aGF0IGlkZW50aWZpZXMgdGhlIHRlbmFudCBmb3IgZWFjaCByZXF1ZXN0LiIsInR5cGUiOiJzdHJpbmcifSwidGxzIjp7ImRlc2NyaXB0aW9uIjoiVExTIGNsaWVudCBjb25maWd1cmF0aW9uIGZvciBMb2tpIFVSTC4iLCJwcm9wZXJ0aWVzIjp7ImNhQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImBjYUNlcnRgIGRlZmluZXMgdGhlIHJlZmVyZW5jZSBvZiB0aGUgY2VydGlmaWNhdGUgZm9yIHRoZSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiYGNlcnRGaWxlYCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4iLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YC4iLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImVuYWJsZSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJFbmFibGUgVExTIiwidHlwZSI6ImJvb2xlYW4ifSwiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBpbnNlY3VyZVNraXBWZXJpZnlgIGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHNlcnZlciBjZXJ0aWZpY2F0ZS5cbklmIHNldCB0byBgdHJ1ZWAsIHRoZSBgY2FDZXJ0YCBmaWVsZCBpcyBpZ25vcmVkLiIsInR5cGUiOiJib29sZWFuIn0sInVzZXJDZXJ0Ijp7ImRlc2NyaXB0aW9uIjoiYHVzZXJDZXJ0YCBkZWZpbmVzIHRoZSB1c2VyIGNlcnRpZmljYXRlIHJlZmVyZW5jZSBhbmQgaXMgdXNlZCBmb3IgbVRMUyAoeW91IGNhbiBpZ25vcmUgaXQgd2hlbiB1c2luZyBvbmUtd2F5IFRMUykiLCJwcm9wZXJ0aWVzIjp7ImNlcnRGaWxlIjp7ImRlc2NyaXB0aW9uIjoiYGNlcnRGaWxlYCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4iLCJ0eXBlIjoic3RyaW5nIn0sImNlcnRLZXkiOnsiZGVzY3JpcHRpb24iOiJgY2VydEtleWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgcHJpdmF0ZSBrZXkgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIE9taXQgd2hlbiB0aGUga2V5IGlzIG5vdCBuZWNlc3NhcnkuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lc3BhY2UiOnsiZGVmYXVsdCI6IiIsImRlc2NyaXB0aW9uIjoiTmFtZXNwYWNlIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4gSWYgb21pdHRlZCwgdGhlIGRlZmF1bHQgaXMgdG8gdXNlIHRoZSBzYW1lIG5hbWVzcGFjZSBhcyB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgaXMgZGVwbG95ZWQuXG5JZiB0aGUgbmFtZXNwYWNlIGlzIGRpZmZlcmVudCwgdGhlIGNvbmZpZyBtYXAgb3IgdGhlIHNlY3JldCBpcyBjb3BpZWQgc28gdGhhdCBpdCBjYW4gYmUgbW91bnRlZCBhcyByZXF1aXJlZC4iLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOnsiZGVzY3JpcHRpb24iOiJUeXBlIGZvciB0aGUgY2VydGlmaWNhdGUgcmVmZXJlbmNlOiBgY29uZmlnbWFwYCBvciBgc2VjcmV0YC4iLCJlbnVtIjpbImNvbmZpZ21hcCIsInNlY3JldCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sIm1vZGUiOnsiZGVmYXVsdCI6Ik1vbm9saXRoaWMiLCJkZXNjcmlwdGlvbiI6ImBtb2RlYCBtdXN0IGJlIHNldCBhY2NvcmRpbmcgdG8gdGhlIGluc3RhbGxhdGlvbiBtb2RlIG9mIExva2k6XHUwMDNjYnJcdTAwM2Vcbi0gVXNlIGBMb2tpU3RhY2tgIHdoZW4gTG9raSBpcyBtYW5hZ2VkIHVzaW5nIHRoZSBMb2tpIE9wZXJhdG9yXHUwMDNjYnJcdTAwM2Vcbi0gVXNlIGBNb25vbGl0aGljYCB3aGVuIExva2kgaXMgaW5zdGFsbGVkIGFzIGEgbW9ub2xpdGhpYyB3b3JrbG9hZFx1MDAzY2JyXHUwMDNlXG4tIFVzZSBgTWljcm9zZXJ2aWNlc2Agd2hlbiBMb2tpIGlzIGluc3RhbGxlZCBhcyBtaWNyb3NlcnZpY2VzLCBidXQgd2l0aG91dCBMb2tpIE9wZXJhdG9yXHUwMDNjYnJcdTAwM2Vcbi0gVXNlIGBNYW51YWxgIGlmIG5vbmUgb2YgdGhlIG9wdGlvbnMgYWJvdmUgbWF0Y2ggeW91ciBzZXR1cFx1MDAzY2JyXHUwMDNlIiwiZW51bSI6WyJNYW51YWwiLCJMb2tpU3RhY2siLCJNb25vbGl0aGljIiwiTWljcm9zZXJ2aWNlcyJdLCJ0eXBlIjoic3RyaW5nIn0sIm1vbm9saXRoaWMiOnsiZGVzY3JpcHRpb24iOiJMb2tpIGNvbmZpZ3VyYXRpb24gZm9yIGBNb25vbGl0aGljYCBtb2RlLlxuVXNlIHRoaXMgb3B0aW9uIHdoZW4gTG9raSBpcyBpbnN0YWxsZWQgdXNpbmcgdGhlIG1vbm9saXRoaWMgZGVwbG95bWVudCBtb2RlIChodHRwczovL2dyYWZhbmEuY29tL2RvY3MvbG9raS9sYXRlc3QvZnVuZGFtZW50YWxzL2FyY2hpdGVjdHVyZS9kZXBsb3ltZW50LW1vZGVzLyNtb25vbGl0aGljLW1vZGUpLlxuSXQgaXMgaWdub3JlZCBmb3Igb3RoZXIgbW9kZXMuIiwicHJvcGVydGllcyI6eyJ0ZW5hbnRJRCI6eyJkZWZhdWx0IjoibmV0b2JzZXJ2IiwiZGVzY3JpcHRpb24iOiJgdGVuYW50SURgIGlzIHRoZSBMb2tpIGBYLVNjb3BlLU9yZ0lEYCBoZWFkZXIgdGhhdCBpZGVudGlmaWVzIHRoZSB0ZW5hbnQgZm9yIGVhY2ggcmVxdWVzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjbGllbnQgY29uZmlndXJhdGlvbiBmb3IgTG9raSBVUkwuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1cmwiOnsiZGVmYXVsdCI6Imh0dHA6Ly9sb2tpOjMxMDAvIiwiZGVzY3JpcHRpb24iOiJgdXJsYCBpcyB0aGUgdW5pcXVlIGFkZHJlc3Mgb2YgYW4gZXhpc3RpbmcgTG9raSBzZXJ2aWNlIHRoYXQgcG9pbnRzIHRvIGJvdGggdGhlIGluZ2VzdGVyIGFuZCB0aGUgcXVlcmllci4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInJlYWRUaW1lb3V0Ijp7ImRlZmF1bHQiOiIzMHMiLCJkZXNjcmlwdGlvbiI6ImByZWFkVGltZW91dGAgaXMgdGhlIG1heGltdW0gY29uc29sZSBwbHVnaW4gbG9raSBxdWVyeSB0b3RhbCB0aW1lIGxpbWl0LlxuQSB0aW1lb3V0IG9mIHplcm8gbWVhbnMgbm8gdGltZW91dC4iLCJ0eXBlIjoic3RyaW5nIn0sIndyaXRlQmF0Y2hTaXplIjp7ImRlZmF1bHQiOjEwNDg1NzYwLCJkZXNjcmlwdGlvbiI6ImB3cml0ZUJhdGNoU2l6ZWAgaXMgdGhlIG1heGltdW0gYmF0Y2ggc2l6ZSAoaW4gYnl0ZXMpIG9mIExva2kgbG9ncyB0byBhY2N1bXVsYXRlIGJlZm9yZSBzZW5kaW5nLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwid3JpdGVCYXRjaFdhaXQiOnsiZGVmYXVsdCI6IjFzIiwiZGVzY3JpcHRpb24iOiJgd3JpdGVCYXRjaFdhaXRgIGlzIHRoZSBtYXhpbXVtIHRpbWUgdG8gd2FpdCBiZWZvcmUgc2VuZGluZyBhIExva2kgYmF0Y2guIiwidHlwZSI6InN0cmluZyJ9LCJ3cml0ZVRpbWVvdXQiOnsiZGVmYXVsdCI6IjEwcyIsImRlc2NyaXB0aW9uIjoiYHdyaXRlVGltZW91dGAgaXMgdGhlIG1heGltdW0gTG9raSB0aW1lIGNvbm5lY3Rpb24gLyByZXF1ZXN0IGxpbWl0LlxuQSB0aW1lb3V0IG9mIHplcm8gbWVhbnMgbm8gdGltZW91dC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJtb2RlIl0sInR5cGUiOiJvYmplY3QifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiJuZXRvYnNlcnYiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSB3aGVyZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgcG9kcyBhcmUgZGVwbG95ZWQuIiwidHlwZSI6InN0cmluZyJ9LCJuZXR3b3JrUG9saWN5Ijp7ImRlc2NyaXB0aW9uIjoiYG5ldHdvcmtQb2xpY3lgIGRlZmluZXMgaW5ncmVzcyBuZXR3b3JrIHBvbGljeSBzZXR0aW5ncyBmb3IgbmV0d29yayBvYnNlcnZhYmlsaXR5IGNvbXBvbmVudHMgaXNvbGF0aW9uLiIsInByb3BlcnRpZXMiOnsiYWRkaXRpb25hbE5hbWVzcGFjZXMiOnsiZGVmYXVsdCI6WyJvcGVuc2hpZnQtY29uc29sZSIsIm9wZW5zaGlmdC1tb25pdG9yaW5nIl0sImRlc2NyaXB0aW9uIjoiYGFkZGl0aW9uYWxOYW1lc3BhY2VzYCBjb250YWlucyBhZGRpdGlvbmFsIG5hbWVzcGFjZXMgYWxsb3dlZCB0byBjb25uZWN0IHRvIHRoZSBuZXR3b3JrIG9ic2VydmFiaWxpdHkgbmFtZXNwYWNlLlxuSXQgZ2l2ZXMgc29tZSBmbGV4aWJpbGl0eSBpbiB0aGUgbmV0d29yayBwb2xpY3kgY29uZmlndXJhdGlvbiwgaG93ZXZlciBzaG91bGQgeW91IG5lZWQgYSBtb3JlIHNwZWNpZmljXG5jb25maWd1cmF0aW9uLCB5b3UgY2FuIGRpc2FibGUgaXQgYW5kIGluc3RhbGwgeW91ciBvd24gaW5zdGVhZC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJlbmFibGUiOnsiZGVzY3JpcHRpb24iOiJTZXQgYGVuYWJsZWAgdG8gYHRydWVgIHRvIGRlcGxveSBuZXR3b3JrIHBvbGljaWVzIG9uIHRoZSBuYW1lc3BhY2VzIHVzZWQgYnkgbmV0d29yayBvYnNlcnZhYmlsaXR5IChtYWluIGFuZCBwcml2aWxlZ2VkKS4gSXQgaXMgZGlzYWJsZWQgYnkgZGVmYXVsdC5cblRoZXNlIG5ldHdvcmsgcG9saWNpZXMgYmV0dGVyIGlzb2xhdGUgdGhlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBjb21wb25lbnRzIHRvIHByZXZlbnQgdW5kZXNpcmVkIGNvbm5lY3Rpb25zIHRvIHRoZW0uXG5XZSByZWNvbW1lbmQgeW91IGVpdGhlciBlbmFibGUgaXQsIG9yIGNyZWF0ZSB5b3VyIG93biBuZXR3b3JrIHBvbGljeSBmb3IgbmV0d29yayBvYnNlcnZhYmlsaXR5LiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In0sInByb2Nlc3NvciI6eyJkZXNjcmlwdGlvbiI6ImBwcm9jZXNzb3JgIGRlZmluZXMgdGhlIHNldHRpbmdzIG9mIHRoZSBjb21wb25lbnQgdGhhdCByZWNlaXZlcyB0aGUgZmxvd3MgZnJvbSB0aGUgYWdlbnQsXG5lbnJpY2hlcyB0aGVtLCBnZW5lcmF0ZXMgbWV0cmljcywgYW5kIGZvcndhcmRzIHRoZW0gdG8gdGhlIExva2kgcGVyc2lzdGVuY2UgbGF5ZXIgYW5kL29yIGFueSBhdmFpbGFibGUgZXhwb3J0ZXIuIiwicHJvcGVydGllcyI6eyJhZGRab25lIjp7ImRlc2NyaXB0aW9uIjoiYGFkZFpvbmVgIGFsbG93cyBhdmFpbGFiaWxpdHkgem9uZSBhd2FyZW5lc3MgYnkgbGFiZWxsaW5nIGZsb3dzIHdpdGggdGhlaXIgc291cmNlIGFuZCBkZXN0aW5hdGlvbiB6b25lcy5cblRoaXMgZmVhdHVyZSByZXF1aXJlcyB0aGUgXCJ0b3BvbG9neS5rdWJlcm5ldGVzLmlvL3pvbmVcIiBsYWJlbCB0byBiZSBzZXQgb24gbm9kZXMuIiwidHlwZSI6ImJvb2xlYW4ifSwiYWR2YW5jZWQiOnsiZGVzY3JpcHRpb24iOiJgYWR2YW5jZWRgIGFsbG93cyBzZXR0aW5nIHNvbWUgYXNwZWN0cyBvZiB0aGUgaW50ZXJuYWwgY29uZmlndXJhdGlvbiBvZiB0aGUgZmxvdyBwcm9jZXNzb3IuXG5UaGlzIHNlY3Rpb24gaXMgYWltZWQgbW9zdGx5IGZvciBkZWJ1Z2dpbmcgYW5kIGZpbmUtZ3JhaW5lZCBwZXJmb3JtYW5jZSBvcHRpbWl6YXRpb25zLFxuc3VjaCBhcyBgR09HQ2AgYW5kIGBHT01BWFBST0NTYCBlbnYgdmFycy4gU2V0IHRoZXNlIHZhbHVlcyBhdCB5b3VyIG93biByaXNrLiIsInByb3BlcnRpZXMiOnsiY29udmVyc2F0aW9uRW5kVGltZW91dCI6eyJkZWZhdWx0IjoiMTBzIiwiZGVzY3JpcHRpb24iOiJgY29udmVyc2F0aW9uRW5kVGltZW91dGAgaXMgdGhlIHRpbWUgdG8gd2FpdCBhZnRlciBhIG5ldHdvcmsgZmxvdyBpcyByZWNlaXZlZCwgdG8gY29uc2lkZXIgdGhlIGNvbnZlcnNhdGlvbiBlbmRlZC5cblRoaXMgZGVsYXkgaXMgaWdub3JlZCB3aGVuIGEgRklOIHBhY2tldCBpcyBjb2xsZWN0ZWQgZm9yIFRDUCBmbG93cyAoc2VlIGBjb252ZXJzYXRpb25UZXJtaW5hdGluZ1RpbWVvdXRgIGluc3RlYWQpLiIsInR5cGUiOiJzdHJpbmcifSwiY29udmVyc2F0aW9uSGVhcnRiZWF0SW50ZXJ2YWwiOnsiZGVmYXVsdCI6IjMwcyIsImRlc2NyaXB0aW9uIjoiYGNvbnZlcnNhdGlvbkhlYXJ0YmVhdEludGVydmFsYCBpcyB0aGUgdGltZSB0byB3YWl0IGJldHdlZW4gXCJ0aWNrXCIgZXZlbnRzIG9mIGEgY29udmVyc2F0aW9uIiwidHlwZSI6InN0cmluZyJ9LCJjb252ZXJzYXRpb25UZXJtaW5hdGluZ1RpbWVvdXQiOnsiZGVmYXVsdCI6IjVzIiwiZGVzY3JpcHRpb24iOiJgY29udmVyc2F0aW9uVGVybWluYXRpbmdUaW1lb3V0YCBpcyB0aGUgdGltZSB0byB3YWl0IGZyb20gZGV0ZWN0ZWQgRklOIGZsYWcgdG8gZW5kIGEgY29udmVyc2F0aW9uLiBPbmx5IHJlbGV2YW50IGZvciBUQ1AgZmxvd3MuIiwidHlwZSI6InN0cmluZyJ9LCJkcm9wVW51c2VkRmllbGRzIjp7ImRlZmF1bHQiOnRydWUsImRlc2NyaXB0aW9uIjoiYGRyb3BVbnVzZWRGaWVsZHNgIFtkZXByZWNhdGVkICgqKV0gdGhpcyBzZXR0aW5nIGlzIG5vdCB1c2VkIGFueW1vcmUuIiwidHlwZSI6ImJvb2xlYW4ifSwiZW5hYmxlS3ViZVByb2JlcyI6eyJkZWZhdWx0Ijp0cnVlLCJkZXNjcmlwdGlvbiI6ImBlbmFibGVLdWJlUHJvYmVzYCBpcyBhIGZsYWcgdG8gZW5hYmxlIG9yIGRpc2FibGUgS3ViZXJuZXRlcyBsaXZlbmVzcyBhbmQgcmVhZGluZXNzIHByb2JlcyIsInR5cGUiOiJib29sZWFuIn0sImVudiI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoiYGVudmAgYWxsb3dzIHBhc3NpbmcgY3VzdG9tIGVudmlyb25tZW50IHZhcmlhYmxlcyB0byB1bmRlcmx5aW5nIGNvbXBvbmVudHMuIFVzZWZ1bCBmb3IgcGFzc2luZ1xuc29tZSB2ZXJ5IGNvbmNyZXRlIHBlcmZvcm1hbmNlLXR1bmluZyBvcHRpb25zLCBzdWNoIGFzIGBHT0dDYCBhbmQgYEdPTUFYUFJPQ1NgLCB0aGF0IHNob3VsZCBub3QgYmVcbnB1YmxpY2x5IGV4cG9zZWQgYXMgcGFydCBvZiB0aGUgRmxvd0NvbGxlY3RvciBkZXNjcmlwdG9yLCBhcyB0aGV5IGFyZSBvbmx5IHVzZWZ1bFxuaW4gZWRnZSBkZWJ1ZyBvciBzdXBwb3J0IHNjZW5hcmlvcy4iLCJ0eXBlIjoib2JqZWN0In0sImhlYWx0aFBvcnQiOnsiZGVmYXVsdCI6ODA4MCwiZGVzY3JpcHRpb24iOiJgaGVhbHRoUG9ydGAgaXMgYSBjb2xsZWN0b3IgSFRUUCBwb3J0IGluIHRoZSBQb2QgdGhhdCBleHBvc2VzIHRoZSBoZWFsdGggY2hlY2sgQVBJIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2NTUzNSwibWluaW11bSI6MSwidHlwZSI6ImludGVnZXIifSwicG9ydCI6eyJkZWZhdWx0IjoyMDU1LCJkZXNjcmlwdGlvbiI6IlBvcnQgb2YgdGhlIGZsb3cgY29sbGVjdG9yIChob3N0IHBvcnQpLlxuQnkgY29udmVudGlvbiwgc29tZSB2YWx1ZXMgYXJlIGZvcmJpZGRlbi4gSXQgbXVzdCBiZSBncmVhdGVyIHRoYW4gMTAyNCBhbmQgZGlmZmVyZW50IGZyb21cbjQ1MDAsIDQ3ODkgYW5kIDYwODEuIiwiZm9ybWF0IjoiaW50MzIiLCJtYXhpbXVtIjo2NTUzNSwibWluaW11bSI6MTAyNSwidHlwZSI6ImludGVnZXIifSwicHJvZmlsZVBvcnQiOnsiZGVmYXVsdCI6NjA2MCwiZGVzY3JpcHRpb24iOiJgcHJvZmlsZVBvcnRgIGFsbG93cyBzZXR0aW5nIHVwIGEgR28gcHByb2YgcHJvZmlsZXIgbGlzdGVuaW5nIHRvIHRoaXMgcG9ydCIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NjU1MzUsIm1pbmltdW0iOjAsInR5cGUiOiJpbnRlZ2VyIn0sInNjaGVkdWxpbmciOnsiZGVzY3JpcHRpb24iOiJzY2hlZHVsaW5nIGNvbnRyb2xzIGhvdyB0aGUgcG9kcyBhcmUgc2NoZWR1bGVkIG9uIG5vZGVzLiIsInByb3BlcnRpZXMiOnsiYWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJJZiBzcGVjaWZpZWQsIHRoZSBwb2QncyBzY2hlZHVsaW5nIGNvbnN0cmFpbnRzLiBGb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2t1YmVybmV0ZXMtYXBpL3dvcmtsb2FkLXJlc291cmNlcy9wb2QtdjEvI3NjaGVkdWxpbmcuIiwicHJvcGVydGllcyI6eyJub2RlQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgbm9kZSBhZmZpbml0eSBzY2hlZHVsaW5nIHJ1bGVzIGZvciB0aGUgcG9kLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYWZmaW5pdHkgZXhwcmVzc2lvbnMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQsIGJ1dCBpdCBtYXkgY2hvb3NlXG5hIG5vZGUgdGhhdCB2aW9sYXRlcyBvbmUgb3IgbW9yZSBvZiB0aGUgZXhwcmVzc2lvbnMuIFRoZSBub2RlIHRoYXQgaXNcbm1vc3QgcHJlZmVycmVkIGlzIHRoZSBvbmUgd2l0aCB0aGUgZ3JlYXRlc3Qgc3VtIG9mIHdlaWdodHMsIGkuZS5cbmZvciBlYWNoIG5vZGUgdGhhdCBtZWV0cyBhbGwgb2YgdGhlIHNjaGVkdWxpbmcgcmVxdWlyZW1lbnRzIChyZXNvdXJjZVxucmVxdWVzdCwgcmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nIGFmZmluaXR5IGV4cHJlc3Npb25zLCBldGMuKSxcbmNvbXB1dGUgYSBzdW0gYnkgaXRlcmF0aW5nIHRocm91Z2ggdGhlIGVsZW1lbnRzIG9mIHRoaXMgZmllbGQgYW5kIGFkZGluZ1xuXCJ3ZWlnaHRcIiB0byB0aGUgc3VtIGlmIHRoZSBub2RlIG1hdGNoZXMgdGhlIGNvcnJlc3BvbmRpbmcgbWF0Y2hFeHByZXNzaW9uczsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBbiBlbXB0eSBwcmVmZXJyZWQgc2NoZWR1bGluZyB0ZXJtIG1hdGNoZXMgYWxsIG9iamVjdHMgd2l0aCBpbXBsaWNpdCB3ZWlnaHQgMFxuKGkuZS4gaXQncyBhIG5vLW9wKS4gQSBudWxsIHByZWZlcnJlZCBzY2hlZHVsaW5nIHRlcm0gbWF0Y2hlcyBubyBvYmplY3RzIChpLmUuIGlzIGFsc28gYSBuby1vcCkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJlbmNlIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBsYWJlbHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hGaWVsZHMiOnsiZGVzY3JpcHRpb24iOiJBIGxpc3Qgb2Ygbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudHMgYnkgbm9kZSdzIGZpZWxkcy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbm9kZSBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yXG50aGF0IHJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoiVGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJSZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMsIERvZXNOb3RFeGlzdC4gR3QsIGFuZCBMdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6IkFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgR3Qgb3IgTHQsIHRoZSB2YWx1ZXNcbmFycmF5IG11c3QgaGF2ZSBhIHNpbmdsZSBlbGVtZW50LCB3aGljaCB3aWxsIGJlIGludGVycHJldGVkIGFzIGFuIGludGVnZXIuXG5UaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpYyBtZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJ3ZWlnaHQiOnsiZGVzY3JpcHRpb24iOiJXZWlnaHQgYXNzb2NpYXRlZCB3aXRoIG1hdGNoaW5nIHRoZSBjb3JyZXNwb25kaW5nIG5vZGVTZWxlY3RvclRlcm0sIGluIHRoZSByYW5nZSAxLTEwMC4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn19LCJyZXF1aXJlZCI6WyJwcmVmZXJlbmNlIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBhcmUgbm90IG1ldCBhdFxuc2NoZWR1bGluZyB0aW1lLCB0aGUgcG9kIHdpbGwgbm90IGJlIHNjaGVkdWxlZCBvbnRvIHRoZSBub2RlLlxuSWYgdGhlIGFmZmluaXR5IHJlcXVpcmVtZW50cyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCBjZWFzZSB0byBiZSBtZXRcbmF0IHNvbWUgcG9pbnQgZHVyaW5nIHBvZCBleGVjdXRpb24gKGUuZy4gZHVlIHRvIGFuIHVwZGF0ZSksIHRoZSBzeXN0ZW1cbm1heSBvciBtYXkgbm90IHRyeSB0byBldmVudHVhbGx5IGV2aWN0IHRoZSBwb2QgZnJvbSBpdHMgbm9kZS4iLCJwcm9wZXJ0aWVzIjp7Im5vZGVTZWxlY3RvclRlcm1zIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHRlcm1zLiBUaGUgdGVybXMgYXJlIE9SZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG51bGwgb3IgZW1wdHkgbm9kZSBzZWxlY3RvciB0ZXJtIG1hdGNoZXMgbm8gb2JqZWN0cy4gVGhlIHJlcXVpcmVtZW50cyBvZlxudGhlbSBhcmUgQU5EZWQuXG5UaGUgVG9wb2xvZ3lTZWxlY3RvclRlcm0gdHlwZSBpbXBsZW1lbnRzIGEgc3Vic2V0IG9mIHRoZSBOb2RlU2VsZWN0b3JUZXJtLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6IkEgbGlzdCBvZiBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50cyBieSBub2RlJ3MgbGFiZWxzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBub2RlIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3JcbnRoYXQgcmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJUaGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6IlJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cywgRG9lc05vdEV4aXN0LiBHdCwgYW5kIEx0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoiQW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBHdCBvciBMdCwgdGhlIHZhbHVlc1xuYXJyYXkgbXVzdCBoYXZlIGEgc2luZ2xlIGVsZW1lbnQsIHdoaWNoIHdpbGwgYmUgaW50ZXJwcmV0ZWQgYXMgYW4gaW50ZWdlci5cblRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljIG1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoRmllbGRzIjp7ImRlc2NyaXB0aW9uIjoiQSBsaXN0IG9mIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnRzIGJ5IG5vZGUncyBmaWVsZHMuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIG5vZGUgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvclxudGhhdCByZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6IlRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoiUmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzLCBEb2VzTm90RXhpc3QuIEd0LCBhbmQgTHQuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJBbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEd0IG9yIEx0LCB0aGUgdmFsdWVzXG5hcnJheSBtdXN0IGhhdmUgYSBzaW5nbGUgZWxlbWVudCwgd2hpY2ggd2lsbCBiZSBpbnRlcnByZXRlZCBhcyBhbiBpbnRlZ2VyLlxuVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWMgbWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsibm9kZVNlbGVjdG9yVGVybXMiXSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RBZmZpbml0eSI6eyJkZXNjcmlwdGlvbiI6IkRlc2NyaWJlcyBwb2QgYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyAoZS5nLiBjby1sb2NhdGUgdGhpcyBwb2QgaW4gdGhlIHNhbWUgbm9kZSwgem9uZSwgZXRjLiBhcyBzb21lIG90aGVyIHBvZChzKSkuIiwicHJvcGVydGllcyI6eyJwcmVmZXJyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IlRoZSBzY2hlZHVsZXIgd2lsbCBwcmVmZXIgdG8gc2NoZWR1bGUgcG9kcyB0byBub2RlcyB0aGF0IHNhdGlzZnlcbnRoZSBhZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYWZmaW5pdHkgZXhwcmVzc2lvbnMsIGV0Yy4pLFxuY29tcHV0ZSBhIHN1bSBieSBpdGVyYXRpbmcgdGhyb3VnaCB0aGUgZWxlbWVudHMgb2YgdGhpcyBmaWVsZCBhbmQgYWRkaW5nXG5cIndlaWdodFwiIHRvIHRoZSBzdW0gaWYgdGhlIG5vZGUgaGFzIHBvZHMgd2hpY2ggbWF0Y2hlcyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm07IHRoZVxubm9kZShzKSB3aXRoIHRoZSBoaWdoZXN0IHN1bSBhcmUgdGhlIG1vc3QgcHJlZmVycmVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiVGhlIHdlaWdodHMgb2YgYWxsIG9mIHRoZSBtYXRjaGVkIFdlaWdodGVkUG9kQWZmaW5pdHlUZXJtIGZpZWxkcyBhcmUgYWRkZWQgcGVyLW5vZGUgdG8gZmluZCB0aGUgbW9zdCBwcmVmZXJyZWQgbm9kZShzKSIsInByb3BlcnRpZXMiOnsicG9kQWZmaW5pdHlUZXJtIjp7ImRlc2NyaXB0aW9uIjoiUmVxdWlyZWQuIEEgcG9kIGFmZmluaXR5IHRlcm0sIGFzc29jaWF0ZWQgd2l0aCB0aGUgY29ycmVzcG9uZGluZyB3ZWlnaHQuIiwicHJvcGVydGllcyI6eyJsYWJlbFNlbGVjdG9yIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBxdWVyeSBvdmVyIGEgc2V0IG9mIHJlc291cmNlcywgaW4gdGhpcyBjYXNlIHBvZHMuXG5JZiBpdCdzIG51bGwsIHRoaXMgUG9kQWZmaW5pdHlUZXJtIG1hdGNoZXMgd2l0aCBubyBQb2RzLiIsInByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJkZXNjcmlwdGlvbiI6Im1hdGNoRXhwcmVzc2lvbnMgaXMgYSBsaXN0IG9mIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50cy4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHNlbGVjdG9yIHJlcXVpcmVtZW50IGlzIGEgc2VsZWN0b3IgdGhhdCBjb250YWlucyB2YWx1ZXMsIGEga2V5LCBhbmQgYW4gb3BlcmF0b3IgdGhhdFxucmVsYXRlcyB0aGUga2V5IGFuZCB2YWx1ZXMuIiwicHJvcGVydGllcyI6eyJrZXkiOnsiZGVzY3JpcHRpb24iOiJrZXkgaXMgdGhlIGxhYmVsIGtleSB0aGF0IHRoZSBzZWxlY3RvciBhcHBsaWVzIHRvLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJvcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIGEgc2V0IG9mIHZhbHVlcy5cblZhbGlkIG9wZXJhdG9ycyBhcmUgSW4sIE5vdEluLCBFeGlzdHMgYW5kIERvZXNOb3RFeGlzdC4iLCJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJkZXNjcmlwdGlvbiI6InZhbHVlcyBpcyBhbiBhcnJheSBvZiBzdHJpbmcgdmFsdWVzLiBJZiB0aGUgb3BlcmF0b3IgaXMgSW4gb3IgTm90SW4sXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgbm9uLWVtcHR5LiBJZiB0aGUgb3BlcmF0b3IgaXMgRXhpc3RzIG9yIERvZXNOb3RFeGlzdCxcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBlbXB0eS4gVGhpcyBhcnJheSBpcyByZXBsYWNlZCBkdXJpbmcgYSBzdHJhdGVnaWNcbm1lcmdlIHBhdGNoLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwiZGVzY3JpcHRpb24iOiJtYXRjaExhYmVscyBpcyBhIG1hcCBvZiB7a2V5LHZhbHVlfSBwYWlycy4gQSBzaW5nbGUge2tleSx2YWx1ZX0gaW4gdGhlIG1hdGNoTGFiZWxzXG5tYXAgaXMgZXF1aXZhbGVudCB0byBhbiBlbGVtZW50IG9mIG1hdGNoRXhwcmVzc2lvbnMsIHdob3NlIGtleSBmaWVsZCBpcyBcImtleVwiLCB0aGVcbm9wZXJhdG9yIGlzIFwiSW5cIiwgYW5kIHRoZSB2YWx1ZXMgYXJyYXkgY29udGFpbnMgb25seSBcInZhbHVlXCIuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWlzbWF0Y2hMYWJlbEtleXMiOnsiZGVzY3JpcHRpb24iOiJNaXNtYXRjaExhYmVsS2V5cyBpcyBhIHNldCBvZiBwb2QgbGFiZWwga2V5cyB0byBzZWxlY3Qgd2hpY2ggcG9kcyB3aWxsXG5iZSB0YWtlbiBpbnRvIGNvbnNpZGVyYXRpb24uIFRoZSBrZXlzIGFyZSB1c2VkIHRvIGxvb2t1cCB2YWx1ZXMgZnJvbSB0aGVcbmluY29taW5nIHBvZCBsYWJlbHMsIHRob3NlIGtleS12YWx1ZSBsYWJlbHMgYXJlIG1lcmdlZCB3aXRoIGBsYWJlbFNlbGVjdG9yYCBhcyBga2V5IG5vdGluICh2YWx1ZSlgXG50byBzZWxlY3QgdGhlIGdyb3VwIG9mIGV4aXN0aW5nIHBvZHMgd2hpY2ggcG9kcyB3aWxsIGJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvblxuZm9yIHRoZSBpbmNvbWluZyBwb2QncyBwb2QgKGFudGkpIGFmZmluaXR5LiBLZXlzIHRoYXQgZG9uJ3QgZXhpc3QgaW4gdGhlIGluY29taW5nXG5wb2QgbGFiZWxzIHdpbGwgYmUgaWdub3JlZC4gVGhlIGRlZmF1bHQgdmFsdWUgaXMgZW1wdHkuXG5UaGUgc2FtZSBrZXkgaXMgZm9yYmlkZGVuIHRvIGV4aXN0IGluIGJvdGggbWlzbWF0Y2hMYWJlbEtleXMgYW5kIGxhYmVsU2VsZWN0b3IuXG5BbHNvLCBtaXNtYXRjaExhYmVsS2V5cyBjYW5ub3QgYmUgc2V0IHdoZW4gbGFiZWxTZWxlY3RvciBpc24ndCBzZXQuXG5UaGlzIGlzIGEgYmV0YSBmaWVsZCBhbmQgcmVxdWlyZXMgZW5hYmxpbmcgTWF0Y2hMYWJlbEtleXNJblBvZEFmZmluaXR5IGZlYXR1cmUgZ2F0ZSAoZW5hYmxlZCBieSBkZWZhdWx0KS4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibmFtZXNwYWNlU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgdGhlIHNldCBvZiBuYW1lc3BhY2VzIHRoYXQgdGhlIHRlcm0gYXBwbGllcyB0by5cblRoZSB0ZXJtIGlzIGFwcGxpZWQgdG8gdGhlIHVuaW9uIG9mIHRoZSBuYW1lc3BhY2VzIHNlbGVjdGVkIGJ5IHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBsaXN0ZWQgaW4gdGhlIG5hbWVzcGFjZXMgZmllbGQuXG5udWxsIHNlbGVjdG9yIGFuZCBudWxsIG9yIGVtcHR5IG5hbWVzcGFjZXMgbGlzdCBtZWFucyBcInRoaXMgcG9kJ3MgbmFtZXNwYWNlXCIuXG5BbiBlbXB0eSBzZWxlY3RvciAoe30pIG1hdGNoZXMgYWxsIG5hbWVzcGFjZXMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VzIjp7ImRlc2NyaXB0aW9uIjoibmFtZXNwYWNlcyBzcGVjaWZpZXMgYSBzdGF0aWMgbGlzdCBvZiBuYW1lc3BhY2UgbmFtZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgbGlzdGVkIGluIHRoaXMgZmllbGRcbmFuZCB0aGUgb25lcyBzZWxlY3RlZCBieSBuYW1lc3BhY2VTZWxlY3Rvci5cbm51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IGFuZCBudWxsIG5hbWVzcGFjZVNlbGVjdG9yIG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwidG9wb2xvZ3lLZXkiOnsiZGVzY3JpcHRpb24iOiJUaGlzIHBvZCBzaG91bGQgYmUgY28tbG9jYXRlZCAoYWZmaW5pdHkpIG9yIG5vdCBjby1sb2NhdGVkIChhbnRpLWFmZmluaXR5KSB3aXRoIHRoZSBwb2RzIG1hdGNoaW5nXG50aGUgbGFiZWxTZWxlY3RvciBpbiB0aGUgc3BlY2lmaWVkIG5hbWVzcGFjZXMsIHdoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZVxud2hvc2UgdmFsdWUgb2YgdGhlIGxhYmVsIHdpdGgga2V5IHRvcG9sb2d5S2V5IG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaCBhbnkgb2YgdGhlXG5zZWxlY3RlZCBwb2RzIGlzIHJ1bm5pbmcuXG5FbXB0eSB0b3BvbG9neUtleSBpcyBub3QgYWxsb3dlZC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJ0b3BvbG9neUtleSJdLCJ0eXBlIjoib2JqZWN0In0sIndlaWdodCI6eyJkZXNjcmlwdGlvbiI6IndlaWdodCBhc3NvY2lhdGVkIHdpdGggbWF0Y2hpbmcgdGhlIGNvcnJlc3BvbmRpbmcgcG9kQWZmaW5pdHlUZXJtLFxuaW4gdGhlIHJhbmdlIDEtMTAwLiIsImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifX0sInJlcXVpcmVkIjpbInBvZEFmZmluaXR5VGVybSIsIndlaWdodCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwicmVxdWlyZWREdXJpbmdTY2hlZHVsaW5nSWdub3JlZER1cmluZ0V4ZWN1dGlvbiI6eyJkZXNjcmlwdGlvbiI6IklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgYXJlIG5vdCBtZXQgYXRcbnNjaGVkdWxpbmcgdGltZSwgdGhlIHBvZCB3aWxsIG5vdCBiZSBzY2hlZHVsZWQgb250byB0aGUgbm9kZS5cbklmIHRoZSBhZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0XG5hdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhIHBvZCBsYWJlbCB1cGRhdGUpLCB0aGVcbnN5c3RlbSBtYXkgb3IgbWF5IG5vdCB0cnkgdG8gZXZlbnR1YWxseSBldmljdCB0aGUgcG9kIGZyb20gaXRzIG5vZGUuXG5XaGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBlbGVtZW50cywgdGhlIGxpc3RzIG9mIG5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gZWFjaFxucG9kQWZmaW5pdHlUZXJtIGFyZSBpbnRlcnNlY3RlZCwgaS5lLiBhbGwgdGVybXMgbXVzdCBiZSBzYXRpc2ZpZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIGEgc2V0IG9mIHBvZHMgKG5hbWVseSB0aG9zZSBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvclxucmVsYXRpdmUgdG8gdGhlIGdpdmVuIG5hbWVzcGFjZShzKSkgdGhhdCB0aGlzIHBvZCBzaG91bGQgYmVcbmNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCxcbndoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZlxudGhlIGxhYmVsIHdpdGgga2V5IFx1MDAzY3RvcG9sb2d5S2V5XHUwMDNlIG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaFxuYSBwb2Qgb2YgdGhlIHNldCBvZiBwb2RzIGlzIHJ1bm5pbmciLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJwb2RBbnRpQWZmaW5pdHkiOnsiZGVzY3JpcHRpb24iOiJEZXNjcmliZXMgcG9kIGFudGktYWZmaW5pdHkgc2NoZWR1bGluZyBydWxlcyAoZS5nLiBhdm9pZCBwdXR0aW5nIHRoaXMgcG9kIGluIHRoZSBzYW1lIG5vZGUsIHpvbmUsIGV0Yy4gYXMgc29tZSBvdGhlciBwb2QocykpLiIsInByb3BlcnRpZXMiOnsicHJlZmVycmVkRHVyaW5nU2NoZWR1bGluZ0lnbm9yZWREdXJpbmdFeGVjdXRpb24iOnsiZGVzY3JpcHRpb24iOiJUaGUgc2NoZWR1bGVyIHdpbGwgcHJlZmVyIHRvIHNjaGVkdWxlIHBvZHMgdG8gbm9kZXMgdGhhdCBzYXRpc2Z5XG50aGUgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucyBzcGVjaWZpZWQgYnkgdGhpcyBmaWVsZCwgYnV0IGl0IG1heSBjaG9vc2VcbmEgbm9kZSB0aGF0IHZpb2xhdGVzIG9uZSBvciBtb3JlIG9mIHRoZSBleHByZXNzaW9ucy4gVGhlIG5vZGUgdGhhdCBpc1xubW9zdCBwcmVmZXJyZWQgaXMgdGhlIG9uZSB3aXRoIHRoZSBncmVhdGVzdCBzdW0gb2Ygd2VpZ2h0cywgaS5lLlxuZm9yIGVhY2ggbm9kZSB0aGF0IG1lZXRzIGFsbCBvZiB0aGUgc2NoZWR1bGluZyByZXF1aXJlbWVudHMgKHJlc291cmNlXG5yZXF1ZXN0LCByZXF1aXJlZER1cmluZ1NjaGVkdWxpbmcgYW50aS1hZmZpbml0eSBleHByZXNzaW9ucywgZXRjLiksXG5jb21wdXRlIGEgc3VtIGJ5IGl0ZXJhdGluZyB0aHJvdWdoIHRoZSBlbGVtZW50cyBvZiB0aGlzIGZpZWxkIGFuZCBhZGRpbmdcblwid2VpZ2h0XCIgdG8gdGhlIHN1bSBpZiB0aGUgbm9kZSBoYXMgcG9kcyB3aGljaCBtYXRjaGVzIHRoZSBjb3JyZXNwb25kaW5nIHBvZEFmZmluaXR5VGVybTsgdGhlXG5ub2RlKHMpIHdpdGggdGhlIGhpZ2hlc3Qgc3VtIGFyZSB0aGUgbW9zdCBwcmVmZXJyZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJUaGUgd2VpZ2h0cyBvZiBhbGwgb2YgdGhlIG1hdGNoZWQgV2VpZ2h0ZWRQb2RBZmZpbml0eVRlcm0gZmllbGRzIGFyZSBhZGRlZCBwZXItbm9kZSB0byBmaW5kIHRoZSBtb3N0IHByZWZlcnJlZCBub2RlKHMpIiwicHJvcGVydGllcyI6eyJwb2RBZmZpbml0eVRlcm0iOnsiZGVzY3JpcHRpb24iOiJSZXF1aXJlZC4gQSBwb2QgYWZmaW5pdHkgdGVybSwgYXNzb2NpYXRlZCB3aXRoIHRoZSBjb3JyZXNwb25kaW5nIHdlaWdodC4iLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwid2VpZ2h0Ijp7ImRlc2NyaXB0aW9uIjoid2VpZ2h0IGFzc29jaWF0ZWQgd2l0aCBtYXRjaGluZyB0aGUgY29ycmVzcG9uZGluZyBwb2RBZmZpbml0eVRlcm0sXG5pbiB0aGUgcmFuZ2UgMS0xMDAuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9fSwicmVxdWlyZWQiOlsicG9kQWZmaW5pdHlUZXJtIiwid2VpZ2h0Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJyZXF1aXJlZER1cmluZ1NjaGVkdWxpbmdJZ25vcmVkRHVyaW5nRXhlY3V0aW9uIjp7ImRlc2NyaXB0aW9uIjoiSWYgdGhlIGFudGktYWZmaW5pdHkgcmVxdWlyZW1lbnRzIHNwZWNpZmllZCBieSB0aGlzIGZpZWxkIGFyZSBub3QgbWV0IGF0XG5zY2hlZHVsaW5nIHRpbWUsIHRoZSBwb2Qgd2lsbCBub3QgYmUgc2NoZWR1bGVkIG9udG8gdGhlIG5vZGUuXG5JZiB0aGUgYW50aS1hZmZpbml0eSByZXF1aXJlbWVudHMgc3BlY2lmaWVkIGJ5IHRoaXMgZmllbGQgY2Vhc2UgdG8gYmUgbWV0XG5hdCBzb21lIHBvaW50IGR1cmluZyBwb2QgZXhlY3V0aW9uIChlLmcuIGR1ZSB0byBhIHBvZCBsYWJlbCB1cGRhdGUpLCB0aGVcbnN5c3RlbSBtYXkgb3IgbWF5IG5vdCB0cnkgdG8gZXZlbnR1YWxseSBldmljdCB0aGUgcG9kIGZyb20gaXRzIG5vZGUuXG5XaGVuIHRoZXJlIGFyZSBtdWx0aXBsZSBlbGVtZW50cywgdGhlIGxpc3RzIG9mIG5vZGVzIGNvcnJlc3BvbmRpbmcgdG8gZWFjaFxucG9kQWZmaW5pdHlUZXJtIGFyZSBpbnRlcnNlY3RlZCwgaS5lLiBhbGwgdGVybXMgbXVzdCBiZSBzYXRpc2ZpZWQuIiwiaXRlbXMiOnsiZGVzY3JpcHRpb24iOiJEZWZpbmVzIGEgc2V0IG9mIHBvZHMgKG5hbWVseSB0aG9zZSBtYXRjaGluZyB0aGUgbGFiZWxTZWxlY3RvclxucmVsYXRpdmUgdG8gdGhlIGdpdmVuIG5hbWVzcGFjZShzKSkgdGhhdCB0aGlzIHBvZCBzaG91bGQgYmVcbmNvLWxvY2F0ZWQgKGFmZmluaXR5KSBvciBub3QgY28tbG9jYXRlZCAoYW50aS1hZmZpbml0eSkgd2l0aCxcbndoZXJlIGNvLWxvY2F0ZWQgaXMgZGVmaW5lZCBhcyBydW5uaW5nIG9uIGEgbm9kZSB3aG9zZSB2YWx1ZSBvZlxudGhlIGxhYmVsIHdpdGgga2V5IFx1MDAzY3RvcG9sb2d5S2V5XHUwMDNlIG1hdGNoZXMgdGhhdCBvZiBhbnkgbm9kZSBvbiB3aGljaFxuYSBwb2Qgb2YgdGhlIHNldCBvZiBwb2RzIGlzIHJ1bm5pbmciLCJwcm9wZXJ0aWVzIjp7ImxhYmVsU2VsZWN0b3IiOnsiZGVzY3JpcHRpb24iOiJBIGxhYmVsIHF1ZXJ5IG92ZXIgYSBzZXQgb2YgcmVzb3VyY2VzLCBpbiB0aGlzIGNhc2UgcG9kcy5cbklmIGl0J3MgbnVsbCwgdGhpcyBQb2RBZmZpbml0eVRlcm0gbWF0Y2hlcyB3aXRoIG5vIFBvZHMuIiwicHJvcGVydGllcyI6eyJtYXRjaEV4cHJlc3Npb25zIjp7ImRlc2NyaXB0aW9uIjoibWF0Y2hFeHByZXNzaW9ucyBpcyBhIGxpc3Qgb2YgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnRzLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgc2VsZWN0b3IgcmVxdWlyZW1lbnQgaXMgYSBzZWxlY3RvciB0aGF0IGNvbnRhaW5zIHZhbHVlcywgYSBrZXksIGFuZCBhbiBvcGVyYXRvciB0aGF0XG5yZWxhdGVzIHRoZSBrZXkgYW5kIHZhbHVlcy4iLCJwcm9wZXJ0aWVzIjp7ImtleSI6eyJkZXNjcmlwdGlvbiI6ImtleSBpcyB0aGUgbGFiZWwga2V5IHRoYXQgdGhlIHNlbGVjdG9yIGFwcGxpZXMgdG8uIiwidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJkZXNjcmlwdGlvbiI6Im9wZXJhdG9yIHJlcHJlc2VudHMgYSBrZXkncyByZWxhdGlvbnNoaXAgdG8gYSBzZXQgb2YgdmFsdWVzLlxuVmFsaWQgb3BlcmF0b3JzIGFyZSBJbiwgTm90SW4sIEV4aXN0cyBhbmQgRG9lc05vdEV4aXN0LiIsInR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7ImRlc2NyaXB0aW9uIjoidmFsdWVzIGlzIGFuIGFycmF5IG9mIHN0cmluZyB2YWx1ZXMuIElmIHRoZSBvcGVyYXRvciBpcyBJbiBvciBOb3RJbixcbnRoZSB2YWx1ZXMgYXJyYXkgbXVzdCBiZSBub24tZW1wdHkuIElmIHRoZSBvcGVyYXRvciBpcyBFeGlzdHMgb3IgRG9lc05vdEV4aXN0LFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIGVtcHR5LiBUaGlzIGFycmF5IGlzIHJlcGxhY2VkIGR1cmluZyBhIHN0cmF0ZWdpY1xubWVyZ2UgcGF0Y2guIiwiaXRlbXMiOnsidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn19LCJyZXF1aXJlZCI6WyJrZXkiLCJvcGVyYXRvciJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifSwibWF0Y2hMYWJlbHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6Im1hdGNoTGFiZWxzIGlzIGEgbWFwIG9mIHtrZXksdmFsdWV9IHBhaXJzLiBBIHNpbmdsZSB7a2V5LHZhbHVlfSBpbiB0aGUgbWF0Y2hMYWJlbHNcbm1hcCBpcyBlcXVpdmFsZW50IHRvIGFuIGVsZW1lbnQgb2YgbWF0Y2hFeHByZXNzaW9ucywgd2hvc2Uga2V5IGZpZWxkIGlzIFwia2V5XCIsIHRoZVxub3BlcmF0b3IgaXMgXCJJblwiLCBhbmQgdGhlIHZhbHVlcyBhcnJheSBjb250YWlucyBvbmx5IFwidmFsdWVcIi4gVGhlIHJlcXVpcmVtZW50cyBhcmUgQU5EZWQuIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgaW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtaXNtYXRjaExhYmVsS2V5cyI6eyJkZXNjcmlwdGlvbiI6Ik1pc21hdGNoTGFiZWxLZXlzIGlzIGEgc2V0IG9mIHBvZCBsYWJlbCBrZXlzIHRvIHNlbGVjdCB3aGljaCBwb2RzIHdpbGxcbmJlIHRha2VuIGludG8gY29uc2lkZXJhdGlvbi4gVGhlIGtleXMgYXJlIHVzZWQgdG8gbG9va3VwIHZhbHVlcyBmcm9tIHRoZVxuaW5jb21pbmcgcG9kIGxhYmVscywgdGhvc2Uga2V5LXZhbHVlIGxhYmVscyBhcmUgbWVyZ2VkIHdpdGggYGxhYmVsU2VsZWN0b3JgIGFzIGBrZXkgbm90aW4gKHZhbHVlKWBcbnRvIHNlbGVjdCB0aGUgZ3JvdXAgb2YgZXhpc3RpbmcgcG9kcyB3aGljaCBwb2RzIHdpbGwgYmUgdGFrZW4gaW50byBjb25zaWRlcmF0aW9uXG5mb3IgdGhlIGluY29taW5nIHBvZCdzIHBvZCAoYW50aSkgYWZmaW5pdHkuIEtleXMgdGhhdCBkb24ndCBleGlzdCBpbiB0aGUgaW5jb21pbmdcbnBvZCBsYWJlbHMgd2lsbCBiZSBpZ25vcmVkLiBUaGUgZGVmYXVsdCB2YWx1ZSBpcyBlbXB0eS5cblRoZSBzYW1lIGtleSBpcyBmb3JiaWRkZW4gdG8gZXhpc3QgaW4gYm90aCBtaXNtYXRjaExhYmVsS2V5cyBhbmQgbGFiZWxTZWxlY3Rvci5cbkFsc28sIG1pc21hdGNoTGFiZWxLZXlzIGNhbm5vdCBiZSBzZXQgd2hlbiBsYWJlbFNlbGVjdG9yIGlzbid0IHNldC5cblRoaXMgaXMgYSBiZXRhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyBNYXRjaExhYmVsS2V5c0luUG9kQWZmaW5pdHkgZmVhdHVyZSBnYXRlIChlbmFibGVkIGJ5IGRlZmF1bHQpLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJuYW1lc3BhY2VTZWxlY3RvciI6eyJkZXNjcmlwdGlvbiI6IkEgbGFiZWwgcXVlcnkgb3ZlciB0aGUgc2V0IG9mIG5hbWVzcGFjZXMgdGhhdCB0aGUgdGVybSBhcHBsaWVzIHRvLlxuVGhlIHRlcm0gaXMgYXBwbGllZCB0byB0aGUgdW5pb24gb2YgdGhlIG5hbWVzcGFjZXMgc2VsZWN0ZWQgYnkgdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIGxpc3RlZCBpbiB0aGUgbmFtZXNwYWNlcyBmaWVsZC5cbm51bGwgc2VsZWN0b3IgYW5kIG51bGwgb3IgZW1wdHkgbmFtZXNwYWNlcyBsaXN0IG1lYW5zIFwidGhpcyBwb2QncyBuYW1lc3BhY2VcIi5cbkFuIGVtcHR5IHNlbGVjdG9yICh7fSkgbWF0Y2hlcyBhbGwgbmFtZXNwYWNlcy4iLCJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiZGVzY3JpcHRpb24iOiJtYXRjaEV4cHJlc3Npb25zIGlzIGEgbGlzdCBvZiBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudHMuIFRoZSByZXF1aXJlbWVudHMgYXJlIEFORGVkLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQSBsYWJlbCBzZWxlY3RvciByZXF1aXJlbWVudCBpcyBhIHNlbGVjdG9yIHRoYXQgY29udGFpbnMgdmFsdWVzLCBhIGtleSwgYW5kIGFuIG9wZXJhdG9yIHRoYXRcbnJlbGF0ZXMgdGhlIGtleSBhbmQgdmFsdWVzLiIsInByb3BlcnRpZXMiOnsia2V5Ijp7ImRlc2NyaXB0aW9uIjoia2V5IGlzIHRoZSBsYWJlbCBrZXkgdGhhdCB0aGUgc2VsZWN0b3IgYXBwbGllcyB0by4iLCJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7ImRlc2NyaXB0aW9uIjoib3BlcmF0b3IgcmVwcmVzZW50cyBhIGtleSdzIHJlbGF0aW9uc2hpcCB0byBhIHNldCBvZiB2YWx1ZXMuXG5WYWxpZCBvcGVyYXRvcnMgYXJlIEluLCBOb3RJbiwgRXhpc3RzIGFuZCBEb2VzTm90RXhpc3QuIiwidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZXMiOnsiZGVzY3JpcHRpb24iOiJ2YWx1ZXMgaXMgYW4gYXJyYXkgb2Ygc3RyaW5nIHZhbHVlcy4gSWYgdGhlIG9wZXJhdG9yIGlzIEluIG9yIE5vdEluLFxudGhlIHZhbHVlcyBhcnJheSBtdXN0IGJlIG5vbi1lbXB0eS4gSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cyBvciBEb2VzTm90RXhpc3QsXG50aGUgdmFsdWVzIGFycmF5IG11c3QgYmUgZW1wdHkuIFRoaXMgYXJyYXkgaXMgcmVwbGFjZWQgZHVyaW5nIGEgc3RyYXRlZ2ljXG5tZXJnZSBwYXRjaC4iLCJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sImRlc2NyaXB0aW9uIjoibWF0Y2hMYWJlbHMgaXMgYSBtYXAgb2Yge2tleSx2YWx1ZX0gcGFpcnMuIEEgc2luZ2xlIHtrZXksdmFsdWV9IGluIHRoZSBtYXRjaExhYmVsc1xubWFwIGlzIGVxdWl2YWxlbnQgdG8gYW4gZWxlbWVudCBvZiBtYXRjaEV4cHJlc3Npb25zLCB3aG9zZSBrZXkgZmllbGQgaXMgXCJrZXlcIiwgdGhlXG5vcGVyYXRvciBpcyBcIkluXCIsIGFuZCB0aGUgdmFsdWVzIGFycmF5IGNvbnRhaW5zIG9ubHkgXCJ2YWx1ZVwiLiBUaGUgcmVxdWlyZW1lbnRzIGFyZSBBTkRlZC4iLCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sIm5hbWVzcGFjZXMiOnsiZGVzY3JpcHRpb24iOiJuYW1lc3BhY2VzIHNwZWNpZmllcyBhIHN0YXRpYyBsaXN0IG9mIG5hbWVzcGFjZSBuYW1lcyB0aGF0IHRoZSB0ZXJtIGFwcGxpZXMgdG8uXG5UaGUgdGVybSBpcyBhcHBsaWVkIHRvIHRoZSB1bmlvbiBvZiB0aGUgbmFtZXNwYWNlcyBsaXN0ZWQgaW4gdGhpcyBmaWVsZFxuYW5kIHRoZSBvbmVzIHNlbGVjdGVkIGJ5IG5hbWVzcGFjZVNlbGVjdG9yLlxubnVsbCBvciBlbXB0eSBuYW1lc3BhY2VzIGxpc3QgYW5kIG51bGwgbmFtZXNwYWNlU2VsZWN0b3IgbWVhbnMgXCJ0aGlzIHBvZCdzIG5hbWVzcGFjZVwiLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJ0b3BvbG9neUtleSI6eyJkZXNjcmlwdGlvbiI6IlRoaXMgcG9kIHNob3VsZCBiZSBjby1sb2NhdGVkIChhZmZpbml0eSkgb3Igbm90IGNvLWxvY2F0ZWQgKGFudGktYWZmaW5pdHkpIHdpdGggdGhlIHBvZHMgbWF0Y2hpbmdcbnRoZSBsYWJlbFNlbGVjdG9yIGluIHRoZSBzcGVjaWZpZWQgbmFtZXNwYWNlcywgd2hlcmUgY28tbG9jYXRlZCBpcyBkZWZpbmVkIGFzIHJ1bm5pbmcgb24gYSBub2RlXG53aG9zZSB2YWx1ZSBvZiB0aGUgbGFiZWwgd2l0aCBrZXkgdG9wb2xvZ3lLZXkgbWF0Y2hlcyB0aGF0IG9mIGFueSBub2RlIG9uIHdoaWNoIGFueSBvZiB0aGVcbnNlbGVjdGVkIHBvZHMgaXMgcnVubmluZy5cbkVtcHR5IHRvcG9sb2d5S2V5IGlzIG5vdCBhbGxvd2VkLiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInRvcG9sb2d5S2V5Il0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJub2RlU2VsZWN0b3IiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsidHlwZSI6InN0cmluZyJ9LCJkZXNjcmlwdGlvbiI6ImBub2RlU2VsZWN0b3JgIGFsbG93cyBzY2hlZHVsaW5nIG9mIHBvZHMgb25seSBvbnRvIG5vZGVzIHRoYXQgaGF2ZSBlYWNoIG9mIHRoZSBzcGVjaWZpZWQgbGFiZWxzLlxuRm9yIGRvY3VtZW50YXRpb24sIHJlZmVyIHRvIGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vYXNzaWduLXBvZC1ub2RlLy4iLCJ0eXBlIjoib2JqZWN0IiwieC1rdWJlcm5ldGVzLW1hcC10eXBlIjoiYXRvbWljIn0sInByaW9yaXR5Q2xhc3NOYW1lIjp7ImRlc2NyaXB0aW9uIjoiSWYgc3BlY2lmaWVkLCBpbmRpY2F0ZXMgdGhlIHBvZCdzIHByaW9yaXR5LiBGb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvc2NoZWR1bGluZy1ldmljdGlvbi9wb2QtcHJpb3JpdHktcHJlZW1wdGlvbi8jaG93LXRvLXVzZS1wcmlvcml0eS1hbmQtcHJlZW1wdGlvbi5cbklmIG5vdCBzcGVjaWZpZWQsIGRlZmF1bHQgcHJpb3JpdHkgaXMgdXNlZCwgb3IgemVybyBpZiB0aGVyZSBpcyBubyBkZWZhdWx0LiIsInR5cGUiOiJzdHJpbmcifSwidG9sZXJhdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJgdG9sZXJhdGlvbnNgIGlzIGEgbGlzdCBvZiB0b2xlcmF0aW9ucyB0aGF0IGFsbG93IHRoZSBwb2QgdG8gc2NoZWR1bGUgb250byBub2RlcyB3aXRoIG1hdGNoaW5nIHRhaW50cy5cbkZvciBkb2N1bWVudGF0aW9uLCByZWZlciB0byBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9yZWZlcmVuY2Uva3ViZXJuZXRlcy1hcGkvd29ya2xvYWQtcmVzb3VyY2VzL3BvZC12MS8jc2NoZWR1bGluZy4iLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IlRoZSBwb2QgdGhpcyBUb2xlcmF0aW9uIGlzIGF0dGFjaGVkIHRvIHRvbGVyYXRlcyBhbnkgdGFpbnQgdGhhdCBtYXRjaGVzXG50aGUgdHJpcGxlIFx1MDAzY2tleSx2YWx1ZSxlZmZlY3RcdTAwM2UgdXNpbmcgdGhlIG1hdGNoaW5nIG9wZXJhdG9yIFx1MDAzY29wZXJhdG9yXHUwMDNlLiIsInByb3BlcnRpZXMiOnsiZWZmZWN0Ijp7ImRlc2NyaXB0aW9uIjoiRWZmZWN0IGluZGljYXRlcyB0aGUgdGFpbnQgZWZmZWN0IHRvIG1hdGNoLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQgZWZmZWN0cy5cbldoZW4gc3BlY2lmaWVkLCBhbGxvd2VkIHZhbHVlcyBhcmUgTm9TY2hlZHVsZSwgUHJlZmVyTm9TY2hlZHVsZSBhbmQgTm9FeGVjdXRlLiIsInR5cGUiOiJzdHJpbmcifSwia2V5Ijp7ImRlc2NyaXB0aW9uIjoiS2V5IGlzIHRoZSB0YWludCBrZXkgdGhhdCB0aGUgdG9sZXJhdGlvbiBhcHBsaWVzIHRvLiBFbXB0eSBtZWFucyBtYXRjaCBhbGwgdGFpbnQga2V5cy5cbklmIHRoZSBrZXkgaXMgZW1wdHksIG9wZXJhdG9yIG11c3QgYmUgRXhpc3RzOyB0aGlzIGNvbWJpbmF0aW9uIG1lYW5zIHRvIG1hdGNoIGFsbCB2YWx1ZXMgYW5kIGFsbCBrZXlzLiIsInR5cGUiOiJzdHJpbmcifSwib3BlcmF0b3IiOnsiZGVzY3JpcHRpb24iOiJPcGVyYXRvciByZXByZXNlbnRzIGEga2V5J3MgcmVsYXRpb25zaGlwIHRvIHRoZSB2YWx1ZS5cblZhbGlkIG9wZXJhdG9ycyBhcmUgRXhpc3RzIGFuZCBFcXVhbC4gRGVmYXVsdHMgdG8gRXF1YWwuXG5FeGlzdHMgaXMgZXF1aXZhbGVudCB0byB3aWxkY2FyZCBmb3IgdmFsdWUsIHNvIHRoYXQgYSBwb2QgY2FuXG50b2xlcmF0ZSBhbGwgdGFpbnRzIG9mIGEgcGFydGljdWxhciBjYXRlZ29yeS4iLCJ0eXBlIjoic3RyaW5nIn0sInRvbGVyYXRpb25TZWNvbmRzIjp7ImRlc2NyaXB0aW9uIjoiVG9sZXJhdGlvblNlY29uZHMgcmVwcmVzZW50cyB0aGUgcGVyaW9kIG9mIHRpbWUgdGhlIHRvbGVyYXRpb24gKHdoaWNoIG11c3QgYmVcbm9mIGVmZmVjdCBOb0V4ZWN1dGUsIG90aGVyd2lzZSB0aGlzIGZpZWxkIGlzIGlnbm9yZWQpIHRvbGVyYXRlcyB0aGUgdGFpbnQuIEJ5IGRlZmF1bHQsXG5pdCBpcyBub3Qgc2V0LCB3aGljaCBtZWFucyB0b2xlcmF0ZSB0aGUgdGFpbnQgZm9yZXZlciAoZG8gbm90IGV2aWN0KS4gWmVybyBhbmRcbm5lZ2F0aXZlIHZhbHVlcyB3aWxsIGJlIHRyZWF0ZWQgYXMgMCAoZXZpY3QgaW1tZWRpYXRlbHkpIGJ5IHRoZSBzeXN0ZW0uIiwiZm9ybWF0IjoiaW50NjQiLCJ0eXBlIjoiaW50ZWdlciJ9LCJ2YWx1ZSI6eyJkZXNjcmlwdGlvbiI6IlZhbHVlIGlzIHRoZSB0YWludCB2YWx1ZSB0aGUgdG9sZXJhdGlvbiBtYXRjaGVzIHRvLlxuSWYgdGhlIG9wZXJhdG9yIGlzIEV4aXN0cywgdGhlIHZhbHVlIHNob3VsZCBiZSBlbXB0eSwgb3RoZXJ3aXNlIGp1c3QgYSByZWd1bGFyIHN0cmluZy4iLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzZWNvbmRhcnlOZXR3b3JrcyI6eyJkZXNjcmlwdGlvbiI6IkRlZmluZSBzZWNvbmRhcnkgbmV0d29ya3MgdG8gYmUgY2hlY2tlZCBmb3IgcmVzb3VyY2VzIGlkZW50aWZpY2F0aW9uLlxuSW4gb3JkZXIgdG8gZ3VhcmFudGVlIGEgY29ycmVjdCBpZGVudGlmaWNhdGlvbiwgaXQgaXMgaW1wb3J0YW50IHRoYXQgdGhlIGluZGV4ZWQgdmFsdWVzIGZvcm0gYW4gdW5pcXVlIGlkZW50aWZpZXIgYWNyb3NzIHRoZSBjbHVzdGVyLlxuSWYgdGhlcmUgYXJlIGNvbGxpc2lvbnMgaW4gdGhlIGluZGV4ZXMgKHNhbWUgaW5kZXggdXNlZCBieSBzZXZlcmFsIHJlc291cmNlcyksIHRob3NlIHJlc291cmNlcyBtaWdodCBiZSB3cm9uZ2x5IGxhYmVsbGVkLiIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiaW5kZXgiOnsiZGVzY3JpcHRpb24iOiJgaW5kZXhgIGlzIGEgbGlzdCBvZiBmaWVsZHMgdG8gdXNlIGZvciBpbmRleGluZyB0aGUgcG9kcy4gVGhleSBzaG91bGQgZm9ybSBhIHVuaXF1ZSBQb2QgaWRlbnRpZmllciBhY3Jvc3MgdGhlIGNsdXN0ZXIuXG5DYW4gYmUgYW55IG9mOiBNQUMsIElQLCBJbnRlcmZhY2UiLCJpdGVtcyI6eyJkZXNjcmlwdGlvbiI6IkZpZWxkIHRvIGluZGV4IGZvciBzZWNvbmRhcnkgbmV0d29yayBwb2QgaWRlbnRpZmljYXRpb24sIGNhbiBiZSBhbnkgb2Y6IE1BQywgSVAsIEludGVyZmFjZSIsImVudW0iOlsiTUFDIiwiSVAiLCJJbnRlcmZhY2UiXSwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjoiYXJyYXkifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6ImBuYW1lYCBzaG91bGQgbWF0Y2ggdGhlIG5ldHdvcmsgbmFtZSBhcyB2aXNpYmxlIGluIHRoZSBwb2RzIGFubm90YXRpb24gJ2s4cy52MS5jbmkuY25jZi5pby9uZXR3b3JrLXN0YXR1cycuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiaW5kZXgiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In19LCJ0eXBlIjoib2JqZWN0In0sImNsdXN0ZXJOYW1lIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6ImBjbHVzdGVyTmFtZWAgaXMgdGhlIG5hbWUgb2YgdGhlIGNsdXN0ZXIgdG8gYXBwZWFyIGluIHRoZSBmbG93cyBkYXRhLiBUaGlzIGlzIHVzZWZ1bCBpbiBhIG11bHRpLWNsdXN0ZXIgY29udGV4dC4gV2hlbiB1c2luZyBPcGVuU2hpZnQsIGxlYXZlIGVtcHR5IHRvIG1ha2UgaXQgYXV0b21hdGljYWxseSBkZXRlcm1pbmVkLiIsInR5cGUiOiJzdHJpbmcifSwiaW1hZ2VQdWxsUG9saWN5Ijp7ImRlZmF1bHQiOiJJZk5vdFByZXNlbnQiLCJkZXNjcmlwdGlvbiI6ImBpbWFnZVB1bGxQb2xpY3lgIGlzIHRoZSBLdWJlcm5ldGVzIHB1bGwgcG9saWN5IGZvciB0aGUgaW1hZ2UgZGVmaW5lZCBhYm92ZSIsImVudW0iOlsiSWZOb3RQcmVzZW50IiwiQWx3YXlzIiwiTmV2ZXIiXSwidHlwZSI6InN0cmluZyJ9LCJrYWZrYUNvbnN1bWVyQXV0b3NjYWxlciI6eyJkZXNjcmlwdGlvbiI6ImBrYWZrYUNvbnN1bWVyQXV0b3NjYWxlcmAgaXMgdGhlIHNwZWMgb2YgYSBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyIHRvIHNldCB1cCBmb3IgYGZsb3dsb2dzLXBpcGVsaW5lLXRyYW5zZm9ybWVyYCwgd2hpY2ggY29uc3VtZXMgS2Fma2EgbWVzc2FnZXMuXG5UaGlzIHNldHRpbmcgaXMgaWdub3JlZCB3aGVuIEthZmthIGlzIGRpc2FibGVkLiIsInByb3BlcnRpZXMiOnsibWF4UmVwbGljYXMiOnsiZGVmYXVsdCI6MywiZGVzY3JpcHRpb24iOiJgbWF4UmVwbGljYXNgIGlzIHRoZSB1cHBlciBsaW1pdCBmb3IgdGhlIG51bWJlciBvZiBwb2RzIHRoYXQgY2FuIGJlIHNldCBieSB0aGUgYXV0b3NjYWxlcjsgY2Fubm90IGJlIHNtYWxsZXIgdGhhbiBNaW5SZXBsaWNhcy4iLCJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sIm1ldHJpY3MiOnsiZGVzY3JpcHRpb24iOiJNZXRyaWNzIHVzZWQgYnkgdGhlIHBvZCBhdXRvc2NhbGVyLiBGb3IgZG9jdW1lbnRhdGlvbiwgcmVmZXIgdG8gaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvcmVmZXJlbmNlL2t1YmVybmV0ZXMtYXBpL3dvcmtsb2FkLXJlc291cmNlcy9ob3Jpem9udGFsLXBvZC1hdXRvc2NhbGVyLXYyLyIsIml0ZW1zIjp7InByb3BlcnRpZXMiOnsiY29udGFpbmVyUmVzb3VyY2UiOnsicHJvcGVydGllcyI6eyJjb250YWluZXIiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7InR5cGUiOiJzdHJpbmcifSwidGFyZ2V0Ijp7InByb3BlcnRpZXMiOnsiYXZlcmFnZVV0aWxpemF0aW9uIjp7ImZvcm1hdCI6ImludDMyIiwidHlwZSI6ImludGVnZXIifSwiYXZlcmFnZVZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJ0eXBlIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX19LCJyZXF1aXJlZCI6WyJ0eXBlIl0sInR5cGUiOiJvYmplY3QifX0sInJlcXVpcmVkIjpbImNvbnRhaW5lciIsIm5hbWUiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJleHRlcm5hbCI6eyJwcm9wZXJ0aWVzIjp7Im1ldHJpYyI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJzZWxlY3RvciI6eyJwcm9wZXJ0aWVzIjp7Im1hdGNoRXhwcmVzc2lvbnMiOnsiaXRlbXMiOnsicHJvcGVydGllcyI6eyJrZXkiOnsidHlwZSI6InN0cmluZyJ9LCJvcGVyYXRvciI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlcyI6eyJpdGVtcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSIsIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbImtleSIsIm9wZXJhdG9yIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9LCJtYXRjaExhYmVscyI6eyJhZGRpdGlvbmFsUHJvcGVydGllcyI6eyJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QiLCJ4LWt1YmVybmV0ZXMtbWFwLXR5cGUiOiJhdG9taWMifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibWV0cmljIiwidGFyZ2V0Il0sInR5cGUiOiJvYmplY3QifSwib2JqZWN0Ijp7InByb3BlcnRpZXMiOnsiZGVzY3JpYmVkT2JqZWN0Ijp7InByb3BlcnRpZXMiOnsiYXBpVmVyc2lvbiI6eyJ0eXBlIjoic3RyaW5nIn0sImtpbmQiOnsidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7InR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImtpbmQiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwibWV0cmljIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7InByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImtleSI6eyJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInRhcmdldCI6eyJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJkZXNjcmliZWRPYmplY3QiLCJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJwb2RzIjp7InByb3BlcnRpZXMiOnsibWV0cmljIjp7InByb3BlcnRpZXMiOnsibmFtZSI6eyJ0eXBlIjoic3RyaW5nIn0sInNlbGVjdG9yIjp7InByb3BlcnRpZXMiOnsibWF0Y2hFeHByZXNzaW9ucyI6eyJpdGVtcyI6eyJwcm9wZXJ0aWVzIjp7ImtleSI6eyJ0eXBlIjoic3RyaW5nIn0sIm9wZXJhdG9yIjp7InR5cGUiOiJzdHJpbmcifSwidmFsdWVzIjp7Iml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5IiwieC1rdWJlcm5ldGVzLWxpc3QtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsia2V5Iiwib3BlcmF0b3IiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC10eXBlIjoiYXRvbWljIn0sIm1hdGNoTGFiZWxzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCIsIngta3ViZXJuZXRlcy1tYXAtdHlwZSI6ImF0b21pYyJ9fSwicmVxdWlyZWQiOlsibmFtZSJdLCJ0eXBlIjoib2JqZWN0In0sInRhcmdldCI6eyJwcm9wZXJ0aWVzIjp7ImF2ZXJhZ2VVdGlsaXphdGlvbiI6eyJmb3JtYXQiOiJpbnQzMiIsInR5cGUiOiJpbnRlZ2VyIn0sImF2ZXJhZ2VWYWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfSwidHlwZSI6eyJ0eXBlIjoic3RyaW5nIn0sInZhbHVlIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In19LCJyZXF1aXJlZCI6WyJtZXRyaWMiLCJ0YXJnZXQiXSwidHlwZSI6Im9iamVjdCJ9LCJyZXNvdXJjZSI6eyJwcm9wZXJ0aWVzIjp7Im5hbWUiOnsidHlwZSI6InN0cmluZyJ9LCJ0YXJnZXQiOnsicHJvcGVydGllcyI6eyJhdmVyYWdlVXRpbGl6YXRpb24iOnsiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJhdmVyYWdlVmFsdWUiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9LCJ2YWx1ZSI6eyJhbnlPZiI6W3sidHlwZSI6ImludGVnZXIifSx7InR5cGUiOiJzdHJpbmcifV0sInBhdHRlcm4iOiJeKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKChbS01HVFBFXWkpfFtudW1rTUdUUEVdfChbZUVdKFxcK3wtKT8oKFswLTldKyhcXC5bMC05XSopPyl8KFxcLlswLTldKykpKSk/JCIsIngta3ViZXJuZXRlcy1pbnQtb3Itc3RyaW5nIjp0cnVlfX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwicmVxdWlyZWQiOlsibmFtZSIsInRhcmdldCJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOnsidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsidHlwZSJdLCJ0eXBlIjoib2JqZWN0In0sInR5cGUiOiJhcnJheSJ9LCJtaW5SZXBsaWNhcyI6eyJkZXNjcmlwdGlvbiI6ImBtaW5SZXBsaWNhc2AgaXMgdGhlIGxvd2VyIGxpbWl0IGZvciB0aGUgbnVtYmVyIG9mIHJlcGxpY2FzIHRvIHdoaWNoIHRoZSBhdXRvc2NhbGVyXG5jYW4gc2NhbGUgZG93bi4gSXQgZGVmYXVsdHMgdG8gMSBwb2QuIG1pblJlcGxpY2FzIGlzIGFsbG93ZWQgdG8gYmUgMCBpZiB0aGVcbmFscGhhIGZlYXR1cmUgZ2F0ZSBIUEFTY2FsZVRvWmVybyBpcyBlbmFibGVkIGFuZCBhdCBsZWFzdCBvbmUgT2JqZWN0IG9yIEV4dGVybmFsXG5tZXRyaWMgaXMgY29uZmlndXJlZC4gU2NhbGluZyBpcyBhY3RpdmUgYXMgbG9uZyBhcyBhdCBsZWFzdCBvbmUgbWV0cmljIHZhbHVlIGlzXG5hdmFpbGFibGUuIiwiZm9ybWF0IjoiaW50MzIiLCJ0eXBlIjoiaW50ZWdlciJ9LCJzdGF0dXMiOnsiZGVmYXVsdCI6IkRpc2FibGVkIiwiZGVzY3JpcHRpb24iOiJgc3RhdHVzYCBkZXNjcmliZXMgdGhlIGRlc2lyZWQgc3RhdHVzIHJlZ2FyZGluZyBkZXBsb3lpbmcgYW4gaG9yaXpvbnRhbCBwb2QgYXV0b3NjYWxlci5cdTAwM2Niclx1MDAzZVxuLSBgRGlzYWJsZWRgIGRvZXMgbm90IGRlcGxveSBhbiBob3Jpem9udGFsIHBvZCBhdXRvc2NhbGVyLlx1MDAzY2JyXHUwMDNlXG4tIGBFbmFibGVkYCBkZXBsb3lzIGFuIGhvcml6b250YWwgcG9kIGF1dG9zY2FsZXIuXHUwMDNjYnJcdTAwM2UiLCJlbnVtIjpbIkRpc2FibGVkIiwiRW5hYmxlZCJdLCJ0eXBlIjoic3RyaW5nIn19LCJ0eXBlIjoib2JqZWN0In0sImthZmthQ29uc3VtZXJCYXRjaFNpemUiOnsiZGVmYXVsdCI6MTA0ODU3NjAsImRlc2NyaXB0aW9uIjoiYGthZmthQ29uc3VtZXJCYXRjaFNpemVgIGluZGljYXRlcyB0byB0aGUgYnJva2VyIHRoZSBtYXhpbXVtIGJhdGNoIHNpemUsIGluIGJ5dGVzLCB0aGF0IHRoZSBjb25zdW1lciBhY2NlcHRzLiBJZ25vcmVkIHdoZW4gbm90IHVzaW5nIEthZmthLiBEZWZhdWx0OiAxME1CLiIsInR5cGUiOiJpbnRlZ2VyIn0sImthZmthQ29uc3VtZXJRdWV1ZUNhcGFjaXR5Ijp7ImRlZmF1bHQiOjEwMDAsImRlc2NyaXB0aW9uIjoiYGthZmthQ29uc3VtZXJRdWV1ZUNhcGFjaXR5YCBkZWZpbmVzIHRoZSBjYXBhY2l0eSBvZiB0aGUgaW50ZXJuYWwgbWVzc2FnZSBxdWV1ZSB1c2VkIGluIHRoZSBLYWZrYSBjb25zdW1lciBjbGllbnQuIElnbm9yZWQgd2hlbiBub3QgdXNpbmcgS2Fma2EuIiwidHlwZSI6ImludGVnZXIifSwia2Fma2FDb25zdW1lclJlcGxpY2FzIjp7ImRlZmF1bHQiOjMsImRlc2NyaXB0aW9uIjoiYGthZmthQ29uc3VtZXJSZXBsaWNhc2AgZGVmaW5lcyB0aGUgbnVtYmVyIG9mIHJlcGxpY2FzIChwb2RzKSB0byBzdGFydCBmb3IgYGZsb3dsb2dzLXBpcGVsaW5lLXRyYW5zZm9ybWVyYCwgd2hpY2ggY29uc3VtZXMgS2Fma2EgbWVzc2FnZXMuXG5UaGlzIHNldHRpbmcgaXMgaWdub3JlZCB3aGVuIEthZmthIGlzIGRpc2FibGVkLiIsImZvcm1hdCI6ImludDMyIiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwibG9nTGV2ZWwiOnsiZGVmYXVsdCI6ImluZm8iLCJkZXNjcmlwdGlvbiI6ImBsb2dMZXZlbGAgb2YgdGhlIHByb2Nlc3NvciBydW50aW1lIiwiZW51bSI6WyJ0cmFjZSIsImRlYnVnIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImZhdGFsIiwicGFuaWMiXSwidHlwZSI6InN0cmluZyJ9LCJsb2dUeXBlcyI6eyJkZWZhdWx0IjoiRmxvd3MiLCJkZXNjcmlwdGlvbiI6ImBsb2dUeXBlc2AgZGVmaW5lcyB0aGUgZGVzaXJlZCByZWNvcmQgdHlwZXMgdG8gZ2VuZXJhdGUuIFBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2Vcbi0gYEZsb3dzYCAoZGVmYXVsdCkgdG8gZXhwb3J0IHJlZ3VsYXIgbmV0d29yayBmbG93c1x1MDAzY2JyXHUwMDNlXG4tIGBDb252ZXJzYXRpb25zYCB0byBnZW5lcmF0ZSBldmVudHMgZm9yIHN0YXJ0ZWQgY29udmVyc2F0aW9ucywgZW5kZWQgY29udmVyc2F0aW9ucyBhcyB3ZWxsIGFzIHBlcmlvZGljIFwidGlja1wiIHVwZGF0ZXNcdTAwM2Niclx1MDAzZVxuLSBgRW5kZWRDb252ZXJzYXRpb25zYCB0byBnZW5lcmF0ZSBvbmx5IGVuZGVkIGNvbnZlcnNhdGlvbnMgZXZlbnRzXHUwMDNjYnJcdTAwM2Vcbi0gYEFsbGAgdG8gZ2VuZXJhdGUgYm90aCBuZXR3b3JrIGZsb3dzIGFuZCBhbGwgY29udmVyc2F0aW9ucyBldmVudHNcdTAwM2Niclx1MDAzZSIsImVudW0iOlsiRmxvd3MiLCJDb252ZXJzYXRpb25zIiwiRW5kZWRDb252ZXJzYXRpb25zIiwiQWxsIl0sInR5cGUiOiJzdHJpbmcifSwibWV0cmljcyI6eyJkZXNjcmlwdGlvbiI6ImBNZXRyaWNzYCBkZWZpbmUgdGhlIHByb2Nlc3NvciBjb25maWd1cmF0aW9uIHJlZ2FyZGluZyBtZXRyaWNzIiwicHJvcGVydGllcyI6eyJkaXNhYmxlQWxlcnRzIjp7ImRlc2NyaXB0aW9uIjoiYGRpc2FibGVBbGVydHNgIGlzIGEgbGlzdCBvZiBhbGVydHMgdGhhdCBzaG91bGQgYmUgZGlzYWJsZWQuXG5Qb3NzaWJsZSB2YWx1ZXMgYXJlOlx1MDAzY2JyXHUwMDNlXG5gTmV0T2JzZXJ2Tm9GbG93c2AsIHdoaWNoIGlzIHRyaWdnZXJlZCB3aGVuIG5vIGZsb3dzIGFyZSBiZWluZyBvYnNlcnZlZCBmb3IgYSBjZXJ0YWluIHBlcmlvZC5cdTAwM2Niclx1MDAzZVxuYE5ldE9ic2Vydkxva2lFcnJvcmAsIHdoaWNoIGlzIHRyaWdnZXJlZCB3aGVuIGZsb3dzIGFyZSBiZWluZyBkcm9wcGVkIGR1ZSB0byBMb2tpIGVycm9ycy5cdTAwM2Niclx1MDAzZSIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiBhIHByb2Nlc3NvciBhbGVydC5cblBvc3NpYmxlIHZhbHVlcyBhcmU6XHUwMDNjYnJcdTAwM2Vcbi0gYE5ldE9ic2Vydk5vRmxvd3NgLCB3aGljaCBpcyB0cmlnZ2VyZWQgd2hlbiBubyBmbG93cyBhcmUgYmVpbmcgb2JzZXJ2ZWQgZm9yIGEgY2VydGFpbiBwZXJpb2QuXHUwMDNjYnJcdTAwM2Vcbi0gYE5ldE9ic2Vydkxva2lFcnJvcmAsIHdoaWNoIGlzIHRyaWdnZXJlZCB3aGVuIGZsb3dzIGFyZSBiZWluZyBkcm9wcGVkIGR1ZSB0byBMb2tpIGVycm9ycy5cdTAwM2Niclx1MDAzZSIsImVudW0iOlsiTmV0T2JzZXJ2Tm9GbG93cyIsIk5ldE9ic2Vydkxva2lFcnJvciJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJpbmNsdWRlTGlzdCI6eyJkZXNjcmlwdGlvbiI6ImBpbmNsdWRlTGlzdGAgaXMgYSBsaXN0IG9mIG1ldHJpYyBuYW1lcyB0byBzcGVjaWZ5IHdoaWNoIG9uZXMgdG8gZ2VuZXJhdGUuXG5UaGUgbmFtZXMgY29ycmVzcG9uZCB0byB0aGUgbmFtZXMgaW4gUHJvbWV0aGV1cyB3aXRob3V0IHRoZSBwcmVmaXguIEZvciBleGFtcGxlLFxuYG5hbWVzcGFjZV9lZ3Jlc3NfcGFja2V0c190b3RhbGAgc2hvd3MgdXAgYXMgYG5ldG9ic2Vydl9uYW1lc3BhY2VfZWdyZXNzX3BhY2tldHNfdG90YWxgIGluIFByb21ldGhldXMuXG5Ob3RlIHRoYXQgdGhlIG1vcmUgbWV0cmljcyB5b3UgYWRkLCB0aGUgYmlnZ2VyIGlzIHRoZSBpbXBhY3Qgb24gUHJvbWV0aGV1cyB3b3JrbG9hZCByZXNvdXJjZXMuXG5NZXRyaWNzIGVuYWJsZWQgYnkgZGVmYXVsdCBhcmU6XG5gbmFtZXNwYWNlX2Zsb3dzX3RvdGFsYCwgYG5vZGVfaW5ncmVzc19ieXRlc190b3RhbGAsIGBub2RlX2VncmVzc19ieXRlc190b3RhbGAsIGB3b3JrbG9hZF9pbmdyZXNzX2J5dGVzX3RvdGFsYCxcbmB3b3JrbG9hZF9lZ3Jlc3NfYnl0ZXNfdG90YWxgLCBgbmFtZXNwYWNlX2Ryb3BfcGFja2V0c190b3RhbGAgKHdoZW4gYFBhY2tldERyb3BgIGZlYXR1cmUgaXMgZW5hYmxlZCksXG5gbmFtZXNwYWNlX3J0dF9zZWNvbmRzYCAod2hlbiBgRmxvd1JUVGAgZmVhdHVyZSBpcyBlbmFibGVkKSwgYG5hbWVzcGFjZV9kbnNfbGF0ZW5jeV9zZWNvbmRzYCAod2hlbiBgRE5TVHJhY2tpbmdgIGZlYXR1cmUgaXMgZW5hYmxlZCkuXG5Nb3JlIGluZm9ybWF0aW9uLCB3aXRoIGZ1bGwgbGlzdCBvZiBhdmFpbGFibGUgbWV0cmljczogaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IvYmxvYi9tYWluL2RvY3MvTWV0cmljcy5tZCIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiTWV0cmljIG5hbWUuIE1vcmUgaW5mb3JtYXRpb24gaW4gaHR0cHM6Ly9naXRodWIuY29tL25ldG9ic2Vydi9uZXR3b3JrLW9ic2VydmFiaWxpdHktb3BlcmF0b3IvYmxvYi9tYWluL2RvY3MvTWV0cmljcy5tZC4iLCJlbnVtIjpbIm5hbWVzcGFjZV9lZ3Jlc3NfYnl0ZXNfdG90YWwiLCJuYW1lc3BhY2VfZWdyZXNzX3BhY2tldHNfdG90YWwiLCJuYW1lc3BhY2VfaW5ncmVzc19ieXRlc190b3RhbCIsIm5hbWVzcGFjZV9pbmdyZXNzX3BhY2tldHNfdG90YWwiLCJuYW1lc3BhY2VfZmxvd3NfdG90YWwiLCJub2RlX2VncmVzc19ieXRlc190b3RhbCIsIm5vZGVfZWdyZXNzX3BhY2tldHNfdG90YWwiLCJub2RlX2luZ3Jlc3NfYnl0ZXNfdG90YWwiLCJub2RlX2luZ3Jlc3NfcGFja2V0c190b3RhbCIsIm5vZGVfZmxvd3NfdG90YWwiLCJ3b3JrbG9hZF9lZ3Jlc3NfYnl0ZXNfdG90YWwiLCJ3b3JrbG9hZF9lZ3Jlc3NfcGFja2V0c190b3RhbCIsIndvcmtsb2FkX2luZ3Jlc3NfYnl0ZXNfdG90YWwiLCJ3b3JrbG9hZF9pbmdyZXNzX3BhY2tldHNfdG90YWwiLCJ3b3JrbG9hZF9mbG93c190b3RhbCIsIm5hbWVzcGFjZV9kcm9wX2J5dGVzX3RvdGFsIiwibmFtZXNwYWNlX2Ryb3BfcGFja2V0c190b3RhbCIsIm5vZGVfZHJvcF9ieXRlc190b3RhbCIsIm5vZGVfZHJvcF9wYWNrZXRzX3RvdGFsIiwid29ya2xvYWRfZHJvcF9ieXRlc190b3RhbCIsIndvcmtsb2FkX2Ryb3BfcGFja2V0c190b3RhbCIsIm5hbWVzcGFjZV9ydHRfc2Vjb25kcyIsIm5vZGVfcnR0X3NlY29uZHMiLCJ3b3JrbG9hZF9ydHRfc2Vjb25kcyIsIm5hbWVzcGFjZV9kbnNfbGF0ZW5jeV9zZWNvbmRzIiwibm9kZV9kbnNfbGF0ZW5jeV9zZWNvbmRzIiwid29ya2xvYWRfZG5zX2xhdGVuY3lfc2Vjb25kcyJdLCJ0eXBlIjoic3RyaW5nIn0sInR5cGUiOiJhcnJheSJ9LCJzZXJ2ZXIiOnsiZGVzY3JpcHRpb24iOiJNZXRyaWNzIHNlcnZlciBlbmRwb2ludCBjb25maWd1cmF0aW9uIGZvciBQcm9tZXRoZXVzIHNjcmFwZXIiLCJwcm9wZXJ0aWVzIjp7InBvcnQiOnsiZGVzY3JpcHRpb24iOiJUaGUgbWV0cmljcyBzZXJ2ZXIgSFRUUCBwb3J0LiIsImZvcm1hdCI6ImludDMyIiwibWF4aW11bSI6NjU1MzUsIm1pbmltdW0iOjEsInR5cGUiOiJpbnRlZ2VyIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uLiIsInByb3BlcnRpZXMiOnsiaW5zZWN1cmVTa2lwVmVyaWZ5Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6ImBpbnNlY3VyZVNraXBWZXJpZnlgIGFsbG93cyBza2lwcGluZyBjbGllbnQtc2lkZSB2ZXJpZmljYXRpb24gb2YgdGhlIHByb3ZpZGVkIGNlcnRpZmljYXRlLlxuSWYgc2V0IHRvIGB0cnVlYCwgdGhlIGBwcm92aWRlZENhRmlsZWAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJwcm92aWRlZCI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjb25maWd1cmF0aW9uIHdoZW4gYHR5cGVgIGlzIHNldCB0byBgUHJvdmlkZWRgLiIsInByb3BlcnRpZXMiOnsiY2VydEZpbGUiOnsiZGVzY3JpcHRpb24iOiJgY2VydEZpbGVgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiIsInR5cGUiOiJzdHJpbmcifSwiY2VydEtleSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0S2V5YCBkZWZpbmVzIHRoZSBwYXRoIHRvIHRoZSBjZXJ0aWZpY2F0ZSBwcml2YXRlIGtleSBmaWxlIG5hbWUgd2l0aGluIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldC4gT21pdCB3aGVuIHRoZSBrZXkgaXMgbm90IG5lY2Vzc2FyeS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJOYW1lIG9mIHRoZSBjb25maWcgbWFwIG9yIHNlY3JldCBjb250YWluaW5nIGNlcnRpZmljYXRlcy4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiBJZiBvbWl0dGVkLCB0aGUgZGVmYXVsdCBpcyB0byB1c2UgdGhlIHNhbWUgbmFtZXNwYWNlIGFzIHdoZXJlIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBpcyBkZXBsb3llZC5cbklmIHRoZSBuYW1lc3BhY2UgaXMgZGlmZmVyZW50LCB0aGUgY29uZmlnIG1hcCBvciB0aGUgc2VjcmV0IGlzIGNvcGllZCBzbyB0aGF0IGl0IGNhbiBiZSBtb3VudGVkIGFzIHJlcXVpcmVkLiIsInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6IlR5cGUgZm9yIHRoZSBjZXJ0aWZpY2F0ZSByZWZlcmVuY2U6IGBjb25maWdtYXBgIG9yIGBzZWNyZXRgLiIsImVudW0iOlsiY29uZmlnbWFwIiwic2VjcmV0Il0sInR5cGUiOiJzdHJpbmcifX0sInR5cGUiOiJvYmplY3QifSwicHJvdmlkZWRDYUZpbGUiOnsiZGVzY3JpcHRpb24iOiJSZWZlcmVuY2UgdG8gdGhlIENBIGZpbGUgd2hlbiBgdHlwZWAgaXMgc2V0IHRvIGBQcm92aWRlZGAuIiwicHJvcGVydGllcyI6eyJmaWxlIjp7ImRlc2NyaXB0aW9uIjoiRmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJuYW1lIjp7ImRlc2NyaXB0aW9uIjoiTmFtZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyB0aGUgZmlsZS4iLCJ0eXBlIjoic3RyaW5nIn0sIm5hbWVzcGFjZSI6eyJkZWZhdWx0IjoiIiwiZGVzY3JpcHRpb24iOiJOYW1lc3BhY2Ugb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgdGhlIGZpbGUuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGZpbGUgcmVmZXJlbmNlOiBcImNvbmZpZ21hcFwiIG9yIFwic2VjcmV0XCIuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjp7ImRlZmF1bHQiOiJEaXNhYmxlZCIsImRlc2NyaXB0aW9uIjoiU2VsZWN0IHRoZSB0eXBlIG9mIFRMUyBjb25maWd1cmF0aW9uOlx1MDAzY2JyXHUwMDNlXG4tIGBEaXNhYmxlZGAgKGRlZmF1bHQpIHRvIG5vdCBjb25maWd1cmUgVExTIGZvciB0aGUgZW5kcG9pbnQuXG4tIGBQcm92aWRlZGAgdG8gbWFudWFsbHkgcHJvdmlkZSBjZXJ0IGZpbGUgYW5kIGEga2V5IGZpbGUuIFtVbnN1cHBvcnRlZCAoKildLlxuLSBgQXV0b2AgdG8gdXNlIE9wZW5TaGlmdCBhdXRvIGdlbmVyYXRlZCBjZXJ0aWZpY2F0ZSB1c2luZyBhbm5vdGF0aW9ucy4iLCJlbnVtIjpbIkRpc2FibGVkIiwiUHJvdmlkZWQiLCJBdXRvIl0sInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbInR5cGUiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtdWx0aUNsdXN0ZXJEZXBsb3ltZW50Ijp7ImRlZmF1bHQiOmZhbHNlLCJkZXNjcmlwdGlvbiI6IlNldCBgbXVsdGlDbHVzdGVyRGVwbG95bWVudGAgdG8gYHRydWVgIHRvIGVuYWJsZSBtdWx0aSBjbHVzdGVycyBmZWF0dXJlLiBUaGlzIGFkZHMgYGNsdXN0ZXJOYW1lYCBsYWJlbCB0byBmbG93cyBkYXRhIiwidHlwZSI6ImJvb2xlYW4ifSwicmVzb3VyY2VzIjp7ImRlZmF1bHQiOnsibGltaXRzIjp7Im1lbW9yeSI6IjgwME1pIn0sInJlcXVlc3RzIjp7ImNwdSI6IjEwMG0iLCJtZW1vcnkiOiIxMDBNaSJ9fSwiZGVzY3JpcHRpb24iOiJgcmVzb3VyY2VzYCBhcmUgdGhlIGNvbXB1dGUgcmVzb3VyY2VzIHJlcXVpcmVkIGJ5IHRoaXMgY29udGFpbmVyLlxuRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSBodHRwczovL2t1YmVybmV0ZXMuaW8vZG9jcy9jb25jZXB0cy9jb25maWd1cmF0aW9uL21hbmFnZS1yZXNvdXJjZXMtY29udGFpbmVycy8iLCJwcm9wZXJ0aWVzIjp7ImNsYWltcyI6eyJkZXNjcmlwdGlvbiI6IkNsYWltcyBsaXN0cyB0aGUgbmFtZXMgb2YgcmVzb3VyY2VzLCBkZWZpbmVkIGluIHNwZWMucmVzb3VyY2VDbGFpbXMsXG50aGF0IGFyZSB1c2VkIGJ5IHRoaXMgY29udGFpbmVyLlxuXG5UaGlzIGlzIGFuIGFscGhhIGZpZWxkIGFuZCByZXF1aXJlcyBlbmFibGluZyB0aGVcbkR5bmFtaWNSZXNvdXJjZUFsbG9jYXRpb24gZmVhdHVyZSBnYXRlLlxuXG5UaGlzIGZpZWxkIGlzIGltbXV0YWJsZS4gSXQgY2FuIG9ubHkgYmUgc2V0IGZvciBjb250YWluZXJzLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiUmVzb3VyY2VDbGFpbSByZWZlcmVuY2VzIG9uZSBlbnRyeSBpbiBQb2RTcGVjLlJlc291cmNlQ2xhaW1zLiIsInByb3BlcnRpZXMiOnsibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgbXVzdCBtYXRjaCB0aGUgbmFtZSBvZiBvbmUgZW50cnkgaW4gcG9kLnNwZWMucmVzb3VyY2VDbGFpbXMgb2ZcbnRoZSBQb2Qgd2hlcmUgdGhpcyBmaWVsZCBpcyB1c2VkLiBJdCBtYWtlcyB0aGF0IHJlc291cmNlIGF2YWlsYWJsZVxuaW5zaWRlIGEgY29udGFpbmVyLiIsInR5cGUiOiJzdHJpbmcifSwicmVxdWVzdCI6eyJkZXNjcmlwdGlvbiI6IlJlcXVlc3QgaXMgdGhlIG5hbWUgY2hvc2VuIGZvciBhIHJlcXVlc3QgaW4gdGhlIHJlZmVyZW5jZWQgY2xhaW0uXG5JZiBlbXB0eSwgZXZlcnl0aGluZyBmcm9tIHRoZSBjbGFpbSBpcyBtYWRlIGF2YWlsYWJsZSwgb3RoZXJ3aXNlXG5vbmx5IHRoZSByZXN1bHQgb2YgdGhpcyByZXF1ZXN0LiIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbIm5hbWUiXSwidHlwZSI6Im9iamVjdCJ9LCJ0eXBlIjoiYXJyYXkiLCJ4LWt1YmVybmV0ZXMtbGlzdC1tYXAta2V5cyI6WyJuYW1lIl0sIngta3ViZXJuZXRlcy1saXN0LXR5cGUiOiJtYXAifSwibGltaXRzIjp7ImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjp7ImFueU9mIjpbeyJ0eXBlIjoiaW50ZWdlciJ9LHsidHlwZSI6InN0cmluZyJ9XSwicGF0dGVybiI6Il4oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkoKFtLTUdUUEVdaSl8W251bWtNR1RQRV18KFtlRV0oXFwrfC0pPygoWzAtOV0rKFxcLlswLTldKik/KXwoXFwuWzAtOV0rKSkpKT8kIiwieC1rdWJlcm5ldGVzLWludC1vci1zdHJpbmciOnRydWV9LCJkZXNjcmlwdGlvbiI6IkxpbWl0cyBkZXNjcmliZXMgdGhlIG1heGltdW0gYW1vdW50IG9mIGNvbXB1dGUgcmVzb3VyY2VzIGFsbG93ZWQuXG5Nb3JlIGluZm86IGh0dHBzOi8va3ViZXJuZXRlcy5pby9kb2NzL2NvbmNlcHRzL2NvbmZpZ3VyYXRpb24vbWFuYWdlLXJlc291cmNlcy1jb250YWluZXJzLyIsInR5cGUiOiJvYmplY3QifSwicmVxdWVzdHMiOnsiYWRkaXRpb25hbFByb3BlcnRpZXMiOnsiYW55T2YiOlt7InR5cGUiOiJpbnRlZ2VyIn0seyJ0eXBlIjoic3RyaW5nIn1dLCJwYXR0ZXJuIjoiXihcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSgoW0tNR1RQRV1pKXxbbnVta01HVFBFXXwoW2VFXShcXCt8LSk/KChbMC05XSsoXFwuWzAtOV0qKT8pfChcXC5bMC05XSspKSkpPyQiLCJ4LWt1YmVybmV0ZXMtaW50LW9yLXN0cmluZyI6dHJ1ZX0sImRlc2NyaXB0aW9uIjoiUmVxdWVzdHMgZGVzY3JpYmVzIHRoZSBtaW5pbXVtIGFtb3VudCBvZiBjb21wdXRlIHJlc291cmNlcyByZXF1aXJlZC5cbklmIFJlcXVlc3RzIGlzIG9taXR0ZWQgZm9yIGEgY29udGFpbmVyLCBpdCBkZWZhdWx0cyB0byBMaW1pdHMgaWYgdGhhdCBpcyBleHBsaWNpdGx5IHNwZWNpZmllZCxcbm90aGVyd2lzZSB0byBhbiBpbXBsZW1lbnRhdGlvbi1kZWZpbmVkIHZhbHVlLiBSZXF1ZXN0cyBjYW5ub3QgZXhjZWVkIExpbWl0cy5cbk1vcmUgaW5mbzogaHR0cHM6Ly9rdWJlcm5ldGVzLmlvL2RvY3MvY29uY2VwdHMvY29uZmlndXJhdGlvbi9tYW5hZ2UtcmVzb3VyY2VzLWNvbnRhaW5lcnMvIiwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJzdWJuZXRMYWJlbHMiOnsiZGVzY3JpcHRpb24iOiJgc3VibmV0TGFiZWxzYCBhbGxvd3MgdG8gZGVmaW5lIGN1c3RvbSBsYWJlbHMgb24gc3VibmV0cyBhbmQgSVBzIG9yIHRvIGVuYWJsZSBhdXRvbWF0aWMgbGFiZWxsaW5nIG9mIHJlY29nbml6ZWQgc3VibmV0cyBpbiBPcGVuU2hpZnQsIHdoaWNoIGlzIHVzZWQgdG8gaWRlbnRpZnkgY2x1c3RlciBleHRlcm5hbCB0cmFmZmljLlxuV2hlbiBhIHN1Ym5ldCBtYXRjaGVzIHRoZSBzb3VyY2Ugb3IgZGVzdGluYXRpb24gSVAgb2YgYSBmbG93LCBhIGNvcnJlc3BvbmRpbmcgZmllbGQgaXMgYWRkZWQ6IGBTcmNTdWJuZXRMYWJlbGAgb3IgYERzdFN1Ym5ldExhYmVsYC4iLCJwcm9wZXJ0aWVzIjp7ImN1c3RvbUxhYmVscyI6eyJkZXNjcmlwdGlvbiI6ImBjdXN0b21MYWJlbHNgIGFsbG93cyB0byBjdXN0b21pemUgc3VibmV0cyBhbmQgSVBzIGxhYmVsbGluZywgc3VjaCBhcyB0byBpZGVudGlmeSBjbHVzdGVyLWV4dGVybmFsIHdvcmtsb2FkcyBvciB3ZWIgc2VydmljZXMuXG5JZiB5b3UgZW5hYmxlIGBvcGVuU2hpZnRBdXRvRGV0ZWN0YCwgYGN1c3RvbUxhYmVsc2AgY2FuIG92ZXJyaWRlIHRoZSBkZXRlY3RlZCBzdWJuZXRzIGluIGNhc2UgdGhleSBvdmVybGFwLiIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiU3VibmV0TGFiZWwgYWxsb3dzIHRvIGxhYmVsIHN1Ym5ldHMgYW5kIElQcywgc3VjaCBhcyB0byBpZGVudGlmeSBjbHVzdGVyLWV4dGVybmFsIHdvcmtsb2FkcyBvciB3ZWIgc2VydmljZXMuIiwicHJvcGVydGllcyI6eyJjaWRycyI6eyJkZXNjcmlwdGlvbiI6Ikxpc3Qgb2YgQ0lEUnMsIHN1Y2ggYXMgYFtcIjEuMi4zLjQvMzJcIl1gLiIsIml0ZW1zIjp7InR5cGUiOiJzdHJpbmcifSwidHlwZSI6ImFycmF5In0sIm5hbWUiOnsiZGVzY3JpcHRpb24iOiJMYWJlbCBuYW1lLCB1c2VkIHRvIGZsYWcgbWF0Y2hpbmcgZmxvd3MuIiwidHlwZSI6InN0cmluZyJ9fSwicmVxdWlyZWQiOlsiY2lkcnMiLCJuYW1lIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm9wZW5TaGlmdEF1dG9EZXRlY3QiOnsiZGVzY3JpcHRpb24iOiJgb3BlblNoaWZ0QXV0b0RldGVjdGAgYWxsb3dzLCB3aGVuIHNldCB0byBgdHJ1ZWAsIHRvIGRldGVjdCBhdXRvbWF0aWNhbGx5IHRoZSBtYWNoaW5lcywgcG9kcyBhbmQgc2VydmljZXMgc3VibmV0cyBiYXNlZCBvbiB0aGVcbk9wZW5TaGlmdCBpbnN0YWxsIGNvbmZpZ3VyYXRpb24gYW5kIHRoZSBDbHVzdGVyIE5ldHdvcmsgT3BlcmF0b3IgY29uZmlndXJhdGlvbi4gSW5kaXJlY3RseSwgdGhpcyBpcyBhIHdheSB0byBhY2N1cmF0ZWx5IGRldGVjdFxuZXh0ZXJuYWwgdHJhZmZpYzogZmxvd3MgdGhhdCBhcmUgbm90IGxhYmVsZWQgZm9yIHRob3NlIHN1Ym5ldHMgYXJlIGV4dGVybmFsIHRvIHRoZSBjbHVzdGVyLiBFbmFibGVkIGJ5IGRlZmF1bHQgb24gT3BlblNoaWZ0LiIsInR5cGUiOiJib29sZWFuIn19LCJ0eXBlIjoib2JqZWN0In19LCJ0eXBlIjoib2JqZWN0In0sInByb21ldGhldXMiOnsiZGVzY3JpcHRpb24iOiJgcHJvbWV0aGV1c2AgZGVmaW5lcyBQcm9tZXRoZXVzIHNldHRpbmdzLCBzdWNoIGFzIHF1ZXJpZXIgY29uZmlndXJhdGlvbiB1c2VkIHRvIGZldGNoIG1ldHJpY3MgZnJvbSB0aGUgQ29uc29sZSBwbHVnaW4uIiwicHJvcGVydGllcyI6eyJxdWVyaWVyIjp7ImRlc2NyaXB0aW9uIjoiUHJvbWV0aGV1cyBxdWVyeWluZyBjb25maWd1cmF0aW9uLCBzdWNoIGFzIGNsaWVudCBzZXR0aW5ncywgdXNlZCBpbiB0aGUgQ29uc29sZSBwbHVnaW4uIiwicHJvcGVydGllcyI6eyJlbmFibGUiOnsiZGVzY3JpcHRpb24iOiJXaGVuIGBlbmFibGVgIGlzIGB0cnVlYCwgdGhlIENvbnNvbGUgcGx1Z2luIHF1ZXJpZXMgZmxvdyBtZXRyaWNzIGZyb20gUHJvbWV0aGV1cyBpbnN0ZWFkIG9mIExva2kgd2hlbmV2ZXIgcG9zc2libGUuXG5JdCBpcyBlbmJhbGVkIGJ5IGRlZmF1bHQ6IHNldCBpdCB0byBgZmFsc2VgIHRvIGRpc2FibGUgdGhpcyBmZWF0dXJlLlxuVGhlIENvbnNvbGUgcGx1Z2luIGNhbiB1c2UgZWl0aGVyIExva2kgb3IgUHJvbWV0aGV1cyBhcyBhIGRhdGEgc291cmNlIGZvciBtZXRyaWNzIChzZWUgYWxzbyBgc3BlYy5sb2tpYCksIG9yIGJvdGguXG5Ob3QgYWxsIHF1ZXJpZXMgYXJlIHRyYW5zcG9zYWJsZSBmcm9tIExva2kgdG8gUHJvbWV0aGV1cy4gSGVuY2UsIGlmIExva2kgaXMgZGlzYWJsZWQsIHNvbWUgZmVhdHVyZXMgb2YgdGhlIHBsdWdpbiBhcmUgZGlzYWJsZWQgYXMgd2VsbCxcbnN1Y2ggYXMgZ2V0dGluZyBwZXItcG9kIGluZm9ybWF0aW9uIG9yIHZpZXdpbmcgcmF3IGZsb3dzLlxuSWYgYm90aCBQcm9tZXRoZXVzIGFuZCBMb2tpIGFyZSBlbmFibGVkLCBQcm9tZXRoZXVzIHRha2VzIHByZWNlZGVuY2UgYW5kIExva2kgaXMgdXNlZCBhcyBhIGZhbGxiYWNrIGZvciBxdWVyaWVzIHRoYXQgUHJvbWV0aGV1cyBjYW5ub3QgaGFuZGxlLlxuSWYgdGhleSBhcmUgYm90aCBkaXNhYmxlZCwgdGhlIENvbnNvbGUgcGx1Z2luIGlzIG5vdCBkZXBsb3llZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJtYW51YWwiOnsiZGVzY3JpcHRpb24iOiJQcm9tZXRoZXVzIGNvbmZpZ3VyYXRpb24gZm9yIGBNYW51YWxgIG1vZGUuIiwicHJvcGVydGllcyI6eyJmb3J3YXJkVXNlclRva2VuIjp7ImRlc2NyaXB0aW9uIjoiU2V0IGB0cnVlYCB0byBmb3J3YXJkIGxvZ2dlZCBpbiB1c2VyIHRva2VuIGluIHF1ZXJpZXMgdG8gUHJvbWV0aGV1cyIsInR5cGUiOiJib29sZWFuIn0sInRscyI6eyJkZXNjcmlwdGlvbiI6IlRMUyBjbGllbnQgY29uZmlndXJhdGlvbiBmb3IgUHJvbWV0aGV1cyBVUkwuIiwicHJvcGVydGllcyI6eyJjYUNlcnQiOnsiZGVzY3JpcHRpb24iOiJgY2FDZXJ0YCBkZWZpbmVzIHRoZSByZWZlcmVuY2Ugb2YgdGhlIGNlcnRpZmljYXRlIGZvciB0aGUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJlbmFibGUiOnsiZGVmYXVsdCI6ZmFsc2UsImRlc2NyaXB0aW9uIjoiRW5hYmxlIFRMUyIsInR5cGUiOiJib29sZWFuIn0sImluc2VjdXJlU2tpcFZlcmlmeSI6eyJkZWZhdWx0IjpmYWxzZSwiZGVzY3JpcHRpb24iOiJgaW5zZWN1cmVTa2lwVmVyaWZ5YCBhbGxvd3Mgc2tpcHBpbmcgY2xpZW50LXNpZGUgdmVyaWZpY2F0aW9uIG9mIHRoZSBzZXJ2ZXIgY2VydGlmaWNhdGUuXG5JZiBzZXQgdG8gYHRydWVgLCB0aGUgYGNhQ2VydGAgZmllbGQgaXMgaWdub3JlZC4iLCJ0eXBlIjoiYm9vbGVhbiJ9LCJ1c2VyQ2VydCI6eyJkZXNjcmlwdGlvbiI6ImB1c2VyQ2VydGAgZGVmaW5lcyB0aGUgdXNlciBjZXJ0aWZpY2F0ZSByZWZlcmVuY2UgYW5kIGlzIHVzZWQgZm9yIG1UTFMgKHlvdSBjYW4gaWdub3JlIGl0IHdoZW4gdXNpbmcgb25lLXdheSBUTFMpIiwicHJvcGVydGllcyI6eyJjZXJ0RmlsZSI6eyJkZXNjcmlwdGlvbiI6ImBjZXJ0RmlsZWAgZGVmaW5lcyB0aGUgcGF0aCB0byB0aGUgY2VydGlmaWNhdGUgZmlsZSBuYW1lIHdpdGhpbiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQuIiwidHlwZSI6InN0cmluZyJ9LCJjZXJ0S2V5Ijp7ImRlc2NyaXB0aW9uIjoiYGNlcnRLZXlgIGRlZmluZXMgdGhlIHBhdGggdG8gdGhlIGNlcnRpZmljYXRlIHByaXZhdGUga2V5IGZpbGUgbmFtZSB3aXRoaW4gdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0LiBPbWl0IHdoZW4gdGhlIGtleSBpcyBub3QgbmVjZXNzYXJ5LiIsInR5cGUiOiJzdHJpbmcifSwibmFtZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWUgb2YgdGhlIGNvbmZpZyBtYXAgb3Igc2VjcmV0IGNvbnRhaW5pbmcgY2VydGlmaWNhdGVzLiIsInR5cGUiOiJzdHJpbmcifSwibmFtZXNwYWNlIjp7ImRlZmF1bHQiOiIiLCJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSBvZiB0aGUgY29uZmlnIG1hcCBvciBzZWNyZXQgY29udGFpbmluZyBjZXJ0aWZpY2F0ZXMuIElmIG9taXR0ZWQsIHRoZSBkZWZhdWx0IGlzIHRvIHVzZSB0aGUgc2FtZSBuYW1lc3BhY2UgYXMgd2hlcmUgbmV0d29yayBvYnNlcnZhYmlsaXR5IGlzIGRlcGxveWVkLlxuSWYgdGhlIG5hbWVzcGFjZSBpcyBkaWZmZXJlbnQsIHRoZSBjb25maWcgbWFwIG9yIHRoZSBzZWNyZXQgaXMgY29waWVkIHNvIHRoYXQgaXQgY2FuIGJlIG1vdW50ZWQgYXMgcmVxdWlyZWQuIiwidHlwZSI6InN0cmluZyJ9LCJ0eXBlIjp7ImRlc2NyaXB0aW9uIjoiVHlwZSBmb3IgdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZTogYGNvbmZpZ21hcGAgb3IgYHNlY3JldGAuIiwiZW51bSI6WyJjb25maWdtYXAiLCJzZWNyZXQiXSwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9LCJ1cmwiOnsiZGVmYXVsdCI6Imh0dHA6Ly9wcm9tZXRoZXVzOjkwOTAiLCJkZXNjcmlwdGlvbiI6ImB1cmxgIGlzIHRoZSBhZGRyZXNzIG9mIGFuIGV4aXN0aW5nIFByb21ldGhldXMgc2VydmljZSB0byB1c2UgZm9yIHF1ZXJ5aW5nIG1ldHJpY3MuIiwidHlwZSI6InN0cmluZyJ9fSwidHlwZSI6Im9iamVjdCJ9LCJtb2RlIjp7ImRlZmF1bHQiOiJBdXRvIiwiZGVzY3JpcHRpb24iOiJgbW9kZWAgbXVzdCBiZSBzZXQgYWNjb3JkaW5nIHRvIHRoZSB0eXBlIG9mIFByb21ldGhldXMgaW5zdGFsbGF0aW9uIHRoYXQgc3RvcmVzIG5ldHdvcmsgb2JzZXJ2YWJpbGl0eSBtZXRyaWNzOlx1MDAzY2JyXHUwMDNlXG4tIFVzZSBgQXV0b2AgdG8gdHJ5IGNvbmZpZ3VyaW5nIGF1dG9tYXRpY2FsbHkuIEluIE9wZW5TaGlmdCwgaXQgdXNlcyB0aGUgVGhhbm9zIHF1ZXJpZXIgZnJvbSBPcGVuU2hpZnQgQ2x1c3RlciBNb25pdG9yaW5nXHUwMDNjYnJcdTAwM2Vcbi0gVXNlIGBNYW51YWxgIGZvciBhIG1hbnVhbCBzZXR1cFx1MDAzY2JyXHUwMDNlIiwiZW51bSI6WyJNYW51YWwiLCJBdXRvIl0sInR5cGUiOiJzdHJpbmcifSwidGltZW91dCI6eyJkZWZhdWx0IjoiMzBzIiwiZGVzY3JpcHRpb24iOiJgdGltZW91dGAgaXMgdGhlIHJlYWQgdGltZW91dCBmb3IgY29uc29sZSBwbHVnaW4gcXVlcmllcyB0byBQcm9tZXRoZXVzLlxuQSB0aW1lb3V0IG9mIHplcm8gbWVhbnMgbm8gdGltZW91dC4iLCJ0eXBlIjoic3RyaW5nIn19LCJyZXF1aXJlZCI6WyJtb2RlIl0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifX0sInR5cGUiOiJvYmplY3QifSwic3RhdHVzIjp7ImRlc2NyaXB0aW9uIjoiYEZsb3dDb2xsZWN0b3JTdGF0dXNgIGRlZmluZXMgdGhlIG9ic2VydmVkIHN0YXRlIG9mIEZsb3dDb2xsZWN0b3IiLCJwcm9wZXJ0aWVzIjp7ImNvbmRpdGlvbnMiOnsiZGVzY3JpcHRpb24iOiJgY29uZGl0aW9uc2AgcmVwcmVzZW50IHRoZSBsYXRlc3QgYXZhaWxhYmxlIG9ic2VydmF0aW9ucyBvZiBhbiBvYmplY3QncyBzdGF0ZSIsIml0ZW1zIjp7ImRlc2NyaXB0aW9uIjoiQ29uZGl0aW9uIGNvbnRhaW5zIGRldGFpbHMgZm9yIG9uZSBhc3BlY3Qgb2YgdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhpcyBBUEkgUmVzb3VyY2UuIiwicHJvcGVydGllcyI6eyJsYXN0VHJhbnNpdGlvblRpbWUiOnsiZGVzY3JpcHRpb24iOiJsYXN0VHJhbnNpdGlvblRpbWUgaXMgdGhlIGxhc3QgdGltZSB0aGUgY29uZGl0aW9uIHRyYW5zaXRpb25lZCBmcm9tIG9uZSBzdGF0dXMgdG8gYW5vdGhlci5cblRoaXMgc2hvdWxkIGJlIHdoZW4gdGhlIHVuZGVybHlpbmcgY29uZGl0aW9uIGNoYW5nZWQuICBJZiB0aGF0IGlzIG5vdCBrbm93biwgdGhlbiB1c2luZyB0aGUgdGltZSB3aGVuIHRoZSBBUEkgZmllbGQgY2hhbmdlZCBpcyBhY2NlcHRhYmxlLiIsImZvcm1hdCI6ImRhdGUtdGltZSIsInR5cGUiOiJzdHJpbmcifSwibWVzc2FnZSI6eyJkZXNjcmlwdGlvbiI6Im1lc3NhZ2UgaXMgYSBodW1hbiByZWFkYWJsZSBtZXNzYWdlIGluZGljYXRpbmcgZGV0YWlscyBhYm91dCB0aGUgdHJhbnNpdGlvbi5cblRoaXMgbWF5IGJlIGFuIGVtcHR5IHN0cmluZy4iLCJtYXhMZW5ndGgiOjMyNzY4LCJ0eXBlIjoic3RyaW5nIn0sIm9ic2VydmVkR2VuZXJhdGlvbiI6eyJkZXNjcmlwdGlvbiI6Im9ic2VydmVkR2VuZXJhdGlvbiByZXByZXNlbnRzIHRoZSAubWV0YWRhdGEuZ2VuZXJhdGlvbiB0aGF0IHRoZSBjb25kaXRpb24gd2FzIHNldCBiYXNlZCB1cG9uLlxuRm9yIGluc3RhbmNlLCBpZiAubWV0YWRhdGEuZ2VuZXJhdGlvbiBpcyBjdXJyZW50bHkgMTIsIGJ1dCB0aGUgLnN0YXR1cy5jb25kaXRpb25zW3hdLm9ic2VydmVkR2VuZXJhdGlvbiBpcyA5LCB0aGUgY29uZGl0aW9uIGlzIG91dCBvZiBkYXRlXG53aXRoIHJlc3BlY3QgdG8gdGhlIGN1cnJlbnQgc3RhdGUgb2YgdGhlIGluc3RhbmNlLiIsImZvcm1hdCI6ImludDY0IiwibWluaW11bSI6MCwidHlwZSI6ImludGVnZXIifSwicmVhc29uIjp7ImRlc2NyaXB0aW9uIjoicmVhc29uIGNvbnRhaW5zIGEgcHJvZ3JhbW1hdGljIGlkZW50aWZpZXIgaW5kaWNhdGluZyB0aGUgcmVhc29uIGZvciB0aGUgY29uZGl0aW9uJ3MgbGFzdCB0cmFuc2l0aW9uLlxuUHJvZHVjZXJzIG9mIHNwZWNpZmljIGNvbmRpdGlvbiB0eXBlcyBtYXkgZGVmaW5lIGV4cGVjdGVkIHZhbHVlcyBhbmQgbWVhbmluZ3MgZm9yIHRoaXMgZmllbGQsXG5hbmQgd2hldGhlciB0aGUgdmFsdWVzIGFyZSBjb25zaWRlcmVkIGEgZ3VhcmFudGVlZCBBUEkuXG5UaGUgdmFsdWUgc2hvdWxkIGJlIGEgQ2FtZWxDYXNlIHN0cmluZy5cblRoaXMgZmllbGQgbWF5IG5vdCBiZSBlbXB0eS4iLCJtYXhMZW5ndGgiOjEwMjQsIm1pbkxlbmd0aCI6MSwicGF0dGVybiI6Il5bQS1aYS16XShbQS1aYS16MC05Xyw6XSpbQS1aYS16MC05X10pPyQiLCJ0eXBlIjoic3RyaW5nIn0sInN0YXR1cyI6eyJkZXNjcmlwdGlvbiI6InN0YXR1cyBvZiB0aGUgY29uZGl0aW9uLCBvbmUgb2YgVHJ1ZSwgRmFsc2UsIFVua25vd24uIiwiZW51bSI6WyJUcnVlIiwiRmFsc2UiLCJVbmtub3duIl0sInR5cGUiOiJzdHJpbmcifSwidHlwZSI6eyJkZXNjcmlwdGlvbiI6InR5cGUgb2YgY29uZGl0aW9uIGluIENhbWVsQ2FzZSBvciBpbiBmb28uZXhhbXBsZS5jb20vQ2FtZWxDYXNlLiIsIm1heExlbmd0aCI6MzE2LCJwYXR0ZXJuIjoiXihbYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPyhcXC5bYS16MC05XShbLWEtejAtOV0qW2EtejAtOV0pPykqLyk/KChbQS1aYS16MC05XVstQS1aYS16MC05Xy5dKik/W0EtWmEtejAtOV0pJCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImxhc3RUcmFuc2l0aW9uVGltZSIsIm1lc3NhZ2UiLCJyZWFzb24iLCJzdGF0dXMiLCJ0eXBlIl0sInR5cGUiOiJvYmplY3QifSwidHlwZSI6ImFycmF5In0sIm5hbWVzcGFjZSI6eyJkZXNjcmlwdGlvbiI6Ik5hbWVzcGFjZSB3aGVyZSBjb25zb2xlIHBsdWdpbiBhbmQgZmxvd2xvZ3MtcGlwZWxpbmUgaGF2ZSBiZWVuIGRlcGxveWVkLlxuRGVwcmVjYXRlZDogYW5ub3RhdGlvbnMgYXJlIHVzZWQgaW5zdGVhZCIsInR5cGUiOiJzdHJpbmcifX0sInJlcXVpcmVkIjpbImNvbmRpdGlvbnMiXSwidHlwZSI6Im9iamVjdCJ9fSwidHlwZSI6Im9iamVjdCJ9fSwic2VydmVkIjp0cnVlLCJzdG9yYWdlIjp0cnVlLCJzdWJyZXNvdXJjZXMiOnsic3RhdHVzIjp7fX19XX0sInN0YXR1cyI6eyJhY2NlcHRlZE5hbWVzIjp7ImtpbmQiOiIiLCJwbHVyYWwiOiIifSwiY29uZGl0aW9ucyI6bnVsbCwic3RvcmVkVmVyc2lvbnMiOm51bGx9fQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiAxMjcuMC4wLjE6ODA4MFxud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0IjoiaHR0cHMifV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:c3be91efcd4cd272f5dc3eabe53ac76f04bc22adbe61f86d42e83e77f092cd36
    name: console_plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:9bc712edc0e96525c59c46e8693939ab48514ce6f4b41e3ccf115ad8f6140b96
    name: ebpf_agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:28bdb6eae77da596c0def119c879e4fb3849065243fc804f4abf5480453b7b6d
    name: flowlogs_pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:3a3c70c990bd3a012453857698433d674b98445e55cc9c5c4ed38eea29eb82b1
    name: ""
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:93328e2f6e95c9cce31e096c6591c91d419471ef13f441b3f20b16984f3f2f9d
    name: network-observability-rhel9-operator-93328e2f6e95c9cce31e096c6591c91d419471ef13f441b3f20b16984f3f2f9d-annotation
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:93328e2f6e95c9cce31e096c6591c91d419471ef13f441b3f20b16984f3f2f9d
    name: manager
  - image: registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e34f912158985525f6efb3c4b675f20854fc677c867d12fe3cd2e971309428dc
    name: kube-rbac-proxy
schema: olm.bundle
---
image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:915bda5fb695b0dc06fafd6cfcd35d02050d8ec1eb9872da79f9b7328c39140e
name: network-observability-operator.v1.8.0
package: netobserv-operator
properties:
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta1
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowCollector
      version: v1beta2
  - type: olm.gvk
    value:
      group: flows.netobserv.io
      kind: FlowMetric
      version: v1alpha1
  - type: olm.package
    value:
      packageName: netobserv-operator
      version: 1.8.0
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: 
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoibW9uaXRvcmluZy5jb3Jlb3MuY29tL3YxIiwia2luZCI6IlNlcnZpY2VNb25pdG9yIiwibWV0YWRhdGEiOnsibGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLW1vbml0b3IifSwic3BlYyI6eyJlbmRwb2ludHMiOlt7ImJlYXJlclRva2VuRmlsZSI6Ii92YXIvcnVuL3NlY3JldHMva3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC90b2tlbiIsImludGVydmFsIjoiMzBzIiwicGF0aCI6Ii9tZXRyaWNzIiwicG9ydCI6Imh0dHBzIiwic2NoZW1lIjoiaHR0cHMiLCJ0bHNDb25maWciOnsiY2FGaWxlIjoiL2V0Yy9wcm9tZXRoZXVzL2NvbmZpZ21hcHMvc2VydmluZy1jZXJ0cy1jYS1idW5kbGUvc2VydmljZS1jYS5jcnQiLCJzZXJ2ZXJOYW1lIjoibmV0b2JzZXJ2LW1ldHJpY3Mtc2VydmljZS5vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLnN2YyJ9fV0sInNlbGVjdG9yIjp7Im1hdGNoTGFiZWxzIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX19fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlIiwibWV0YWRhdGEiOnsiY3JlYXRpb25UaW1lc3RhbXAiOm51bGwsIm5hbWUiOiJuZXRvYnNlcnYtb3BlbnNoaWZ0LW5ldG9ic2Vydi1vcGVyYXRvci1wcm9tZXRoZXVzIn0sInJ1bGVzIjpbeyJhcGlHcm91cHMiOlsiIl0sInJlc291cmNlcyI6WyJzZXJ2aWNlcyIsImVuZHBvaW50cyIsInBvZHMiXSwidmVyYnMiOlsiZ2V0IiwibGlzdCIsIndhdGNoIl19XX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pby92MSIsImtpbmQiOiJSb2xlQmluZGluZyIsIm1ldGFkYXRhIjp7ImNyZWF0aW9uVGltZXN0YW1wIjpudWxsLCJuYW1lIjoibmV0b2JzZXJ2LW9wZW5zaGlmdC1uZXRvYnNlcnYtb3BlcmF0b3ItcHJvbWV0aGV1cyJ9LCJyb2xlUmVmIjp7ImFwaUdyb3VwIjoicmJhYy5hdXRob3JpemF0aW9uLms4cy5pbyIsImtpbmQiOiJSb2xlIiwibmFtZSI6Im5ldG9ic2Vydi1vcGVuc2hpZnQtbmV0b2JzZXJ2LW9wZXJhdG9yLXByb21ldGhldXMifSwic3ViamVjdHMiOlt7ImtpbmQiOiJTZXJ2aWNlQWNjb3VudCIsIm5hbWUiOiJwcm9tZXRoZXVzLWs4cyIsIm5hbWVzcGFjZSI6Im9wZW5zaGlmdC1tb25pdG9yaW5nIn1dfQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJkYXRhIjp7ImNvbnRyb2xsZXJfbWFuYWdlcl9jb25maWcueWFtbCI6ImFwaVZlcnNpb246IGNvbnRyb2xsZXItcnVudGltZS5zaWdzLms4cy5pby92MWFscGhhMVxua2luZDogQ29udHJvbGxlck1hbmFnZXJDb25maWdcbmhlYWx0aDpcbiAgaGVhbHRoUHJvYmVCaW5kQWRkcmVzczogOjgwODFcbm1ldHJpY3M6XG4gIGJpbmRBZGRyZXNzOiA6ODQ0M1xud2ViaG9vazpcbiAgcG9ydDogOTQ0M1xubGVhZGVyRWxlY3Rpb246XG4gIGxlYWRlckVsZWN0OiB0cnVlXG4gIHJlc291cmNlTmFtZTogN2E3ZWNkY2QubmV0b2JzZXJ2LmlvXG4ifSwia2luZCI6IkNvbmZpZ01hcCIsIm1ldGFkYXRhIjp7ImxhYmVscyI6eyJhcHAiOiJuZXRvYnNlcnYtb3BlcmF0b3IifSwibmFtZSI6Im5ldG9ic2Vydi1tYW5hZ2VyLWNvbmZpZyJ9fQ==
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoibWFuYWdlci1tZXRyaWNzLXRscyJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcCI6Im5ldG9ic2Vydi1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifSwibmFtZSI6Im5ldG9ic2Vydi1tZXRyaWNzLXNlcnZpY2UifSwic3BlYyI6eyJwb3J0cyI6W3sibmFtZSI6Imh0dHBzIiwicG9ydCI6ODQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo4NDQzfV0sInNlbGVjdG9yIjp7ImFwcCI6Im5ldG9ic2Vydi1vcGVyYXRvciIsImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
  - type: olm.bundle.object
    value:
      data: eyJhcGlWZXJzaW9uIjoidjEiLCJraW5kIjoiU2VydmljZSIsIm1ldGFkYXRhIjp7ImFubm90YXRpb25zIjp7InNlcnZpY2UuYmV0YS5vcGVuc2hpZnQuaW8vc2VydmluZy1jZXJ0LXNlY3JldC1uYW1lIjoid2ViaG9vay1zZXJ2ZXItY2VydCJ9LCJjcmVhdGlvblRpbWVzdGFtcCI6bnVsbCwibGFiZWxzIjp7ImFwcC5rdWJlcm5ldGVzLmlvL2NvbXBvbmVudCI6IndlYmhvb2siLCJhcHAua3ViZXJuZXRlcy5pby9jcmVhdGVkLWJ5IjoibmV0b2JzZXJ2LW9wZXJhdG9yIiwiYXBwLmt1YmVybmV0ZXMuaW8vaW5zdGFuY2UiOiJ3ZWJob29rLXNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9tYW5hZ2VkLWJ5Ijoia3VzdG9taXplIiwiYXBwLmt1YmVybmV0ZXMuaW8vbmFtZSI6InNlcnZpY2UiLCJhcHAua3ViZXJuZXRlcy5pby9wYXJ0LW9mIjoibmV0b2JzZXJ2LW9wZXJhdG9yIn0sIm5hbWUiOiJuZXRvYnNlcnYtd2ViaG9vay1zZXJ2aWNlIn0sInNwZWMiOnsicG9ydHMiOlt7InBvcnQiOjQ0MywicHJvdG9jb2wiOiJUQ1AiLCJ0YXJnZXRQb3J0Ijo5NDQzfV0sInNlbGVjdG9yIjp7ImNvbnRyb2wtcGxhbmUiOiJjb250cm9sbGVyLW1hbmFnZXIifX0sInN0YXR1cyI6eyJsb2FkQmFsYW5jZXIiOnt9fX0=
relatedImages:
  - image: registry.redhat.io/network-observability/network-observability-console-plugin-rhel9@sha256:3f286d805c1f4ef75b24e358d5e0b7a177d969830014863147b824e01fab2a8b
    name: console-plugin
  - image: registry.redhat.io/network-observability/network-observability-ebpf-agent-rhel9@sha256:d91c6c7adf32e56da9233bcb8f8a20d040e4bc980ac14242029ee585bf03eff0
    name: ebpf-agent
  - image: registry.redhat.io/network-observability/network-observability-flowlogs-pipeline-rhel9@sha256:f19d15add3c310aa807a28a2d1ff34f5ee1dd50ade98aa81446e5dbb717874aa
    name: flowlogs-pipeline
  - image: registry.redhat.io/network-observability/network-observability-operator-bundle@sha256:915bda5fb695b0dc06fafd6cfcd35d02050d8ec1eb9872da79f9b7328c39140e
    name: bundle
  - image: registry.redhat.io/network-observability/network-observability-rhel9-operator@sha256:6aaf7341693b1c7be7189fd33dd042aa954c3db4c1f693c3c90f8039eb6d4abd
    name: manager
schema: olm.bundle
